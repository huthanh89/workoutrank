/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/client/js/index.coffee");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/pug-runtime/index.js":
/*!*******************************************!*\
  !*** ./node_modules/pug-runtime/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '', className, padding = '', escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '', padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    return val + '';\n  }\n};\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (val === false || val == null || !val && (key === 'class' || key === 'style')) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  if (typeof val.toJSON === 'function') {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + '=\\'' + val.replace(/'/g, '&#39;') + '\\'';\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n};\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse){\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html){\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34: escape = '&quot;'; break;\n      case 38: escape = '&amp;'; break;\n      case 60: escape = '&lt;'; break;\n      case 62: escape = '&gt;'; break;\n      default: continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str){\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str = str || __webpack_require__(/*! fs */ \"fs\").readFileSync(filename, 'utf8')\n  } catch (ex) {\n    pug_rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Pug') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n\n\n//# sourceURL=webpack:///./node_modules/pug-runtime/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-define.js":
/*!***************************************!*\
  !*** (webpack)/buildin/amd-define.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/amd-define.js?");

/***/ }),

/***/ "./src/client/js/application.coffee":
/*!******************************************!*\
  !*** ./src/client/js/application.coffee ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//-------------------------------------------------------------------------------\n// Imports\n//-------------------------------------------------------------------------------\nvar Application, Backbone, GA, GCT, Marionette, Radio, RootView, User, rootChannel;\n\nGA = __webpack_require__(/*! ./ga */ \"./src/client/js/ga.coffee\");\n\nGCT = __webpack_require__(/*! ./gct */ \"./src/client/js/gct.coffee\");\n\nBackbone = __webpack_require__(/*! backbone */ \"backbone\");\n\nRadio = __webpack_require__(/*! backbone.radio */ \"backbone.radio\");\n\nMarionette = __webpack_require__(/*! backbone.marionette */ \"backbone.marionette\");\n\n//IndexRouter = require './routers/index/router'\n//MainRouter  = require './routers/main/router'\n//UserRouter  = require './routers/user/router'\n//AdminRouter = require './routers/admin/router'\nRootView = __webpack_require__(/*! ./view */ \"./src/client/js/view.coffee\");\n\n//-------------------------------------------------------------------------------\n// Channels\n//-------------------------------------------------------------------------------\nrootChannel = Radio.channel('root');\n\nUser = (function() {\n  //-------------------------------------------------------------------------------\n  // User\n  //-------------------------------------------------------------------------------\n  class User extends Backbone.Model {};\n\n  User.prototype.url = '/api/user';\n\n  User.prototype.defaults = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    height: 0,\n    gender: 0,\n    auth: 1\n  };\n\n  return User;\n\n}).call(this);\n\nApplication = (function() {\n  //-------------------------------------------------------------------------------\n  // Create Application.\n  //-------------------------------------------------------------------------------\n  class Application extends Marionette.Application {\n    // Send route url to google analytics.\n    // Send conversion data for specific routes.\n    trackAnalytics(route) {\n      rootChannel.request('clear:navigation', route);\n      if (route === 'login' || route === 'signup' || route === 'index' || route === 'about' || route === 'feedback') {\n        $('#navigator').hide();\n      } else {\n        $('#navigator').show();\n      }\n      this.googleAnalytics.send(route);\n      if (route === 'signup') {\n        this.googleTrackingConversion.send();\n      }\n    }\n\n    onStart() {\n      // Start Google analytics\n      this.googleAnalytics = new GA();\n      // Start Google adword conversion tracker.\n      this.googleTrackingConversion = new GCT();\n      rootChannel.reply({\n        'get:route': () => {\n          return this.route;\n        },\n        // Workaround for the refresh and navigate which will called twice.\n        // Trigger set to false so method will not get called twice.\n        navigate: (route) => {\n          Backbone.history.navigate(route, {\n            trigger: false\n          });\n          this.trackAnalytics(route);\n        }\n      });\n      // Show Root view.\n      this.showView(new RootView({\n        user: new User()\n      }));\n      /*\n       * All router must be initialized before backbone.history starts to work.\n\n      new IndexRouter\n      mode:          'auto'\n      trailingSlash: 'ignore'\n\n      new MainRouter\n      mode:          'auto'\n      trailingSlash: 'ignore'\n\n      new UserRouter\n      mode:          'auto'\n      trailingSlash: 'ignore'\n\n      new AdminRouter\n      mode:          'auto'\n      trailingSlash: 'ignore'\n       */\n      // Called when url is changed during navigation.\n      Backbone.history.on('route', (router, route) => {\n        this.trackAnalytics(route);\n      });\n      // Start backbone history a main step to bookmark-able url's.\n      Backbone.history.start({\n        pushState: true,\n        hashChange: false\n      });\n    }\n\n  };\n\n  Application.prototype.region = 'body';\n\n  return Application;\n\n}).call(this);\n\n//-------------------------------------------------------------------------------\n// Exports\n//-------------------------------------------------------------------------------\nmodule.exports = Application;\n\n//-------------------------------------------------------------------------------\n\n\n//# sourceURL=webpack:///./src/client/js/application.coffee?");

/***/ }),

/***/ "./src/client/js/ga.coffee":
/*!*********************************!*\
  !*** ./src/client/js/ga.coffee ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//-------------------------------------------------------------------------------\n// Google Analytics\n\n//   Send report to google analytics.\n//-------------------------------------------------------------------------------\nvar GoogleAnalytic;\n\nGoogleAnalytic = class GoogleAnalytic {\n  send(route) {\n    (function() {      // Set username and id.\n      /*\n        _gaq = _gaq or []\n        _gaq.push [\n          '_setAccount'\n          'UA-74126093-1'\n        ]\n\n      */\n      // Get javascript and create tag.\n      var ga, s;\n      ga = document.createElement('script');\n      ga.type = 'text/javascript';\n      ga.async = true;\n      ga.src = ('https:' === document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n      s = document.getElementsByTagName('script')[0];\n      return s.parentNode.insertBefore(ga, s);\n    })();\n    // Call the track page view function and append route.\n    //    _gaq.push(['_trackPageview', \"/#{route}\"])\n\n    //  ga('set', 'page', \"/#{route}\")\n\n    // Send page view to google analytics.\n    ga('create', 'UA-74126093-1', 'auto');\n    ga('send', 'pageview', `/${route}`);\n  }\n\n};\n\n//-------------------------------------------------------------------------------\n// Exports\n//-------------------------------------------------------------------------------\nmodule.exports = GoogleAnalytic;\n\n//-------------------------------------------------------------------------------\n\n\n//# sourceURL=webpack:///./src/client/js/ga.coffee?");

/***/ }),

/***/ "./src/client/js/gct.coffee":
/*!**********************************!*\
  !*** ./src/client/js/gct.coffee ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//-------------------------------------------------------------------------------\n// Google Conversion Tracking (Adwords)\n\n//   Send report to google Adwords.\n//-------------------------------------------------------------------------------\nvar GoogleConversionTracker;\n\nGoogleConversionTracker = class GoogleConversionTracker {\n  send() {\n    window.google_trackConversion({\n      google_conversion_id: 958303564,\n      google_conversion_language: 'en',\n      google_conversion_format: '3',\n      google_conversion_color: 'ffffff',\n      google_conversion_label: 'cC-oCMqy72kQzJr6yAM',\n      google_remarketing_only: false\n    });\n  }\n\n};\n\n//-------------------------------------------------------------------------------\n// Exports\n//-------------------------------------------------------------------------------\nmodule.exports = GoogleConversionTracker;\n\n//-------------------------------------------------------------------------------\n\n\n//# sourceURL=webpack:///./src/client/js/gct.coffee?");

/***/ }),

/***/ "./src/client/js/index.coffee":
/*!************************************!*\
  !*** ./src/client/js/index.coffee ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//-------------------------------------------------------------------------------\n// Imports\n//-------------------------------------------------------------------------------\nvar $, Application, Highstock;\n\n$ = __webpack_require__(/*! jquery */ \"jquery\");\n\nHighstock = __webpack_require__(/*! highstock */ \"./src/client/vendor/js/highstock.js\");\n\nApplication = __webpack_require__(/*! ./application */ \"./src/client/js/application.coffee\");\n\n//-------------------------------------------------------------------------------\n// Load in Bootstrap\n//-------------------------------------------------------------------------------\n__webpack_require__(/*! bootstrap */ \"bootstrap\");\n\n//-------------------------------------------------------------------------------\n// Set Highstock option for through out our project to change the date\n// to GMT +0\n//-------------------------------------------------------------------------------\nHighstock.setOptions({\n  global: {\n    useUTC: false\n  }\n});\n\n//-------------------------------------------------------------------------------\n// Google Analytics\n//-------------------------------------------------------------------------------\n(function(i, s, o, g, r, a, m) {\n  i['GoogleAnalyticsObject'] = r;\n  i[r] = i[r] || function() {\n    (i[r].q = i[r].q || []).push(arguments);\n  };\n  i[r].l = 1 * new Date;\n  a = s.createElement(o);\n  m = s.getElementsByTagName(o)[0];\n  a.async = 1;\n  a.src = g;\n  m.parentNode.insertBefore(a, m);\n})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\nga('create', 'UA-74126093-1', 'auto');\n\n//-------------------------------------------------------------------------------\n// Starting point.\n//-------------------------------------------------------------------------------\n$(function() {\n  // When setting up everything for application is done, call start.\n  new Application().start();\n});\n\n//-------------------------------------------------------------------------------\n\n\n//# sourceURL=webpack:///./src/client/js/index.coffee?");

/***/ }),

/***/ "./src/client/js/view.coffee":
/*!***********************************!*\
  !*** ./src/client/js/view.coffee ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//-------------------------------------------------------------------------------\n// Imports\n//-------------------------------------------------------------------------------\nvar Marionette, Radio, Toastr, View, navChannel, rootChannel, userChannel, viewTemplate;\n\nRadio = __webpack_require__(/*! backbone.radio */ \"backbone.radio\");\n\nToastr = __webpack_require__(/*! toastr */ \"./src/client/vendor/js/toastr.js\");\n\nMarionette = __webpack_require__(/*! backbone.marionette */ \"backbone.marionette\");\n\n//Nav          = require './nav/module'\n//LoaderView   = require './loader/view'\n//FooterView   = require './footer/view'\nviewTemplate = __webpack_require__(/*! ./view.pug */ \"./src/client/js/view.pug\");\n\n//-------------------------------------------------------------------------------\n// Channels\n//-------------------------------------------------------------------------------\nnavChannel = Radio.channel('nav');\n\nrootChannel = Radio.channel('root');\n\nuserChannel = Radio.channel('user');\n\nView = (function() {\n  //-------------------------------------------------------------------------------\n  // RootView\n  //-------------------------------------------------------------------------------\n  class View extends Marionette.View {\n    constructor(options) {\n      var user;\n      super(optons);\n      user = options.user;\n      userChannel.reply({\n        user: function() {\n          return user;\n        },\n        auth: function() {\n          return user.get('auth');\n        },\n        isOwner: function() {\n          return parseInt(user.get('auth'), 10) === 1;\n        },\n        logout: function() {\n          return user.clear().set(user.defaults);\n        }\n      });\n      rootChannel.reply({\n        'rootview': () => {\n          return this;\n        },\n        'message:error': function(response) {\n          rootChannel.request('spin:page:loader', false);\n          //if response.status is 401\n          //  @showChildView 'content', new ErrorView()\n          //else\n          Toastr.options = {\n            closeButton: true,\n            debug: false,\n            newestOnTop: false,\n            progressBar: true,\n            preventDuplicates: false,\n            onclick: null,\n            showDuration: '5000',\n            hideDuration: '5000',\n            timeOut: '5000',\n            extendedTimeOut: '5000',\n            showEasing: 'swing',\n            hideEasing: 'linear',\n            showMethod: 'fadeIn',\n            hideMethod: 'fadeOut',\n            positionClass: 'toast-top-center'\n          };\n          return Toastr.error(response.responseText, `Error: ${response.status} ${response.statusText}`);\n        },\n        'spin:page:loader': (enable) => {\n          if (enable) {\n            this.showChildView('loader', new LoaderView());\n          } else {\n            this.getRegion('loader').empty();\n          }\n        }\n      });\n      navChannel.reply({\n        'nav:index': () => {\n          rootChannel.request('drawer:close');\n          this.showChildView('header', new Nav.Index());\n          this.showChildView('drawer', new Nav.Drawer());\n        },\n        'nav:basic': () => {\n          rootChannel.request('drawer:close');\n          this.showChildView('header', new Nav.Basic());\n          this.showChildView('drawer', new Nav.Drawer());\n        },\n        'nav:main': () => {\n          rootChannel.request('drawer:close');\n          this.getRegion('index').empty();\n          user.fetch({\n            success: () => {\n              this.showChildView('header', new Nav.Main({\n                model: user\n              }));\n              this.showChildView('drawer', new Nav.Drawer());\n            },\n            error: function(model, response) {\n              rootChannel.request('message:error', response);\n            }\n          });\n        }\n      });\n    }\n\n  };\n\n  View.prototype.template = viewTemplate;\n\n  View.prototype.regions = {\n    header: '#header',\n    loader: '#loader',\n    content: '#content',\n    index: '#index',\n    footer: '#footer',\n    navigator: '#navigator',\n    drawer: '#drawer'\n  };\n\n  return View;\n\n}).call(this);\n\n/*\n  onRender: ->\n    @showChildView 'navigator', new Nav.Navigator()\n    @showChildView 'footer',    new FooterView()\n    return\n*/\n//-------------------------------------------------------------------------------\n// Exports\n//-------------------------------------------------------------------------------\nmodule.exports = View;\n\n//-------------------------------------------------------------------------------\n\n\n//# sourceURL=webpack:///./src/client/js/view.coffee?");

/***/ }),

/***/ "./src/client/js/view.pug":
/*!********************************!*\
  !*** ./src/client/js/view.pug ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var pug = __webpack_require__(/*! ../../../node_modules/pug-runtime/index.js */ \"./node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003Cdiv id=\\\"header\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv id=\\\"loader\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv id=\\\"index\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv id=\\\"content\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv id=\\\"footer\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv id=\\\"navigator\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv id=\\\"drawer\\\"\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;\n\n//# sourceURL=webpack:///./src/client/js/view.pug?");

/***/ }),

/***/ "./src/client/vendor/js/highstock.js":
/*!*******************************************!*\
  !*** ./src/client/vendor/js/highstock.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// ==ClosureCompiler==\n// @compilation_level SIMPLE_OPTIMIZATIONS\n/**\n * @license Highstock JS v4.2.5 (2016-05-06)\n *\n * (c) 2009-2016 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */(function(root,factory){if(typeof module==='object'&&module.exports){module.exports=root.document?factory(root):factory;}else{root.Highcharts=factory(root);}})(typeof window!=='undefined'?window:this,function(win){// eslint-disable-line no-undef\n// encapsulated variables\nvar UNDEFINED,doc=win.document,math=Math,mathRound=math.round,mathFloor=math.floor,mathCeil=math.ceil,mathMax=math.max,mathMin=math.min,mathAbs=math.abs,mathCos=math.cos,mathSin=math.sin,mathPI=math.PI,deg2rad=mathPI*2/360,// some variables\nuserAgent=win.navigator&&win.navigator.userAgent||'',isOpera=win.opera,isMS=/(msie|trident|edge)/i.test(userAgent)&&!isOpera,docMode8=doc&&doc.documentMode===8,isWebKit=!isMS&&/AppleWebKit/.test(userAgent),isFirefox=/Firefox/.test(userAgent),isTouchDevice=/(Mobile|Android|Windows Phone)/.test(userAgent),SVG_NS='http://www.w3.org/2000/svg',hasSVG=doc&&doc.createElementNS&&!!doc.createElementNS(SVG_NS,'svg').createSVGRect,hasBidiBug=isFirefox&&parseInt(userAgent.split('Firefox/')[1],10)<4,// issue #38\nuseCanVG=doc&&!hasSVG&&!isMS&&!!doc.createElement('canvas').getContext,Renderer,hasTouch,symbolSizes={},idCounter=0,garbageBin,defaultOptions,dateFormat,// function\npathAnim,timeUnits,noop=function(){},charts=[],chartCount=0,PRODUCT='Highstock',VERSION='4.2.5',// some constants for frequently used strings\nDIV='div',ABSOLUTE='absolute',RELATIVE='relative',HIDDEN='hidden',PREFIX='highcharts-',VISIBLE='visible',PX='px',NONE='none',M='M',L='L',numRegex=/^[0-9]+$/,NORMAL_STATE='',HOVER_STATE='hover',SELECT_STATE='select',marginNames=['plotTop','marginRight','marginBottom','plotLeft'],// Object for extending Axis\nAxisPlotLineOrBandExtension,// constants for attributes\nSTROKE_WIDTH='stroke-width',// time methods, changed based on whether or not UTC is used\nDate,// Allow using a different Date class\nmakeTime,timezoneOffset,getTimezoneOffset,getMinutes,getHours,getDay,getDate,getMonth,getFullYear,setMilliseconds,setSeconds,setMinutes,setHours,setDate,setMonth,setFullYear,// lookup over the types and the associated classes\nseriesTypes={},Highcharts;/**\n     * Provide error messages for debugging, with links to online explanation\n     */function error(code,stop){var msg='Highcharts error #'+code+': www.highcharts.com/errors/'+code;if(stop){throw new Error(msg);}// else ...\nif(win.console){console.log(msg);// eslint-disable-line no-console\n}}// The Highcharts namespace\nHighcharts=win.Highcharts?error(16,true):{win:win};Highcharts.seriesTypes=seriesTypes;var timers=[],getStyle,// Previous adapter functions\ninArray,each,grep,offset,map,addEvent,removeEvent,fireEvent,animate,stop;/**\n     * An animator object. One instance applies to one property (attribute or style prop) \n     * on one element.\n     * \n     * @param {object} elem    The element to animate. May be a DOM element or a Highcharts SVGElement wrapper.\n     * @param {object} options Animation options, including duration, easing, step and complete.\n     * @param {object} prop    The property to animate.\n     */function Fx(elem,options,prop){this.options=options;this.elem=elem;this.prop=prop;}Fx.prototype={/**\n         * Animating a path definition on SVGElement\n         * @returns {undefined} \n         */dSetter:function(){var start=this.paths[0],end=this.paths[1],ret=[],now=this.now,i=start.length,startVal;if(now===1){// land on the final path without adjustment points appended in the ends\nret=this.toD;}else if(i===end.length&&now<1){while(i--){startVal=parseFloat(start[i]);ret[i]=isNaN(startVal)?// a letter instruction like M or L\nstart[i]:now*parseFloat(end[i]-startVal)+startVal;}}else{// if animation is finished or length not matching, land on right value\nret=end;}this.elem.attr('d',ret);},/**\n         * Update the element with the current animation step\n         * @returns {undefined}\n         */update:function(){var elem=this.elem,prop=this.prop,// if destroyed, it is null\nnow=this.now,step=this.options.step;// Animation setter defined from outside\nif(this[prop+'Setter']){this[prop+'Setter']();// Other animations on SVGElement\n}else if(elem.attr){if(elem.element){elem.attr(prop,now);}// HTML styles, raw HTML content like container size\n}else{elem.style[prop]=now+this.unit;}if(step){step.call(elem,now,this);}},/**\n         * Run an animation\n         */run:function(from,to,unit){var self=this,timer=function(gotoEnd){return timer.stopped?false:self.step(gotoEnd);},i;this.startTime=+new Date();this.start=from;this.end=to;this.unit=unit;this.now=this.start;this.pos=0;timer.elem=this.elem;if(timer()&&timers.push(timer)===1){timer.timerId=setInterval(function(){for(i=0;i<timers.length;i++){if(!timers[i]()){timers.splice(i--,1);}}if(!timers.length){clearInterval(timer.timerId);}},13);}},/**\n         * Run a single step in the animation\n         * @param   {Boolean} gotoEnd Whether to go to then endpoint of the animation after abort\n         * @returns {Boolean} True if animation continues\n         */step:function(gotoEnd){var t=+new Date(),ret,done,options=this.options,elem=this.elem,complete=options.complete,duration=options.duration,curAnim=options.curAnim,i;if(elem.attr&&!elem.element){// #2616, element including flag is destroyed\nret=false;}else if(gotoEnd||t>=duration+this.startTime){this.now=this.end;this.pos=1;this.update();curAnim[this.prop]=true;done=true;for(i in curAnim){if(curAnim[i]!==true){done=false;}}if(done&&complete){complete.call(elem);}ret=false;}else{this.pos=options.easing((t-this.startTime)/duration);this.now=this.start+(this.end-this.start)*this.pos;this.update();ret=true;}return ret;},/**\n         * Prepare start and end values so that the path can be animated one to one\n         */initPath:function(elem,fromD,toD){fromD=fromD||'';var shift=elem.shift,bezier=fromD.indexOf('C')>-1,numParams=bezier?7:3,endLength,slice,i,start=fromD.split(' '),end=[].concat(toD),// copy\nisArea=elem.isArea,positionFactor=isArea?2:1,sixify=function(arr){// in splines make move points have six parameters like bezier curves\ni=arr.length;while(i--){if(arr[i]===M||arr[i]===L){arr.splice(i+1,0,arr[i+1],arr[i+2],arr[i+1],arr[i+2]);}}};if(bezier){sixify(start);sixify(end);}// If shifting points, prepend a dummy point to the end path. For areas,\n// prepend both at the beginning and end of the path.\nif(shift<=end.length/numParams&&start.length===end.length){while(shift--){end=end.slice(0,numParams).concat(end);if(isArea){end=end.concat(end.slice(end.length-numParams));}}}elem.shift=0;// reset for following animations\n// Copy and append last point until the length matches the end length\nif(start.length){endLength=end.length;while(start.length<endLength){// Pull out the slice that is going to be appended or inserted. In a line graph,\n// the positionFactor is 1, and the last point is sliced out. In an area graph,\n// the positionFactor is 2, causing the middle two points to be sliced out, since\n// an area path starts at left, follows the upper path then turns and follows the\n// bottom back. \nslice=start.slice().splice(start.length/positionFactor-numParams,numParams*positionFactor);// Disable first control point\nif(bezier){slice[numParams-6]=slice[numParams-2];slice[numParams-5]=slice[numParams-1];}// Now insert the slice, either in the middle (for areas) or at the end (for lines)\n[].splice.apply(start,[start.length/positionFactor,0].concat(slice));}}return[start,end];}};// End of Fx prototype\n/**\n     * Extend an object with the members of another\n     * @param {Object} a The object to be extended\n     * @param {Object} b The object to add to the first one\n     */var extend=Highcharts.extend=function(a,b){var n;if(!a){a={};}for(n in b){a[n]=b[n];}return a;};/**\n     * Deep merge two or more objects and return a third object. If the first argument is\n     * true, the contents of the second object is copied into the first object.\n     * Previously this function redirected to jQuery.extend(true), but this had two limitations.\n     * First, it deep merged arrays, which lead to workarounds in Highcharts. Second,\n     * it copied properties from extended prototypes.\n     */function merge(){var i,args=arguments,len,ret={},doCopy=function(copy,original){var value,key;// An object is replacing a primitive\nif(typeof copy!=='object'){copy={};}for(key in original){if(original.hasOwnProperty(key)){value=original[key];// Copy the contents of objects, but not arrays or DOM nodes\nif(value&&typeof value==='object'&&Object.prototype.toString.call(value)!=='[object Array]'&&key!=='renderTo'&&typeof value.nodeType!=='number'){copy[key]=doCopy(copy[key]||{},value);// Primitives and arrays are copied over directly\n}else{copy[key]=original[key];}}}return copy;};// If first argument is true, copy into the existing object. Used in setOptions.\nif(args[0]===true){ret=args[1];args=Array.prototype.slice.call(args,2);}// For each argument, extend the return\nlen=args.length;for(i=0;i<len;i++){ret=doCopy(ret,args[i]);}return ret;}/**\n     * Shortcut for parseInt\n     * @param {Object} s\n     * @param {Number} mag Magnitude\n     */function pInt(s,mag){return parseInt(s,mag||10);}/**\n     * Check for string\n     * @param {Object} s\n     */function isString(s){return typeof s==='string';}/**\n     * Check for object\n     * @param {Object} obj\n     */function isObject(obj){return obj&&typeof obj==='object';}/**\n     * Check for array\n     * @param {Object} obj\n     */function isArray(obj){return Object.prototype.toString.call(obj)==='[object Array]';}/**\n     * Check for number\n     * @param {Object} n\n     */var isNumber=Highcharts.isNumber=function isNumber(n){return typeof n==='number'&&!isNaN(n);};/**\n     * Remove last occurence of an item from an array\n     * @param {Array} arr\n     * @param {Mixed} item\n     */function erase(arr,item){var i=arr.length;while(i--){if(arr[i]===item){arr.splice(i,1);break;}}//return arr;\n}/**\n     * Returns true if the object is not null or undefined.\n     * @param {Object} obj\n     */function defined(obj){return obj!==UNDEFINED&&obj!==null;}/**\n     * Set or get an attribute or an object of attributes. Can't use jQuery attr because\n     * it attempts to set expando properties on the SVG element, which is not allowed.\n     *\n     * @param {Object} elem The DOM element to receive the attribute(s)\n     * @param {String|Object} prop The property or an abject of key-value pairs\n     * @param {String} value The value if a single property is set\n     */function attr(elem,prop,value){var key,ret;// if the prop is a string\nif(isString(prop)){// set the value\nif(defined(value)){elem.setAttribute(prop,value);// get the value\n}else if(elem&&elem.getAttribute){// elem not defined when printing pie demo...\nret=elem.getAttribute(prop);}// else if prop is defined, it is a hash of key/value pairs\n}else if(defined(prop)&&isObject(prop)){for(key in prop){elem.setAttribute(key,prop[key]);}}return ret;}/**\n     * Check if an element is an array, and if not, make it into an array.\n     */function splat(obj){return isArray(obj)?obj:[obj];}/**\n     * Set a timeout if the delay is given, otherwise perform the function synchronously\n     * @param   {Function} fn      The function to perform\n     * @param   {Number}   delay   Delay in milliseconds\n     * @param   {Ojbect}   context The context\n     * @returns {Nubmer}           An identifier for the timeout\n     */function syncTimeout(fn,delay,context){if(delay){return setTimeout(fn,delay,context);}fn.call(0,context);}/**\n     * Return the first value that is defined.\n     */var pick=Highcharts.pick=function(){var args=arguments,i,arg,length=args.length;for(i=0;i<length;i++){arg=args[i];if(arg!==UNDEFINED&&arg!==null){return arg;}}};/**\n     * Set CSS on a given element\n     * @param {Object} el\n     * @param {Object} styles Style object with camel case property names\n     */function css(el,styles){if(isMS&&!hasSVG){// #2686\nif(styles&&styles.opacity!==UNDEFINED){styles.filter='alpha(opacity='+styles.opacity*100+')';}}extend(el.style,styles);}/**\n     * Utility function to create element with attributes and styles\n     * @param {Object} tag\n     * @param {Object} attribs\n     * @param {Object} styles\n     * @param {Object} parent\n     * @param {Object} nopad\n     */function createElement(tag,attribs,styles,parent,nopad){var el=doc.createElement(tag);if(attribs){extend(el,attribs);}if(nopad){css(el,{padding:0,border:'none',margin:0});}if(styles){css(el,styles);}if(parent){parent.appendChild(el);}return el;}/**\n     * Extend a prototyped class by new members\n     * @param {Object} parent\n     * @param {Object} members\n     */function extendClass(Parent,members){var object=function(){};object.prototype=new Parent();extend(object.prototype,members);return object;}/**\n     * Pad a string to a given length by adding 0 to the beginning\n     * @param {Number} number\n     * @param {Number} length\n     */function pad(number,length,padder){return new Array((length||2)+1-String(number).length).join(padder||0)+number;}/**\n     * Return a length based on either the integer value, or a percentage of a base.\n     */function relativeLength(value,base){return /%$/.test(value)?base*parseFloat(value)/100:parseFloat(value);}/**\n     * Wrap a method with extended functionality, preserving the original function\n     * @param {Object} obj The context object that the method belongs to\n     * @param {String} method The name of the method to extend\n     * @param {Function} func A wrapper function callback. This function is called with the same arguments\n     * as the original function, except that the original function is unshifted and passed as the first\n     * argument.\n     */var wrap=Highcharts.wrap=function(obj,method,func){var proceed=obj[method];obj[method]=function(){var args=Array.prototype.slice.call(arguments);args.unshift(proceed);return func.apply(this,args);};};function getTZOffset(timestamp){return(getTimezoneOffset&&getTimezoneOffset(timestamp)||timezoneOffset||0)*60000;}/**\n     * Based on http://www.php.net/manual/en/function.strftime.php\n     * @param {String} format\n     * @param {Number} timestamp\n     * @param {Boolean} capitalize\n     */dateFormat=function(format,timestamp,capitalize){if(!isNumber(timestamp)){return defaultOptions.lang.invalidDate||'';}format=pick(format,'%Y-%m-%d %H:%M:%S');var date=new Date(timestamp-getTZOffset(timestamp)),key,// used in for constuct below\n// get the basic time values\nhours=date[getHours](),day=date[getDay](),dayOfMonth=date[getDate](),month=date[getMonth](),fullYear=date[getFullYear](),lang=defaultOptions.lang,langWeekdays=lang.weekdays,shortWeekdays=lang.shortWeekdays,// List all format keys. Custom formats can be added from the outside.\nreplacements=extend({// Day\n'a':shortWeekdays?shortWeekdays[day]:langWeekdays[day].substr(0,3),// Short weekday, like 'Mon'\n'A':langWeekdays[day],// Long weekday, like 'Monday'\n'd':pad(dayOfMonth),// Two digit day of the month, 01 to 31\n'e':pad(dayOfMonth,2,' '),// Day of the month, 1 through 31\n'w':day,// Week (none implemented)\n//'W': weekNumber(),\n// Month\n'b':lang.shortMonths[month],// Short month, like 'Jan'\n'B':lang.months[month],// Long month, like 'January'\n'm':pad(month+1),// Two digit month number, 01 through 12\n// Year\n'y':fullYear.toString().substr(2,2),// Two digits year, like 09 for 2009\n'Y':fullYear,// Four digits year, like 2009\n// Time\n'H':pad(hours),// Two digits hours in 24h format, 00 through 23\n'k':hours,// Hours in 24h format, 0 through 23\n'I':pad(hours%12||12),// Two digits hours in 12h format, 00 through 11\n'l':hours%12||12,// Hours in 12h format, 1 through 12\n'M':pad(date[getMinutes]()),// Two digits minutes, 00 through 59\n'p':hours<12?'AM':'PM',// Upper case AM or PM\n'P':hours<12?'am':'pm',// Lower case AM or PM\n'S':pad(date.getSeconds()),// Two digits seconds, 00 through  59\n'L':pad(mathRound(timestamp%1000),3)// Milliseconds (naming from Ruby)\n},Highcharts.dateFormats);// do the replaces\nfor(key in replacements){while(format.indexOf('%'+key)!==-1){// regex would do it in one line, but this is faster\nformat=format.replace('%'+key,typeof replacements[key]==='function'?replacements[key](timestamp):replacements[key]);}}// Optionally capitalize the string and return\nreturn capitalize?format.substr(0,1).toUpperCase()+format.substr(1):format;};/**\n     * Format a single variable. Similar to sprintf, without the % prefix.\n     */function formatSingle(format,val){var floatRegex=/f$/,decRegex=/\\.([0-9])/,lang=defaultOptions.lang,decimals;if(floatRegex.test(format)){// float\ndecimals=format.match(decRegex);decimals=decimals?decimals[1]:-1;if(val!==null){val=Highcharts.numberFormat(val,decimals,lang.decimalPoint,format.indexOf(',')>-1?lang.thousandsSep:'');}}else{val=dateFormat(format,val);}return val;}/**\n     * Format a string according to a subset of the rules of Python's String.format method.\n     */function format(str,ctx){var splitter='{',isInside=false,segment,valueAndFormat,path,i,len,ret=[],val,index;while((index=str.indexOf(splitter))!==-1){segment=str.slice(0,index);if(isInside){// we're on the closing bracket looking back\nvalueAndFormat=segment.split(':');path=valueAndFormat.shift().split('.');// get first and leave format\nlen=path.length;val=ctx;// Assign deeper paths\nfor(i=0;i<len;i++){val=val[path[i]];}// Format the replacement\nif(valueAndFormat.length){val=formatSingle(valueAndFormat.join(':'),val);}// Push the result and advance the cursor\nret.push(val);}else{ret.push(segment);}str=str.slice(index+1);// the rest\nisInside=!isInside;// toggle\nsplitter=isInside?'}':'{';// now look for next matching bracket\n}ret.push(str);return ret.join('');}/**\n     * Get the magnitude of a number\n     */function getMagnitude(num){return math.pow(10,mathFloor(math.log(num)/math.LN10));}/**\n     * Take an interval and normalize it to multiples of 1, 2, 2.5 and 5\n     * @param {Number} interval\n     * @param {Array} multiples\n     * @param {Number} magnitude\n     * @param {Object} options\n     */function normalizeTickInterval(interval,multiples,magnitude,allowDecimals,preventExceed){var normalized,i,retInterval=interval;// round to a tenfold of 1, 2, 2.5 or 5\nmagnitude=pick(magnitude,1);normalized=interval/magnitude;// multiples for a linear scale\nif(!multiples){multiples=[1,2,2.5,5,10];// the allowDecimals option\nif(allowDecimals===false){if(magnitude===1){multiples=[1,2,5,10];}else if(magnitude<=0.1){multiples=[1/magnitude];}}}// normalize the interval to the nearest multiple\nfor(i=0;i<multiples.length;i++){retInterval=multiples[i];if(preventExceed&&retInterval*magnitude>=interval||// only allow tick amounts smaller than natural\n!preventExceed&&normalized<=(multiples[i]+(multiples[i+1]||multiples[i]))/2){break;}}// multiply back to the correct magnitude\nretInterval*=magnitude;return retInterval;}/**\n     * Utility method that sorts an object array and keeping the order of equal items.\n     * ECMA script standard does not specify the behaviour when items are equal.\n     */function stableSort(arr,sortFunction){var length=arr.length,sortValue,i;// Add index to each item\nfor(i=0;i<length;i++){arr[i].safeI=i;// stable sort index\n}arr.sort(function(a,b){sortValue=sortFunction(a,b);return sortValue===0?a.safeI-b.safeI:sortValue;});// Remove index from items\nfor(i=0;i<length;i++){delete arr[i].safeI;// stable sort index\n}}/**\n     * Non-recursive method to find the lowest member of an array. Math.min raises a maximum\n     * call stack size exceeded error in Chrome when trying to apply more than 150.000 points. This\n     * method is slightly slower, but safe.\n     */function arrayMin(data){var i=data.length,min=data[0];while(i--){if(data[i]<min){min=data[i];}}return min;}/**\n     * Non-recursive method to find the lowest member of an array. Math.min raises a maximum\n     * call stack size exceeded error in Chrome when trying to apply more than 150.000 points. This\n     * method is slightly slower, but safe.\n     */function arrayMax(data){var i=data.length,max=data[0];while(i--){if(data[i]>max){max=data[i];}}return max;}/**\n     * Utility method that destroys any SVGElement or VMLElement that are properties on the given object.\n     * It loops all properties and invokes destroy if there is a destroy method. The property is\n     * then delete'ed.\n     * @param {Object} The object to destroy properties on\n     * @param {Object} Exception, do not destroy this property, only delete it.\n     */function destroyObjectProperties(obj,except){var n;for(n in obj){// If the object is non-null and destroy is defined\nif(obj[n]&&obj[n]!==except&&obj[n].destroy){// Invoke the destroy\nobj[n].destroy();}// Delete the property from the object.\ndelete obj[n];}}/**\n     * Discard an element by moving it to the bin and delete\n     * @param {Object} The HTML node to discard\n     */function discardElement(element){// create a garbage bin element, not part of the DOM\nif(!garbageBin){garbageBin=createElement(DIV);}// move the node and empty bin\nif(element){garbageBin.appendChild(element);}garbageBin.innerHTML='';}/**\n     * Fix JS round off float errors\n     * @param {Number} num\n     */function correctFloat(num,prec){return parseFloat(num.toPrecision(prec||14));}/**\n     * Set the global animation to either a given value, or fall back to the\n     * given chart's animation option\n     * @param {Object} animation\n     * @param {Object} chart\n     */function setAnimation(animation,chart){chart.renderer.globalAnimation=pick(animation,chart.animation);}/**\n     * Get the animation in object form, where a disabled animation is always\n     * returned with duration: 0\n     */function animObject(animation){return isObject(animation)?merge(animation):{duration:animation?500:0};}/**\n     * The time unit lookup\n     */timeUnits={millisecond:1,second:1000,minute:60000,hour:3600000,day:24*3600000,week:7*24*3600000,month:28*24*3600000,year:364*24*3600000};/**\n     * Format a number and return a string based on input settings\n     * @param {Number} number The input number to format\n     * @param {Number} decimals The amount of decimals\n     * @param {String} decimalPoint The decimal point, defaults to the one given in the lang options\n     * @param {String} thousandsSep The thousands separator, defaults to the one given in the lang options\n     */Highcharts.numberFormat=function(number,decimals,decimalPoint,thousandsSep){number=+number||0;decimals=+decimals;var lang=defaultOptions.lang,origDec=(number.toString().split('.')[1]||'').length,decimalComponent,strinteger,thousands,absNumber=Math.abs(number),ret;if(decimals===-1){decimals=Math.min(origDec,20);// Preserve decimals. Not huge numbers (#3793).\n}else if(!isNumber(decimals)){decimals=2;}// A string containing the positive integer component of the number\nstrinteger=String(pInt(absNumber.toFixed(decimals)));// Leftover after grouping into thousands. Can be 0, 1 or 3.\nthousands=strinteger.length>3?strinteger.length%3:0;// Language\ndecimalPoint=pick(decimalPoint,lang.decimalPoint);thousandsSep=pick(thousandsSep,lang.thousandsSep);// Start building the return\nret=number<0?'-':'';// Add the leftover after grouping into thousands. For example, in the number 42 000 000,\n// this line adds 42.\nret+=thousands?strinteger.substr(0,thousands)+thousandsSep:'';// Add the remaining thousands groups, joined by the thousands separator\nret+=strinteger.substr(thousands).replace(/(\\d{3})(?=\\d)/g,'$1'+thousandsSep);// Add the decimal point and the decimal component\nif(decimals){// Get the decimal component, and add power to avoid rounding errors with float numbers (#4573)\ndecimalComponent=Math.abs(absNumber-strinteger+Math.pow(10,-Math.max(decimals,origDec)-1));ret+=decimalPoint+decimalComponent.toFixed(decimals).slice(2);}return ret;};/**\n     * Easing definition\n     * @param   {Number} pos Current position, ranging from 0 to 1\n     */Math.easeInOutSine=function(pos){return-0.5*(Math.cos(Math.PI*pos)-1);};/**\n     * Internal method to return CSS value for given element and property\n     */getStyle=function(el,prop){var style;// For width and height, return the actual inner pixel size (#4913)\nif(prop==='width'){return Math.min(el.offsetWidth,el.scrollWidth)-getStyle(el,'padding-left')-getStyle(el,'padding-right');}else if(prop==='height'){return Math.min(el.offsetHeight,el.scrollHeight)-getStyle(el,'padding-top')-getStyle(el,'padding-bottom');}// Otherwise, get the computed style\nstyle=win.getComputedStyle(el,undefined);return style&&pInt(style.getPropertyValue(prop));};/**\n     * Return the index of an item in an array, or -1 if not found\n     */inArray=function(item,arr){return arr.indexOf?arr.indexOf(item):[].indexOf.call(arr,item);};/**\n     * Filter an array\n     */grep=function(elements,callback){return[].filter.call(elements,callback);};/**\n     * Map an array\n     */map=function(arr,fn){var results=[],i=0,len=arr.length;for(;i<len;i++){results[i]=fn.call(arr[i],arr[i],i,arr);}return results;};/**\n     * Get the element's offset position, corrected by overflow:auto.\n     */offset=function(el){var docElem=doc.documentElement,box=el.getBoundingClientRect();return{top:box.top+(win.pageYOffset||docElem.scrollTop)-(docElem.clientTop||0),left:box.left+(win.pageXOffset||docElem.scrollLeft)-(docElem.clientLeft||0)};};/**\n     * Stop running animation.\n     * A possible extension to this would be to stop a single property, when\n     * we want to continue animating others. Then assign the prop to the timer\n     * in the Fx.run method, and check for the prop here. This would be an improvement\n     * in all cases where we stop the animation from .attr. Instead of stopping\n     * everything, we can just stop the actual attributes we're setting.\n     */stop=function(el){var i=timers.length;// Remove timers related to this element (#4519)\nwhile(i--){if(timers[i].elem===el){timers[i].stopped=true;// #4667\n}}};/**\n     * Utility for iterating over an array.\n     * @param {Array} arr\n     * @param {Function} fn\n     */each=function(arr,fn){// modern browsers\nreturn Array.prototype.forEach.call(arr,fn);};/**\n     * Add an event listener\n     */addEvent=function(el,type,fn){var events=el.hcEvents=el.hcEvents||{};function wrappedFn(e){e.target=e.srcElement||win;// #2820\nfn.call(el,e);}// Handle DOM events in modern browsers\nif(el.addEventListener){el.addEventListener(type,fn,false);// Handle old IE implementation\n}else if(el.attachEvent){if(!el.hcEventsIE){el.hcEventsIE={};}// Link wrapped fn with original fn, so we can get this in removeEvent\nel.hcEventsIE[fn.toString()]=wrappedFn;el.attachEvent('on'+type,wrappedFn);}if(!events[type]){events[type]=[];}events[type].push(fn);};/**\n     * Remove event added with addEvent\n     */removeEvent=function(el,type,fn){var events,hcEvents=el.hcEvents,index;function removeOneEvent(type,fn){if(el.removeEventListener){el.removeEventListener(type,fn,false);}else if(el.attachEvent){fn=el.hcEventsIE[fn.toString()];el.detachEvent('on'+type,fn);}}function removeAllEvents(){var types,len,n;if(!el.nodeName){return;// break on non-DOM events\n}if(type){types={};types[type]=true;}else{types=hcEvents;}for(n in types){if(hcEvents[n]){len=hcEvents[n].length;while(len--){removeOneEvent(n,hcEvents[n][len]);}}}}if(hcEvents){if(type){events=hcEvents[type]||[];if(fn){index=inArray(fn,events);if(index>-1){events.splice(index,1);hcEvents[type]=events;}removeOneEvent(type,fn);}else{removeAllEvents();hcEvents[type]=[];}}else{removeAllEvents();el.hcEvents={};}}};/**\n     * Fire an event on a custom object\n     */fireEvent=function(el,type,eventArguments,defaultFunction){var e,hcEvents=el.hcEvents,events,len,i,fn;eventArguments=eventArguments||{};if(doc.createEvent&&(el.dispatchEvent||el.fireEvent)){e=doc.createEvent('Events');e.initEvent(type,true,true);e.target=el;extend(e,eventArguments);if(el.dispatchEvent){el.dispatchEvent(e);}else{el.fireEvent(type,e);}}else if(hcEvents){events=hcEvents[type]||[];len=events.length;// Attach a simple preventDefault function to skip default handler if called. \n// The built-in defaultPrevented property is not overwritable (#5112)\nif(!eventArguments.preventDefault){eventArguments.preventDefault=function(){eventArguments.defaultPrevented=true;};}eventArguments.target=el;// If the type is not set, we're running a custom event (#2297). If it is set,\n// we're running a browser event, and setting it will cause en error in\n// IE8 (#2465).\nif(!eventArguments.type){eventArguments.type=type;}for(i=0;i<len;i++){fn=events[i];// If the event handler return false, prevent the default handler from executing\nif(fn.call(el,eventArguments)===false){eventArguments.preventDefault();}}}// Run the default if not prevented\nif(defaultFunction&&!eventArguments.defaultPrevented){defaultFunction(eventArguments);}};/**\n     * The global animate method, which uses Fx to create individual animators.\n     */animate=function(el,params,opt){var start,unit='',end,fx,args,prop;if(!isObject(opt)){// Number or undefined/null\nargs=arguments;opt={duration:args[2],easing:args[3],complete:args[4]};}if(!isNumber(opt.duration)){opt.duration=400;}opt.easing=typeof opt.easing==='function'?opt.easing:Math[opt.easing]||Math.easeInOutSine;opt.curAnim=merge(params);for(prop in params){fx=new Fx(el,opt,prop);end=null;if(prop==='d'){fx.paths=fx.initPath(el,el.d,params.d);fx.toD=params.d;start=0;end=1;}else if(el.attr){start=el.attr(prop);}else{start=parseFloat(getStyle(el,prop))||0;if(prop!=='opacity'){unit='px';}}if(!end){end=params[prop];}if(end.match&&end.match('px')){end=end.replace(/px/g,'');// #4351\n}fx.run(start,end,unit);}};/**\n     * Register Highcharts as a plugin in jQuery\n     */if(win.jQuery){win.jQuery.fn.highcharts=function(){var args=[].slice.call(arguments);if(this[0]){// this[0] is the renderTo div\n// Create the chart\nif(args[0]){new Highcharts[// eslint-disable-line no-new\nisString(args[0])?args.shift():'Chart'// Constructor defaults to Chart\n](this[0],args[0],args[1]);return this;}// When called without parameters or with the return argument, return an existing chart\nreturn charts[attr(this[0],'data-highcharts-chart')];}};}/**\n     * Compatibility section to add support for legacy IE. This can be removed if old IE \n     * support is not needed.\n     */if(doc&&!doc.defaultView){getStyle=function(el,prop){var val,alias={width:'clientWidth',height:'clientHeight'}[prop];if(el.style[prop]){return pInt(el.style[prop]);}if(prop==='opacity'){prop='filter';}// Getting the rendered width and height\nif(alias){el.style.zoom=1;return Math.max(el[alias]-2*getStyle(el,'padding'),0);}val=el.currentStyle[prop.replace(/\\-(\\w)/g,function(a,b){return b.toUpperCase();})];if(prop==='filter'){val=val.replace(/alpha\\(opacity=([0-9]+)\\)/,function(a,b){return b/100;});}return val===''?1:pInt(val);};}if(!Array.prototype.forEach){each=function(arr,fn){// legacy\nvar i=0,len=arr.length;for(;i<len;i++){if(fn.call(arr[i],arr[i],i,arr)===false){return i;}}};}if(!Array.prototype.indexOf){inArray=function(item,arr){var len,i=0;if(arr){len=arr.length;for(;i<len;i++){if(arr[i]===item){return i;}}}return-1;};}if(!Array.prototype.filter){grep=function(elements,fn){var ret=[],i=0,length=elements.length;for(;i<length;i++){if(fn(elements[i],i)){ret.push(elements[i]);}}return ret;};}//--- End compatibility section ---\n// Expose utilities\nHighcharts.Fx=Fx;Highcharts.inArray=inArray;Highcharts.each=each;Highcharts.grep=grep;Highcharts.offset=offset;Highcharts.map=map;Highcharts.addEvent=addEvent;Highcharts.removeEvent=removeEvent;Highcharts.fireEvent=fireEvent;Highcharts.animate=animate;Highcharts.animObject=animObject;Highcharts.stop=stop;/* ****************************************************************************\n     * Handle the options                                                         *\n     *****************************************************************************/defaultOptions={colors:['#7cb5ec','#434348','#90ed7d','#f7a35c','#8085e9','#f15c80','#e4d354','#2b908f','#f45b5b','#91e8e1'],symbols:['circle','diamond','square','triangle','triangle-down'],lang:{loading:'Loading...',months:['January','February','March','April','May','June','July','August','September','October','November','December'],shortMonths:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],weekdays:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],// invalidDate: '',\ndecimalPoint:'.',numericSymbols:['k','M','G','T','P','E'],// SI prefixes used in axis labels\nresetZoom:'Reset zoom',resetZoomTitle:'Reset zoom level 1:1',thousandsSep:' '},global:{useUTC:true,//timezoneOffset: 0,\ncanvasToolsURL:'http://code.highcharts.com/modules/canvas-tools.js',VMLRadialGradientURL:'http://code.highcharts.com/stock/4.2.5/gfx/vml-radial-gradient.png'},chart:{//animation: true,\n//alignTicks: false,\n//reflow: true,\n//className: null,\n//events: { load, selection },\n//margin: [null],\n//marginTop: null,\n//marginRight: null,\n//marginBottom: null,\n//marginLeft: null,\nborderColor:'#4572A7',//borderWidth: 0,\nborderRadius:0,defaultSeriesType:'line',ignoreHiddenSeries:true,//inverted: false,\n//shadow: false,\nspacing:[10,10,15,10],//spacingTop: 10,\n//spacingRight: 10,\n//spacingBottom: 15,\n//spacingLeft: 10,\n//style: {\n//    fontFamily: '\"Lucida Grande\", \"Lucida Sans Unicode\", Verdana, Arial, Helvetica, sans-serif', // default font\n//    fontSize: '12px'\n//},\nbackgroundColor:'#FFFFFF',//plotBackgroundColor: null,\nplotBorderColor:'#C0C0C0',//plotBorderWidth: 0,\n//plotShadow: false,\n//zoomType: ''\nresetZoomButton:{theme:{zIndex:20},position:{align:'right',x:-10,//verticalAlign: 'top',\ny:10// relativeTo: 'plot'\n}}},title:{text:'Chart title',align:'center',// floating: false,\nmargin:15,// x: 0,\n// verticalAlign: 'top',\n// y: null,\nstyle:{color:'#333333',fontSize:'18px'},widthAdjust:-44},subtitle:{text:'',align:'center',// floating: false\n// x: 0,\n// verticalAlign: 'top',\n// y: null,\nstyle:{color:'#555555'},widthAdjust:-44},plotOptions:{line:{// base series options\nallowPointSelect:false,showCheckbox:false,animation:{duration:1000},//connectNulls: false,\n//cursor: 'default',\n//clip: true,\n//dashStyle: null,\n//enableMouseTracking: true,\nevents:{},//legendIndex: 0,\n//linecap: 'round',\nlineWidth:2,//shadow: false,\n// stacking: null,\nmarker:{//enabled: true,\n//symbol: null,\nlineWidth:0,radius:4,lineColor:'#FFFFFF',//fillColor: null,\nstates:{// states for a single point\nhover:{enabled:true,lineWidthPlus:1,radiusPlus:2},select:{fillColor:'#FFFFFF',lineColor:'#000000',lineWidth:2}}},point:{events:{}},dataLabels:{align:'center',// defer: true,\n// enabled: false,\nformatter:function(){return this.y===null?'':Highcharts.numberFormat(this.y,-1);},style:{color:'contrast',fontSize:'11px',fontWeight:'bold',textShadow:'0 0 6px contrast, 0 0 3px contrast'},verticalAlign:'bottom',// above singular point\nx:0,y:0,// backgroundColor: undefined,\n// borderColor: undefined,\n// borderRadius: undefined,\n// borderWidth: undefined,\npadding:5// shadow: false\n},cropThreshold:300,// draw points outside the plot area when the number of points is less than this\npointRange:0,//pointStart: 0,\n//pointInterval: 1,\n//showInLegend: null, // auto: true for standalone series, false for linked series\nsoftThreshold:true,states:{// states for the entire series\nhover:{//enabled: false,\nlineWidthPlus:1,marker:{// lineWidth: base + 1,\n// radius: base + 1\n},halo:{size:10,opacity:0.25}},select:{marker:{}}},stickyTracking:true,//tooltip: {\n//pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y}</b>'\n//valueDecimals: null,\n//xDateFormat: '%A, %b %e, %Y',\n//valuePrefix: '',\n//ySuffix: ''\n//}\nturboThreshold:1000// zIndex: null\n}},labels:{//items: [],\nstyle:{//font: defaultFont,\nposition:ABSOLUTE,color:'#3E576F'}},legend:{enabled:true,align:'center',//floating: false,\nlayout:'horizontal',labelFormatter:function(){return this.name;},//borderWidth: 0,\nborderColor:'#909090',borderRadius:0,navigation:{// animation: true,\nactiveColor:'#274b6d',// arrowSize: 12\ninactiveColor:'#CCC'// style: {} // text styles\n},// margin: 20,\n// reversed: false,\nshadow:false,// backgroundColor: null,\n/*style: {\n                padding: '5px'\n            },*/itemStyle:{color:'#333333',fontSize:'12px',fontWeight:'bold'},itemHoverStyle:{//cursor: 'pointer', removed as of #601\ncolor:'#000'},itemHiddenStyle:{color:'#CCC'},itemCheckboxStyle:{position:ABSOLUTE,width:'13px',// for IE precision\nheight:'13px'},// itemWidth: undefined,\n// symbolRadius: 0,\n// symbolWidth: 16,\nsymbolPadding:5,verticalAlign:'bottom',// width: undefined,\nx:0,y:0,title:{//text: null,\nstyle:{fontWeight:'bold'}}},loading:{// hideDuration: 100,\nlabelStyle:{fontWeight:'bold',position:RELATIVE,top:'45%'},// showDuration: 0,\nstyle:{position:ABSOLUTE,backgroundColor:'white',opacity:0.5,textAlign:'center'}},tooltip:{enabled:true,animation:hasSVG,//crosshairs: null,\nbackgroundColor:'rgba(249, 249, 249, .85)',borderWidth:1,borderRadius:3,dateTimeLabelFormats:{millisecond:'%A, %b %e, %H:%M:%S.%L',second:'%A, %b %e, %H:%M:%S',minute:'%A, %b %e, %H:%M',hour:'%A, %b %e, %H:%M',day:'%A, %b %e, %Y',week:'Week from %A, %b %e, %Y',month:'%B %Y',year:'%Y'},footerFormat:'',//formatter: defaultFormatter,\nheaderFormat:'<span style=\"font-size: 10px\">{point.key}</span><br/>',pointFormat:'<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.y}</b><br/>',shadow:true,//shape: 'callout',\n//shared: false,\nsnap:isTouchDevice?25:10,style:{color:'#333333',cursor:'default',fontSize:'12px',padding:'8px',pointerEvents:'none',// #1686 http://caniuse.com/#feat=pointer-events\nwhiteSpace:'nowrap'//xDateFormat: '%A, %b %e, %Y',\n//valueDecimals: null,\n//valuePrefix: '',\n//valueSuffix: ''\n}},credits:{enabled:true,text:'Highcharts.com',href:'http://www.highcharts.com',position:{align:'right',x:-10,verticalAlign:'bottom',y:-5},style:{cursor:'pointer',color:'#909090',fontSize:'9px'}}};/**\n     * Set the time methods globally based on the useUTC option. Time method can be either\n     * local time or UTC (default).\n     */function setTimeMethods(){var globalOptions=defaultOptions.global,useUTC=globalOptions.useUTC,GET=useUTC?'getUTC':'get',SET=useUTC?'setUTC':'set';Date=globalOptions.Date||win.Date;timezoneOffset=useUTC&&globalOptions.timezoneOffset;getTimezoneOffset=useUTC&&globalOptions.getTimezoneOffset;makeTime=function(year,month,date,hours,minutes,seconds){var d;if(useUTC){d=Date.UTC.apply(0,arguments);d+=getTZOffset(d);}else{d=new Date(year,month,pick(date,1),pick(hours,0),pick(minutes,0),pick(seconds,0)).getTime();}return d;};getMinutes=GET+'Minutes';getHours=GET+'Hours';getDay=GET+'Day';getDate=GET+'Date';getMonth=GET+'Month';getFullYear=GET+'FullYear';setMilliseconds=SET+'Milliseconds';setSeconds=SET+'Seconds';setMinutes=SET+'Minutes';setHours=SET+'Hours';setDate=SET+'Date';setMonth=SET+'Month';setFullYear=SET+'FullYear';}/**\n     * Merge the default options with custom options and return the new options structure\n     * @param {Object} options The new custom options\n     */function setOptions(options){// Copy in the default options\ndefaultOptions=merge(true,defaultOptions,options);// Apply UTC\nsetTimeMethods();return defaultOptions;}/**\n     * Get the updated default options. Until 3.0.7, merely exposing defaultOptions for outside modules\n     * wasn't enough because the setOptions method created a new object.\n     */function getOptions(){return defaultOptions;}// Series defaults\nvar defaultPlotOptions=defaultOptions.plotOptions,defaultSeriesOptions=defaultPlotOptions.line;// set the default time methods\nsetTimeMethods();/**\n     * Handle color operations. The object methods are chainable.\n     * @param {String} input The input color in either rbga or hex format\n     */function Color(input){// Backwards compatibility, allow instanciation without new\nif(!(this instanceof Color)){return new Color(input);}// Initialize\nthis.init(input);}Color.prototype={// Collection of parsers. This can be extended from the outside by pushing parsers\n// to Highcharts.Colors.prototype.parsers.\nparsers:[{// RGBA color\nregex:/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]?(?:\\.[0-9]+)?)\\s*\\)/,parse:function(result){return[pInt(result[1]),pInt(result[2]),pInt(result[3]),parseFloat(result[4],10)];}},{// HEX color\nregex:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,parse:function(result){return[pInt(result[1],16),pInt(result[2],16),pInt(result[3],16),1];}},{// RGB color\nregex:/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/,parse:function(result){return[pInt(result[1]),pInt(result[2]),pInt(result[3]),1];}}],/**\n         * Parse the input color to rgba array\n         * @param {String} input\n         */init:function(input){var result,rgba,i,parser;this.input=input;// Gradients\nif(input&&input.stops){this.stops=map(input.stops,function(stop){return new Color(stop[1]);});// Solid colors\n}else{i=this.parsers.length;while(i--&&!rgba){parser=this.parsers[i];result=parser.regex.exec(input);if(result){rgba=parser.parse(result);}}}this.rgba=rgba||[];},/**\n         * Return the color a specified format\n         * @param {String} format\n         */get:function(format){var input=this.input,rgba=this.rgba,ret;if(this.stops){ret=merge(input);ret.stops=[].concat(ret.stops);each(this.stops,function(stop,i){ret.stops[i]=[ret.stops[i][0],stop.get(format)];});// it's NaN if gradient colors on a column chart\n}else if(rgba&&isNumber(rgba[0])){if(format==='rgb'||!format&&rgba[3]===1){ret='rgb('+rgba[0]+','+rgba[1]+','+rgba[2]+')';}else if(format==='a'){ret=rgba[3];}else{ret='rgba('+rgba.join(',')+')';}}else{ret=input;}return ret;},/**\n         * Brighten the color\n         * @param {Number} alpha\n         */brighten:function(alpha){var i,rgba=this.rgba;if(this.stops){each(this.stops,function(stop){stop.brighten(alpha);});}else if(isNumber(alpha)&&alpha!==0){for(i=0;i<3;i++){rgba[i]+=pInt(alpha*255);if(rgba[i]<0){rgba[i]=0;}if(rgba[i]>255){rgba[i]=255;}}}return this;},/**\n         * Set the color's opacity to a given alpha value\n         * @param {Number} alpha\n         */setOpacity:function(alpha){this.rgba[3]=alpha;return this;}};/**\n     * A wrapper object for SVG elements\n     */function SVGElement(){}SVGElement.prototype={// Default base for animation\nopacity:1,// For labels, these CSS properties are applied to the <text> node directly\ntextProps:['direction','fontSize','fontWeight','fontFamily','fontStyle','color','lineHeight','width','textDecoration','textOverflow','textShadow'],/**\n         * Initialize the SVG renderer\n         * @param {Object} renderer\n         * @param {String} nodeName\n         */init:function(renderer,nodeName){var wrapper=this;wrapper.element=nodeName==='span'?createElement(nodeName):doc.createElementNS(SVG_NS,nodeName);wrapper.renderer=renderer;},/**\n         * Animate a given attribute\n         * @param {Object} params\n         * @param {Number} options Options include duration, easing, step and complete\n         * @param {Function} complete Function to perform at the end of animation\n         */animate:function(params,options,complete){var animOptions=pick(options,this.renderer.globalAnimation,true);stop(this);// stop regardless of animation actually running, or reverting to .attr (#607)\nif(animOptions){if(complete){// allows using a callback with the global animation without overwriting it\nanimOptions.complete=complete;}animate(this,params,animOptions);}else{this.attr(params,null,complete);}return this;},/**\n         * Build an SVG gradient out of a common JavaScript configuration object\n         */colorGradient:function(color,prop,elem){var renderer=this.renderer,colorObject,gradName,gradAttr,radAttr,gradients,gradientObject,stops,stopColor,stopOpacity,radialReference,n,id,key=[],value;// Apply linear or radial gradients\nif(color.linearGradient){gradName='linearGradient';}else if(color.radialGradient){gradName='radialGradient';}if(gradName){gradAttr=color[gradName];gradients=renderer.gradients;stops=color.stops;radialReference=elem.radialReference;// Keep < 2.2 kompatibility\nif(isArray(gradAttr)){color[gradName]=gradAttr={x1:gradAttr[0],y1:gradAttr[1],x2:gradAttr[2],y2:gradAttr[3],gradientUnits:'userSpaceOnUse'};}// Correct the radial gradient for the radial reference system\nif(gradName==='radialGradient'&&radialReference&&!defined(gradAttr.gradientUnits)){radAttr=gradAttr;// Save the radial attributes for updating\ngradAttr=merge(gradAttr,renderer.getRadialAttr(radialReference,radAttr),{gradientUnits:'userSpaceOnUse'});}// Build the unique key to detect whether we need to create a new element (#1282)\nfor(n in gradAttr){if(n!=='id'){key.push(n,gradAttr[n]);}}for(n in stops){key.push(stops[n]);}key=key.join(',');// Check if a gradient object with the same config object is created within this renderer\nif(gradients[key]){id=gradients[key].attr('id');}else{// Set the id and create the element\ngradAttr.id=id=PREFIX+idCounter++;gradients[key]=gradientObject=renderer.createElement(gradName).attr(gradAttr).add(renderer.defs);gradientObject.radAttr=radAttr;// The gradient needs to keep a list of stops to be able to destroy them\ngradientObject.stops=[];each(stops,function(stop){var stopObject;if(stop[1].indexOf('rgba')===0){colorObject=Color(stop[1]);stopColor=colorObject.get('rgb');stopOpacity=colorObject.get('a');}else{stopColor=stop[1];stopOpacity=1;}stopObject=renderer.createElement('stop').attr({offset:stop[0],'stop-color':stopColor,'stop-opacity':stopOpacity}).add(gradientObject);// Add the stop element to the gradient\ngradientObject.stops.push(stopObject);});}// Set the reference to the gradient object\nvalue='url('+renderer.url+'#'+id+')';elem.setAttribute(prop,value);elem.gradient=key;// Allow the color to be concatenated into tooltips formatters etc. (#2995)\ncolor.toString=function(){return value;};}},/**\n         * Apply a polyfill to the text-stroke CSS property, by copying the text element\n         * and apply strokes to the copy.\n         *\n         * Contrast checks at http://jsfiddle.net/highcharts/43soe9m1/2/\n         */applyTextShadow:function(textShadow){var elem=this.element,tspans,hasContrast=textShadow.indexOf('contrast')!==-1,styles={},forExport=this.renderer.forExport,// IE10 and IE11 report textShadow in elem.style even though it doesn't work. Check\n// this again with new IE release. In exports, the rendering is passed to PhantomJS.\nsupports=forExport||elem.style.textShadow!==UNDEFINED&&!isMS;// When the text shadow is set to contrast, use dark stroke for light text and vice versa\nif(hasContrast){styles.textShadow=textShadow=textShadow.replace(/contrast/g,this.renderer.getContrast(elem.style.fill));}// Safari with retina displays as well as PhantomJS bug (#3974). Firefox does not tolerate this,\n// it removes the text shadows.\nif(isWebKit||forExport){styles.textRendering='geometricPrecision';}/* Selective side-by-side testing in supported browser (http://jsfiddle.net/highcharts/73L1ptrh/)\n            if (elem.textContent.indexOf('2.') === 0) {\n                elem.style['text-shadow'] = 'none';\n                supports = false;\n            }\n            // */ // No reason to polyfill, we've got native support\nif(supports){this.css(styles);// Apply altered textShadow or textRendering workaround\n}else{this.fakeTS=true;// Fake text shadow\n// In order to get the right y position of the clones,\n// copy over the y setter\nthis.ySetter=this.xSetter;tspans=[].slice.call(elem.getElementsByTagName('tspan'));each(textShadow.split(/\\s?,\\s?/g),function(textShadow){var firstChild=elem.firstChild,color,strokeWidth;textShadow=textShadow.split(' ');color=textShadow[textShadow.length-1];// Approximately tune the settings to the text-shadow behaviour\nstrokeWidth=textShadow[textShadow.length-2];if(strokeWidth){each(tspans,function(tspan,y){var clone;// Let the first line start at the correct X position\nif(y===0){tspan.setAttribute('x',elem.getAttribute('x'));y=elem.getAttribute('y');tspan.setAttribute('y',y||0);if(y===null){elem.setAttribute('y',0);}}// Create the clone and apply shadow properties\nclone=tspan.cloneNode(1);attr(clone,{'class':PREFIX+'text-shadow','fill':color,'stroke':color,'stroke-opacity':1/mathMax(pInt(strokeWidth),3),'stroke-width':strokeWidth,'stroke-linejoin':'round'});elem.insertBefore(clone,firstChild);});}});}},/**\n         * Set or get a given attribute\n         * @param {Object|String} hash\n         * @param {Mixed|Undefined} val\n         */attr:function(hash,val,complete){var key,value,element=this.element,hasSetSymbolSize,ret=this,skipAttr,setter;// single key-value pair\nif(typeof hash==='string'&&val!==UNDEFINED){key=hash;hash={};hash[key]=val;}// used as a getter: first argument is a string, second is undefined\nif(typeof hash==='string'){ret=(this[hash+'Getter']||this._defaultGetter).call(this,hash,element);// setter\n}else{for(key in hash){value=hash[key];skipAttr=false;if(this.symbolName&&/^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(key)){if(!hasSetSymbolSize){this.symbolAttr(hash);hasSetSymbolSize=true;}skipAttr=true;}if(this.rotation&&(key==='x'||key==='y')){this.doTransform=true;}if(!skipAttr){setter=this[key+'Setter']||this._defaultSetter;setter.call(this,value,key,element);// Let the shadow follow the main element\nif(this.shadows&&/^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(key)){this.updateShadows(key,value,setter);}}}// Update transform. Do this outside the loop to prevent redundant updating for batch setting\n// of attributes.\nif(this.doTransform){this.updateTransform();this.doTransform=false;}}// In accordance with animate, run a complete callback\nif(complete){complete();}return ret;},/**\n         * Update the shadow elements with new attributes\n         * @param   {String}        key    The attribute name\n         * @param   {String|Number} value  The value of the attribute\n         * @param   {Function}      setter The setter function, inherited from the parent wrapper\n         * @returns {undefined}\n         */updateShadows:function(key,value,setter){var shadows=this.shadows,i=shadows.length;while(i--){setter.call(shadows[i],key==='height'?Math.max(value-(shadows[i].cutHeight||0),0):key==='d'?this.d:value,key,shadows[i]);}},/**\n         * Add a class name to an element\n         */addClass:function(className){var element=this.element,currentClassName=attr(element,'class')||'';if(currentClassName.indexOf(className)===-1){attr(element,'class',currentClassName+' '+className);}return this;},/* hasClass and removeClass are not (yet) needed\n        hasClass: function (className) {\n            return attr(this.element, 'class').indexOf(className) !== -1;\n        },\n        removeClass: function (className) {\n            attr(this.element, 'class', attr(this.element, 'class').replace(className, ''));\n            return this;\n        },\n        */ /**\n         * If one of the symbol size affecting parameters are changed,\n         * check all the others only once for each call to an element's\n         * .attr() method\n         * @param {Object} hash\n         */symbolAttr:function(hash){var wrapper=this;each(['x','y','r','start','end','width','height','innerR','anchorX','anchorY'],function(key){wrapper[key]=pick(hash[key],wrapper[key]);});wrapper.attr({d:wrapper.renderer.symbols[wrapper.symbolName](wrapper.x,wrapper.y,wrapper.width,wrapper.height,wrapper)});},/**\n         * Apply a clipping path to this object\n         * @param {String} id\n         */clip:function(clipRect){return this.attr('clip-path',clipRect?'url('+this.renderer.url+'#'+clipRect.id+')':NONE);},/**\n         * Calculate the coordinates needed for drawing a rectangle crisply and return the\n         * calculated attributes\n         * @param {Number} strokeWidth\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */crisp:function(rect){var wrapper=this,key,attribs={},normalizer,strokeWidth=wrapper.strokeWidth||0;normalizer=mathRound(strokeWidth)%2/2;// mathRound because strokeWidth can sometimes have roundoff errors\n// normalize for crisp edges\nrect.x=mathFloor(rect.x||wrapper.x||0)+normalizer;rect.y=mathFloor(rect.y||wrapper.y||0)+normalizer;rect.width=mathFloor((rect.width||wrapper.width||0)-2*normalizer);rect.height=mathFloor((rect.height||wrapper.height||0)-2*normalizer);rect.strokeWidth=strokeWidth;for(key in rect){if(wrapper[key]!==rect[key]){// only set attribute if changed\nwrapper[key]=attribs[key]=rect[key];}}return attribs;},/**\n         * Set styles for the element\n         * @param {Object} styles\n         */css:function(styles){var elemWrapper=this,oldStyles=elemWrapper.styles,newStyles={},elem=elemWrapper.element,textWidth,n,serializedCss='',hyphenate,hasNew=!oldStyles;// convert legacy\nif(styles&&styles.color){styles.fill=styles.color;}// Filter out existing styles to increase performance (#2640)\nif(oldStyles){for(n in styles){if(styles[n]!==oldStyles[n]){newStyles[n]=styles[n];hasNew=true;}}}if(hasNew){textWidth=elemWrapper.textWidth=styles&&styles.width&&elem.nodeName.toLowerCase()==='text'&&pInt(styles.width)||elemWrapper.textWidth;// #3501\n// Merge the new styles with the old ones\nif(oldStyles){styles=extend(oldStyles,newStyles);}// store object\nelemWrapper.styles=styles;if(textWidth&&(useCanVG||!hasSVG&&elemWrapper.renderer.forExport)){delete styles.width;}// serialize and set style attribute\nif(isMS&&!hasSVG){css(elemWrapper.element,styles);}else{hyphenate=function(a,b){return'-'+b.toLowerCase();};for(n in styles){serializedCss+=n.replace(/([A-Z])/g,hyphenate)+':'+styles[n]+';';}attr(elem,'style',serializedCss);// #1881\n}// re-build text\nif(textWidth&&elemWrapper.added){elemWrapper.renderer.buildText(elemWrapper);}}return elemWrapper;},/**\n         * Add an event listener\n         * @param {String} eventType\n         * @param {Function} handler\n         */on:function(eventType,handler){var svgElement=this,element=svgElement.element;// touch\nif(hasTouch&&eventType==='click'){element.ontouchstart=function(e){svgElement.touchEventFired=Date.now();e.preventDefault();handler.call(element,e);};element.onclick=function(e){if(userAgent.indexOf('Android')===-1||Date.now()-(svgElement.touchEventFired||0)>1100){// #2269\nhandler.call(element,e);}};}else{// simplest possible event model for internal use\nelement['on'+eventType]=handler;}return this;},/**\n         * Set the coordinates needed to draw a consistent radial gradient across\n         * pie slices regardless of positioning inside the chart. The format is\n         * [centerX, centerY, diameter] in pixels.\n         */setRadialReference:function(coordinates){var existingGradient=this.renderer.gradients[this.element.gradient];this.element.radialReference=coordinates;// On redrawing objects with an existing gradient, the gradient needs\n// to be repositioned (#3801)\nif(existingGradient&&existingGradient.radAttr){existingGradient.animate(this.renderer.getRadialAttr(coordinates,existingGradient.radAttr));}return this;},/**\n         * Move an object and its children by x and y values\n         * @param {Number} x\n         * @param {Number} y\n         */translate:function(x,y){return this.attr({translateX:x,translateY:y});},/**\n         * Invert a group, rotate and flip\n         */invert:function(){var wrapper=this;wrapper.inverted=true;wrapper.updateTransform();return wrapper;},/**\n         * Private method to update the transform attribute based on internal\n         * properties\n         */updateTransform:function(){var wrapper=this,translateX=wrapper.translateX||0,translateY=wrapper.translateY||0,scaleX=wrapper.scaleX,scaleY=wrapper.scaleY,inverted=wrapper.inverted,rotation=wrapper.rotation,element=wrapper.element,transform;// flipping affects translate as adjustment for flipping around the group's axis\nif(inverted){translateX+=wrapper.attr('width');translateY+=wrapper.attr('height');}// Apply translate. Nearly all transformed elements have translation, so instead\n// of checking for translate = 0, do it always (#1767, #1846).\ntransform=['translate('+translateX+','+translateY+')'];// apply rotation\nif(inverted){transform.push('rotate(90) scale(-1,1)');}else if(rotation){// text rotation\ntransform.push('rotate('+rotation+' '+(element.getAttribute('x')||0)+' '+(element.getAttribute('y')||0)+')');// Delete bBox memo when the rotation changes\n//delete wrapper.bBox;\n}// apply scale\nif(defined(scaleX)||defined(scaleY)){transform.push('scale('+pick(scaleX,1)+' '+pick(scaleY,1)+')');}if(transform.length){element.setAttribute('transform',transform.join(' '));}},/**\n         * Bring the element to the front\n         */toFront:function(){var element=this.element;element.parentNode.appendChild(element);return this;},/**\n         * Break down alignment options like align, verticalAlign, x and y\n         * to x and y relative to the chart.\n         *\n         * @param {Object} alignOptions\n         * @param {Boolean} alignByTranslate\n         * @param {String[Object} box The box to align to, needs a width and height. When the\n         *        box is a string, it refers to an object in the Renderer. For example, when\n         *        box is 'spacingBox', it refers to Renderer.spacingBox which holds width, height\n         *        x and y properties.\n         *\n         */align:function(alignOptions,alignByTranslate,box){var align,vAlign,x,y,attribs={},alignTo,renderer=this.renderer,alignedObjects=renderer.alignedObjects;// First call on instanciate\nif(alignOptions){this.alignOptions=alignOptions;this.alignByTranslate=alignByTranslate;if(!box||isString(box)){// boxes other than renderer handle this internally\nthis.alignTo=alignTo=box||'renderer';erase(alignedObjects,this);// prevent duplicates, like legendGroup after resize\nalignedObjects.push(this);box=null;// reassign it below\n}// When called on resize, no arguments are supplied\n}else{alignOptions=this.alignOptions;alignByTranslate=this.alignByTranslate;alignTo=this.alignTo;}box=pick(box,renderer[alignTo],renderer);// Assign variables\nalign=alignOptions.align;vAlign=alignOptions.verticalAlign;x=(box.x||0)+(alignOptions.x||0);// default: left align\ny=(box.y||0)+(alignOptions.y||0);// default: top align\n// Align\nif(align==='right'||align==='center'){x+=(box.width-(alignOptions.width||0))/{right:1,center:2}[align];}attribs[alignByTranslate?'translateX':'x']=mathRound(x);// Vertical align\nif(vAlign==='bottom'||vAlign==='middle'){y+=(box.height-(alignOptions.height||0))/({bottom:1,middle:2}[vAlign]||1);}attribs[alignByTranslate?'translateY':'y']=mathRound(y);// Animate only if already placed\nthis[this.placed?'animate':'attr'](attribs);this.placed=true;this.alignAttr=attribs;return this;},/**\n         * Get the bounding box (width, height, x and y) for the element\n         */getBBox:function(reload,rot){var wrapper=this,bBox,// = wrapper.bBox,\nrenderer=wrapper.renderer,width,height,rotation,rad,element=wrapper.element,styles=wrapper.styles,textStr=wrapper.textStr,textShadow,elemStyle=element.style,toggleTextShadowShim,cache=renderer.cache,cacheKeys=renderer.cacheKeys,cacheKey;rotation=pick(rot,wrapper.rotation);rad=rotation*deg2rad;if(textStr!==UNDEFINED){// Properties that affect bounding box\ncacheKey=['',rotation||0,styles&&styles.fontSize,element.style.width].join(',');// Since numbers are monospaced, and numerical labels appear a lot in a chart,\n// we assume that a label of n characters has the same bounding box as others\n// of the same length.\nif(textStr===''||numRegex.test(textStr)){cacheKey='num:'+textStr.toString().length+cacheKey;// Caching all strings reduces rendering time by 4-5%.\n}else{cacheKey=textStr+cacheKey;}}if(cacheKey&&!reload){bBox=cache[cacheKey];}// No cache found\nif(!bBox){// SVG elements\nif(element.namespaceURI===SVG_NS||renderer.forExport){try{// Fails in Firefox if the container has display: none.\n// When the text shadow shim is used, we need to hide the fake shadows\n// to get the correct bounding box (#3872)\ntoggleTextShadowShim=this.fakeTS&&function(display){each(element.querySelectorAll('.'+PREFIX+'text-shadow'),function(tspan){tspan.style.display=display;});};// Workaround for #3842, Firefox reporting wrong bounding box for shadows\nif(isFirefox&&elemStyle.textShadow){textShadow=elemStyle.textShadow;elemStyle.textShadow='';}else if(toggleTextShadowShim){toggleTextShadowShim(NONE);}bBox=element.getBBox?// SVG: use extend because IE9 is not allowed to change width and height in case\n// of rotation (below)\nextend({},element.getBBox()):// Canvas renderer and legacy IE in export mode\n{width:element.offsetWidth,height:element.offsetHeight};// #3842\nif(textShadow){elemStyle.textShadow=textShadow;}else if(toggleTextShadowShim){toggleTextShadowShim('');}}catch(e){}// If the bBox is not set, the try-catch block above failed. The other condition\n// is for Opera that returns a width of -Infinity on hidden elements.\nif(!bBox||bBox.width<0){bBox={width:0,height:0};}// VML Renderer or useHTML within SVG\n}else{bBox=wrapper.htmlGetBBox();}// True SVG elements as well as HTML elements in modern browsers using the .useHTML option\n// need to compensated for rotation\nif(renderer.isSVG){width=bBox.width;height=bBox.height;// Workaround for wrong bounding box in IE9 and IE10 (#1101, #1505, #1669, #2568)\nif(isMS&&styles&&styles.fontSize==='11px'&&height.toPrecision(3)==='16.9'){bBox.height=height=14;}// Adjust for rotated text\nif(rotation){bBox.width=mathAbs(height*mathSin(rad))+mathAbs(width*mathCos(rad));bBox.height=mathAbs(height*mathCos(rad))+mathAbs(width*mathSin(rad));}}// Cache it\nif(cacheKey){// Rotate (#4681)\nwhile(cacheKeys.length>250){delete cache[cacheKeys.shift()];}if(!cache[cacheKey]){cacheKeys.push(cacheKey);}cache[cacheKey]=bBox;}}return bBox;},/**\n         * Show the element\n         */show:function(inherit){return this.attr({visibility:inherit?'inherit':VISIBLE});},/**\n         * Hide the element\n         */hide:function(){return this.attr({visibility:HIDDEN});},fadeOut:function(duration){var elemWrapper=this;elemWrapper.animate({opacity:0},{duration:duration||150,complete:function(){elemWrapper.attr({y:-9999});// #3088, assuming we're only using this for tooltips\n}});},/**\n         * Add the element\n         * @param {Object|Undefined} parent Can be an element, an element wrapper or undefined\n         *    to append the element to the renderer.box.\n         */add:function(parent){var renderer=this.renderer,element=this.element,inserted;if(parent){this.parentGroup=parent;}// mark as inverted\nthis.parentInverted=parent&&parent.inverted;// build formatted text\nif(this.textStr!==undefined){renderer.buildText(this);}// Mark as added\nthis.added=true;// If we're adding to renderer root, or other elements in the group\n// have a z index, we need to handle it\nif(!parent||parent.handleZ||this.zIndex){inserted=this.zIndexSetter();}// If zIndex is not handled, append at the end\nif(!inserted){(parent?parent.element:renderer.box).appendChild(element);}// fire an event for internal hooks\nif(this.onAdd){this.onAdd();}return this;},/**\n         * Removes a child either by removeChild or move to garbageBin.\n         * Issue 490; in VML removeChild results in Orphaned nodes according to sIEve, discardElement does not.\n         */safeRemoveChild:function(element){var parentNode=element.parentNode;if(parentNode){parentNode.removeChild(element);}},/**\n         * Destroy the element and element wrapper\n         */destroy:function(){var wrapper=this,element=wrapper.element||{},shadows=wrapper.shadows,parentToClean=wrapper.renderer.isSVG&&element.nodeName==='SPAN'&&wrapper.parentGroup,grandParent,key,i;// remove events\nelement.onclick=element.onmouseout=element.onmouseover=element.onmousemove=element.point=null;stop(wrapper);// stop running animations\nif(wrapper.clipPath){wrapper.clipPath=wrapper.clipPath.destroy();}// Destroy stops in case this is a gradient object\nif(wrapper.stops){for(i=0;i<wrapper.stops.length;i++){wrapper.stops[i]=wrapper.stops[i].destroy();}wrapper.stops=null;}// remove element\nwrapper.safeRemoveChild(element);// destroy shadows\nif(shadows){each(shadows,function(shadow){wrapper.safeRemoveChild(shadow);});}// In case of useHTML, clean up empty containers emulating SVG groups (#1960, #2393, #2697).\nwhile(parentToClean&&parentToClean.div&&parentToClean.div.childNodes.length===0){grandParent=parentToClean.parentGroup;wrapper.safeRemoveChild(parentToClean.div);delete parentToClean.div;parentToClean=grandParent;}// remove from alignObjects\nif(wrapper.alignTo){erase(wrapper.renderer.alignedObjects,wrapper);}for(key in wrapper){delete wrapper[key];}return null;},/**\n         * Add a shadow to the element. Must be done after the element is added to the DOM\n         * @param {Boolean|Object} shadowOptions\n         */shadow:function(shadowOptions,group,cutOff){var shadows=[],i,shadow,element=this.element,strokeWidth,shadowWidth,shadowElementOpacity,// compensate for inverted plot area\ntransform;if(shadowOptions){shadowWidth=pick(shadowOptions.width,3);shadowElementOpacity=(shadowOptions.opacity||0.15)/shadowWidth;transform=this.parentInverted?'(-1,-1)':'('+pick(shadowOptions.offsetX,1)+', '+pick(shadowOptions.offsetY,1)+')';for(i=1;i<=shadowWidth;i++){shadow=element.cloneNode(0);strokeWidth=shadowWidth*2+1-2*i;attr(shadow,{'isShadow':'true','stroke':shadowOptions.color||'black','stroke-opacity':shadowElementOpacity*i,'stroke-width':strokeWidth,'transform':'translate'+transform,'fill':NONE});if(cutOff){attr(shadow,'height',mathMax(attr(shadow,'height')-strokeWidth,0));shadow.cutHeight=strokeWidth;}if(group){group.element.appendChild(shadow);}else{element.parentNode.insertBefore(shadow,element);}shadows.push(shadow);}this.shadows=shadows;}return this;},xGetter:function(key){if(this.element.nodeName==='circle'){key={x:'cx',y:'cy'}[key]||key;}return this._defaultGetter(key);},/**\n         * Get the current value of an attribute or pseudo attribute, used mainly\n         * for animation.\n         */_defaultGetter:function(key){var ret=pick(this[key],this.element?this.element.getAttribute(key):null,0);if(/^[\\-0-9\\.]+$/.test(ret)){// is numerical\nret=parseFloat(ret);}return ret;},dSetter:function(value,key,element){if(value&&value.join){// join path\nvalue=value.join(' ');}if(/(NaN| {2}|^$)/.test(value)){value='M 0 0';}element.setAttribute(key,value);this[key]=value;},dashstyleSetter:function(value){var i,strokeWidth=this['stroke-width'];// If \"inherit\", like maps in IE, assume 1 (#4981). With HC5 and the new strokeWidth \n// function, we should be able to use that instead.\nif(strokeWidth==='inherit'){strokeWidth=1;}value=value&&value.toLowerCase();if(value){value=value.replace('shortdashdotdot','3,1,1,1,1,1,').replace('shortdashdot','3,1,1,1').replace('shortdot','1,1,').replace('shortdash','3,1,').replace('longdash','8,3,').replace(/dot/g,'1,3,').replace('dash','4,3,').replace(/,$/,'').split(',');// ending comma\ni=value.length;while(i--){value[i]=pInt(value[i])*strokeWidth;}value=value.join(',').replace(/NaN/g,'none');// #3226\nthis.element.setAttribute('stroke-dasharray',value);}},alignSetter:function(value){this.element.setAttribute('text-anchor',{left:'start',center:'middle',right:'end'}[value]);},opacitySetter:function(value,key,element){this[key]=value;element.setAttribute(key,value);},titleSetter:function(value){var titleNode=this.element.getElementsByTagName('title')[0];if(!titleNode){titleNode=doc.createElementNS(SVG_NS,'title');this.element.appendChild(titleNode);}// Remove text content if it exists\nif(titleNode.firstChild){titleNode.removeChild(titleNode.firstChild);}titleNode.appendChild(doc.createTextNode(String(pick(value),'').replace(/<[^>]*>/g,'')// #3276, #3895\n));},textSetter:function(value){if(value!==this.textStr){// Delete bBox memo when the text changes\ndelete this.bBox;this.textStr=value;if(this.added){this.renderer.buildText(this);}}},fillSetter:function(value,key,element){if(typeof value==='string'){element.setAttribute(key,value);}else if(value){this.colorGradient(value,key,element);}},visibilitySetter:function(value,key,element){// IE9-11 doesn't handle visibilty:inherit well, so we remove the attribute instead (#2881, #3909)\nif(value==='inherit'){element.removeAttribute(key);}else{element.setAttribute(key,value);}},zIndexSetter:function(value,key){var renderer=this.renderer,parentGroup=this.parentGroup,parentWrapper=parentGroup||renderer,parentNode=parentWrapper.element||renderer.box,childNodes,otherElement,otherZIndex,element=this.element,inserted,run=this.added,i;if(defined(value)){element.zIndex=value;// So we can read it for other elements in the group\nvalue=+value;if(this[key]===value){// Only update when needed (#3865)\nrun=false;}this[key]=value;}// Insert according to this and other elements' zIndex. Before .add() is called,\n// nothing is done. Then on add, or by later calls to zIndexSetter, the node\n// is placed on the right place in the DOM.\nif(run){value=this.zIndex;if(value&&parentGroup){parentGroup.handleZ=true;}childNodes=parentNode.childNodes;for(i=0;i<childNodes.length&&!inserted;i++){otherElement=childNodes[i];otherZIndex=otherElement.zIndex;if(otherElement!==element&&(// Insert before the first element with a higher zIndex\npInt(otherZIndex)>value||// If no zIndex given, insert before the first element with a zIndex\n!defined(value)&&defined(otherZIndex))){parentNode.insertBefore(element,otherElement);inserted=true;}}if(!inserted){parentNode.appendChild(element);}}return inserted;},_defaultSetter:function(value,key,element){element.setAttribute(key,value);}};// Some shared setters and getters\nSVGElement.prototype.yGetter=SVGElement.prototype.xGetter;SVGElement.prototype.translateXSetter=SVGElement.prototype.translateYSetter=SVGElement.prototype.rotationSetter=SVGElement.prototype.verticalAlignSetter=SVGElement.prototype.scaleXSetter=SVGElement.prototype.scaleYSetter=function(value,key){this[key]=value;this.doTransform=true;};// WebKit and Batik have problems with a stroke-width of zero, so in this case we remove the\n// stroke attribute altogether. #1270, #1369, #3065, #3072.\nSVGElement.prototype['stroke-widthSetter']=SVGElement.prototype.strokeSetter=function(value,key,element){this[key]=value;// Only apply the stroke attribute if the stroke width is defined and larger than 0\nif(this.stroke&&this['stroke-width']){this.strokeWidth=this['stroke-width'];SVGElement.prototype.fillSetter.call(this,this.stroke,'stroke',element);// use prototype as instance may be overridden\nelement.setAttribute('stroke-width',this['stroke-width']);this.hasStroke=true;}else if(key==='stroke-width'&&value===0&&this.hasStroke){element.removeAttribute('stroke');this.hasStroke=false;}};/**\n     * The default SVG renderer\n     */var SVGRenderer=function(){this.init.apply(this,arguments);};SVGRenderer.prototype={Element:SVGElement,/**\n         * Initialize the SVGRenderer\n         * @param {Object} container\n         * @param {Number} width\n         * @param {Number} height\n         * @param {Boolean} forExport\n         */init:function(container,width,height,style,forExport,allowHTML){var renderer=this,boxWrapper,element,desc;boxWrapper=renderer.createElement('svg').attr({version:'1.1'}).css(this.getStyle(style));element=boxWrapper.element;container.appendChild(element);// For browsers other than IE, add the namespace attribute (#1978)\nif(container.innerHTML.indexOf('xmlns')===-1){attr(element,'xmlns',SVG_NS);}// object properties\nrenderer.isSVG=true;renderer.box=element;renderer.boxWrapper=boxWrapper;renderer.alignedObjects=[];// Page url used for internal references. #24, #672, #1070\nrenderer.url=(isFirefox||isWebKit)&&doc.getElementsByTagName('base').length?win.location.href.replace(/#.*?$/,'')// remove the hash\n.replace(/([\\('\\)])/g,'\\\\$1')// escape parantheses and quotes\n.replace(/ /g,'%20'):// replace spaces (needed for Safari only)\n'';// Add description\ndesc=this.createElement('desc').add();desc.element.appendChild(doc.createTextNode('Created with '+PRODUCT+' '+VERSION));renderer.defs=this.createElement('defs').add();renderer.allowHTML=allowHTML;renderer.forExport=forExport;renderer.gradients={};// Object where gradient SvgElements are stored\nrenderer.cache={};// Cache for numerical bounding boxes\nrenderer.cacheKeys=[];renderer.imgCount=0;renderer.setSize(width,height,false);// Issue 110 workaround:\n// In Firefox, if a div is positioned by percentage, its pixel position may land\n// between pixels. The container itself doesn't display this, but an SVG element\n// inside this container will be drawn at subpixel precision. In order to draw\n// sharp lines, this must be compensated for. This doesn't seem to work inside\n// iframes though (like in jsFiddle).\nvar subPixelFix,rect;if(isFirefox&&container.getBoundingClientRect){renderer.subPixelFix=subPixelFix=function(){css(container,{left:0,top:0});rect=container.getBoundingClientRect();css(container,{left:mathCeil(rect.left)-rect.left+PX,top:mathCeil(rect.top)-rect.top+PX});};// run the fix now\nsubPixelFix();// run it on resize\naddEvent(win,'resize',subPixelFix);}},getStyle:function(style){this.style=extend({fontFamily:'\"Lucida Grande\", \"Lucida Sans Unicode\", Arial, Helvetica, sans-serif',// default font\nfontSize:'12px'},style);return this.style;},/**\n         * Detect whether the renderer is hidden. This happens when one of the parent elements\n         * has display: none. #608.\n         */isHidden:function(){return!this.boxWrapper.getBBox().width;},/**\n         * Destroys the renderer and its allocated members.\n         */destroy:function(){var renderer=this,rendererDefs=renderer.defs;renderer.box=null;renderer.boxWrapper=renderer.boxWrapper.destroy();// Call destroy on all gradient elements\ndestroyObjectProperties(renderer.gradients||{});renderer.gradients=null;// Defs are null in VMLRenderer\n// Otherwise, destroy them here.\nif(rendererDefs){renderer.defs=rendererDefs.destroy();}// Remove sub pixel fix handler\n// We need to check that there is a handler, otherwise all functions that are registered for event 'resize' are removed\n// See issue #982\nif(renderer.subPixelFix){removeEvent(win,'resize',renderer.subPixelFix);}renderer.alignedObjects=null;return null;},/**\n         * Create a wrapper for an SVG element\n         * @param {Object} nodeName\n         */createElement:function(nodeName){var wrapper=new this.Element();wrapper.init(this,nodeName);return wrapper;},/**\n         * Dummy function for use in canvas renderer\n         */draw:function(){},/**\n         * Get converted radial gradient attributes\n         */getRadialAttr:function(radialReference,gradAttr){return{cx:radialReference[0]-radialReference[2]/2+gradAttr.cx*radialReference[2],cy:radialReference[1]-radialReference[2]/2+gradAttr.cy*radialReference[2],r:gradAttr.r*radialReference[2]};},/**\n         * Parse a simple HTML string into SVG tspans\n         *\n         * @param {Object} textNode The parent text SVG node\n         */buildText:function(wrapper){var textNode=wrapper.element,renderer=this,forExport=renderer.forExport,textStr=pick(wrapper.textStr,'').toString(),hasMarkup=textStr.indexOf('<')!==-1,lines,childNodes=textNode.childNodes,styleRegex,hrefRegex,wasTooLong,parentX=attr(textNode,'x'),textStyles=wrapper.styles,width=wrapper.textWidth,textLineHeight=textStyles&&textStyles.lineHeight,textShadow=textStyles&&textStyles.textShadow,ellipsis=textStyles&&textStyles.textOverflow==='ellipsis',i=childNodes.length,tempParent=width&&!wrapper.added&&this.box,getLineHeight=function(tspan){return textLineHeight?pInt(textLineHeight):renderer.fontMetrics(/(px|em)$/.test(tspan&&tspan.style.fontSize)?tspan.style.fontSize:textStyles&&textStyles.fontSize||renderer.style.fontSize||12,tspan).h;},unescapeAngleBrackets=function(inputStr){return inputStr.replace(/&lt;/g,'<').replace(/&gt;/g,'>');};/// remove old text\nwhile(i--){textNode.removeChild(childNodes[i]);}// Skip tspans, add text directly to text node. The forceTSpan is a hook\n// used in text outline hack.\nif(!hasMarkup&&!textShadow&&!ellipsis&&textStr.indexOf(' ')===-1){textNode.appendChild(doc.createTextNode(unescapeAngleBrackets(textStr)));// Complex strings, add more logic\n}else{styleRegex=/<.*style=\"([^\"]+)\".*>/;hrefRegex=/<.*href=\"(http[^\"]+)\".*>/;if(tempParent){tempParent.appendChild(textNode);// attach it to the DOM to read offset width\n}if(hasMarkup){lines=textStr.replace(/<(b|strong)>/g,'<span style=\"font-weight:bold\">').replace(/<(i|em)>/g,'<span style=\"font-style:italic\">').replace(/<a/g,'<span').replace(/<\\/(b|strong|i|em|a)>/g,'</span>').split(/<br.*?>/g);}else{lines=[textStr];}// Trim empty lines (#5261)\nlines=grep(lines,function(line){return line!=='';});// build the lines\neach(lines,function buildTextLines(line,lineNo){var spans,spanNo=0;line=line.replace(/^\\s+|\\s+$/g,'')// Trim to prevent useless/costly process on the spaces (#5258)\n.replace(/<span/g,'|||<span').replace(/<\\/span>/g,'</span>|||');spans=line.split('|||');each(spans,function buildTextSpans(span){if(span!==''||spans.length===1){var attributes={},tspan=doc.createElementNS(SVG_NS,'tspan'),spanStyle;// #390\nif(styleRegex.test(span)){spanStyle=span.match(styleRegex)[1].replace(/(;| |^)color([ :])/,'$1fill$2');attr(tspan,'style',spanStyle);}if(hrefRegex.test(span)&&!forExport){// Not for export - #1529\nattr(tspan,'onclick','location.href=\\\"'+span.match(hrefRegex)[1]+'\\\"');css(tspan,{cursor:'pointer'});}span=unescapeAngleBrackets(span.replace(/<(.|\\n)*?>/g,'')||' ');// Nested tags aren't supported, and cause crash in Safari (#1596)\nif(span!==' '){// add the text node\ntspan.appendChild(doc.createTextNode(span));if(!spanNo){// first span in a line, align it to the left\nif(lineNo&&parentX!==null){attributes.x=parentX;}}else{attributes.dx=0;// #16\n}// add attributes\nattr(tspan,attributes);// Append it\ntextNode.appendChild(tspan);// first span on subsequent line, add the line height\nif(!spanNo&&lineNo){// allow getting the right offset height in exporting in IE\nif(!hasSVG&&forExport){css(tspan,{display:'block'});}// Set the line height based on the font size of either\n// the text element or the tspan element\nattr(tspan,'dy',getLineHeight(tspan));}/*if (width) {\n                                    renderer.breakText(wrapper, width);\n                                }*/ // Check width and apply soft breaks or ellipsis\nif(width){var words=span.replace(/([^\\^])-/g,'$1- ').split(' '),// #1273\nhasWhiteSpace=spans.length>1||lineNo||words.length>1&&textStyles.whiteSpace!=='nowrap',tooLong,actualWidth,rest=[],dy=getLineHeight(tspan),softLineNo=1,rotation=wrapper.rotation,wordStr=span,// for ellipsis\ncursor=wordStr.length,// binary search cursor\nbBox;while((hasWhiteSpace||ellipsis)&&(words.length||rest.length)){wrapper.rotation=0;// discard rotation when computing box\nbBox=wrapper.getBBox(true);actualWidth=bBox.width;// Old IE cannot measure the actualWidth for SVG elements (#2314)\nif(!hasSVG&&renderer.forExport){actualWidth=renderer.measureSpanWidth(tspan.firstChild.data,wrapper.styles);}tooLong=actualWidth>width;// For ellipsis, do a binary search for the correct string length\nif(wasTooLong===undefined){wasTooLong=tooLong;// First time\n}if(ellipsis&&wasTooLong){cursor/=2;if(wordStr===''||!tooLong&&cursor<0.5){words=[];// All ok, break out\n}else{wordStr=span.substring(0,wordStr.length+(tooLong?-1:1)*mathCeil(cursor));words=[wordStr+(width>3?'\\u2026':'')];tspan.removeChild(tspan.firstChild);}// Looping down, this is the first word sequence that is not too long,\n// so we can move on to build the next line.\n}else if(!tooLong||words.length===1){words=rest;rest=[];if(words.length){softLineNo++;tspan=doc.createElementNS(SVG_NS,'tspan');attr(tspan,{dy:dy,x:parentX});if(spanStyle){// #390\nattr(tspan,'style',spanStyle);}textNode.appendChild(tspan);}if(actualWidth>width){// a single word is pressing it out\nwidth=actualWidth;}}else{// append to existing line tspan\ntspan.removeChild(tspan.firstChild);rest.unshift(words.pop());}if(words.length){tspan.appendChild(doc.createTextNode(words.join(' ').replace(/- /g,'-')));}}wrapper.rotation=rotation;}spanNo++;}}});});if(wasTooLong){wrapper.attr('title',wrapper.textStr);}if(tempParent){tempParent.removeChild(textNode);// attach it to the DOM to read offset width\n}// Apply the text shadow\nif(textShadow&&wrapper.applyTextShadow){wrapper.applyTextShadow(textShadow);}}},/*\n        breakText: function (wrapper, width) {\n            var bBox = wrapper.getBBox(),\n                node = wrapper.element,\n                textLength = node.textContent.length,\n                pos = mathRound(width * textLength / bBox.width), // try this position first, based on average character width\n                increment = 0,\n                finalPos;\n\n            if (bBox.width > width) {\n                while (finalPos === undefined) {\n                    textLength = node.getSubStringLength(0, pos);\n\n                    if (textLength <= width) {\n                        if (increment === -1) {\n                            finalPos = pos;\n                        } else {\n                            increment = 1;\n                        }\n                    } else {\n                        if (increment === 1) {\n                            finalPos = pos - 1;\n                        } else {\n                            increment = -1;\n                        }\n                    }\n                    pos += increment;\n                }\n            }\n            console.log('width', width, 'stringWidth', node.getSubStringLength(0, finalPos))\n        },\n        */ /**\n         * Returns white for dark colors and black for bright colors\n         */getContrast:function(color){color=Color(color).rgba;return color[0]+color[1]+color[2]>384?'#000000':'#FFFFFF';},/**\n         * Create a button with preset states\n         * @param {String} text\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Function} callback\n         * @param {Object} normalState\n         * @param {Object} hoverState\n         * @param {Object} pressedState\n         */button:function(text,x,y,callback,normalState,hoverState,pressedState,disabledState,shape){var label=this.label(text,x,y,shape,null,null,null,null,'button'),curState=0,stateOptions,stateStyle,normalStyle,hoverStyle,pressedStyle,disabledStyle,verticalGradient={x1:0,y1:0,x2:0,y2:1};// Normal state - prepare the attributes\nnormalState=merge({'stroke-width':1,stroke:'#CCCCCC',fill:{linearGradient:verticalGradient,stops:[[0,'#FEFEFE'],[1,'#F6F6F6']]},r:2,padding:5,style:{color:'black'}},normalState);normalStyle=normalState.style;delete normalState.style;// Hover state\nhoverState=merge(normalState,{stroke:'#68A',fill:{linearGradient:verticalGradient,stops:[[0,'#FFF'],[1,'#ACF']]}},hoverState);hoverStyle=hoverState.style;delete hoverState.style;// Pressed state\npressedState=merge(normalState,{stroke:'#68A',fill:{linearGradient:verticalGradient,stops:[[0,'#9BD'],[1,'#CDF']]}},pressedState);pressedStyle=pressedState.style;delete pressedState.style;// Disabled state\ndisabledState=merge(normalState,{style:{color:'#CCC'}},disabledState);disabledStyle=disabledState.style;delete disabledState.style;// Add the events. IE9 and IE10 need mouseover and mouseout to funciton (#667).\naddEvent(label.element,isMS?'mouseover':'mouseenter',function(){if(curState!==3){label.attr(hoverState).css(hoverStyle);}});addEvent(label.element,isMS?'mouseout':'mouseleave',function(){if(curState!==3){stateOptions=[normalState,hoverState,pressedState][curState];stateStyle=[normalStyle,hoverStyle,pressedStyle][curState];label.attr(stateOptions).css(stateStyle);}});label.setState=function(state){label.state=curState=state;if(!state){label.attr(normalState).css(normalStyle);}else if(state===2){label.attr(pressedState).css(pressedStyle);}else if(state===3){label.attr(disabledState).css(disabledStyle);}};return label.on('click',function(e){if(curState!==3){callback.call(label,e);}}).attr(normalState).css(extend({cursor:'default'},normalStyle));},/**\n         * Make a straight line crisper by not spilling out to neighbour pixels\n         * @param {Array} points\n         * @param {Number} width\n         */crispLine:function(points,width){// points format: [M, 0, 0, L, 100, 0]\n// normalize to a crisp line\nif(points[1]===points[4]){// Substract due to #1129. Now bottom and left axis gridlines behave the same.\npoints[1]=points[4]=mathRound(points[1])-width%2/2;}if(points[2]===points[5]){points[2]=points[5]=mathRound(points[2])+width%2/2;}return points;},/**\n         * Draw a path\n         * @param {Array} path An SVG path in array form\n         */path:function(path){var attr={fill:NONE};if(isArray(path)){attr.d=path;}else if(isObject(path)){// attributes\nextend(attr,path);}return this.createElement('path').attr(attr);},/**\n         * Draw and return an SVG circle\n         * @param {Number} x The x position\n         * @param {Number} y The y position\n         * @param {Number} r The radius\n         */circle:function(x,y,r){var attr=isObject(x)?x:{x:x,y:y,r:r},wrapper=this.createElement('circle');// Setting x or y translates to cx and cy\nwrapper.xSetter=wrapper.ySetter=function(value,key,element){element.setAttribute('c'+key,value);};return wrapper.attr(attr);},/**\n         * Draw and return an arc\n         * @param {Number} x X position\n         * @param {Number} y Y position\n         * @param {Number} r Radius\n         * @param {Number} innerR Inner radius like used in donut charts\n         * @param {Number} start Starting angle\n         * @param {Number} end Ending angle\n         */arc:function(x,y,r,innerR,start,end){var arc;if(isObject(x)){y=x.y;r=x.r;innerR=x.innerR;start=x.start;end=x.end;x=x.x;}// Arcs are defined as symbols for the ability to set\n// attributes in attr and animate\narc=this.symbol('arc',x||0,y||0,r||0,r||0,{innerR:innerR||0,start:start||0,end:end||0});arc.r=r;// #959\nreturn arc;},/**\n         * Draw and return a rectangle\n         * @param {Number} x Left position\n         * @param {Number} y Top position\n         * @param {Number} width\n         * @param {Number} height\n         * @param {Number} r Border corner radius\n         * @param {Number} strokeWidth A stroke width can be supplied to allow crisp drawing\n         */rect:function(x,y,width,height,r,strokeWidth){r=isObject(x)?x.r:r;var wrapper=this.createElement('rect'),attribs=isObject(x)?x:x===UNDEFINED?{}:{x:x,y:y,width:mathMax(width,0),height:mathMax(height,0)};if(strokeWidth!==UNDEFINED){wrapper.strokeWidth=strokeWidth;attribs=wrapper.crisp(attribs);}if(r){attribs.r=r;}wrapper.rSetter=function(value,key,element){attr(element,{rx:value,ry:value});};return wrapper.attr(attribs);},/**\n         * Resize the box and re-align all aligned elements\n         * @param {Object} width\n         * @param {Object} height\n         * @param {Boolean} animate\n         *\n         */setSize:function(width,height,animate){var renderer=this,alignedObjects=renderer.alignedObjects,i=alignedObjects.length;renderer.width=width;renderer.height=height;renderer.boxWrapper[pick(animate,true)?'animate':'attr']({width:width,height:height});while(i--){alignedObjects[i].align();}},/**\n         * Create a group\n         * @param {String} name The group will be given a class name of 'highcharts-{name}'.\n         *     This can be used for styling and scripting.\n         */g:function(name){var elem=this.createElement('g');return defined(name)?elem.attr({'class':PREFIX+name}):elem;},/**\n         * Display an image\n         * @param {String} src\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */image:function(src,x,y,width,height){var attribs={preserveAspectRatio:NONE},elemWrapper;// optional properties\nif(arguments.length>1){extend(attribs,{x:x,y:y,width:width,height:height});}elemWrapper=this.createElement('image').attr(attribs);// set the href in the xlink namespace\nif(elemWrapper.element.setAttributeNS){elemWrapper.element.setAttributeNS('http://www.w3.org/1999/xlink','href',src);}else{// could be exporting in IE\n// using href throws \"not supported\" in ie7 and under, requries regex shim to fix later\nelemWrapper.element.setAttribute('hc-svg-href',src);}return elemWrapper;},/**\n         * Draw a symbol out of pre-defined shape paths from the namespace 'symbol' object.\n         *\n         * @param {Object} symbol\n         * @param {Object} x\n         * @param {Object} y\n         * @param {Object} radius\n         * @param {Object} options\n         */symbol:function(symbol,x,y,width,height,options){var ren=this,obj,// get the symbol definition function\nsymbolFn=this.symbols[symbol],// check if there's a path defined for this symbol\npath=symbolFn&&symbolFn(mathRound(x),mathRound(y),width,height,options),imageRegex=/^url\\((.*?)\\)$/,imageSrc,imageSize,centerImage;if(path){obj=this.path(path);// expando properties for use in animate and attr\nextend(obj,{symbolName:symbol,x:x,y:y,width:width,height:height});if(options){extend(obj,options);}// image symbols\n}else if(imageRegex.test(symbol)){// On image load, set the size and position\ncenterImage=function(img,size){if(img.element){// it may be destroyed in the meantime (#1390)\nimg.attr({width:size[0],height:size[1]});if(!img.alignByTranslate){// #185\nimg.translate(mathRound((width-size[0])/2),// #1378\nmathRound((height-size[1])/2));}}};imageSrc=symbol.match(imageRegex)[1];imageSize=symbolSizes[imageSrc]||options&&options.width&&options.height&&[options.width,options.height];// Ireate the image synchronously, add attribs async\nobj=this.image(imageSrc).attr({x:x,y:y});obj.isImg=true;if(imageSize){centerImage(obj,imageSize);}else{// Initialize image to be 0 size so export will still function if there's no cached sizes.\nobj.attr({width:0,height:0});// Create a dummy JavaScript image to get the width and height. Due to a bug in IE < 8,\n// the created element must be assigned to a variable in order to load (#292).\ncreateElement('img',{onload:function(){// Special case for SVGs on IE11, the width is not accessible until the image is\n// part of the DOM (#2854).\nif(this.width===0){css(this,{position:ABSOLUTE,top:'-999em'});doc.body.appendChild(this);}// Center the image\ncenterImage(obj,symbolSizes[imageSrc]=[this.width,this.height]);// Clean up after #2854 workaround.\nif(this.parentNode){this.parentNode.removeChild(this);}// Fire the load event when all external images are loaded\nren.imgCount--;if(!ren.imgCount&&charts[ren.chartIndex].onload){charts[ren.chartIndex].onload();}},src:imageSrc});this.imgCount++;}}return obj;},/**\n         * An extendable collection of functions for defining symbol paths.\n         */symbols:{'circle':function(x,y,w,h){var cpw=0.166*w;return[M,x+w/2,y,'C',x+w+cpw,y,x+w+cpw,y+h,x+w/2,y+h,'C',x-cpw,y+h,x-cpw,y,x+w/2,y,'Z'];},'square':function(x,y,w,h){return[M,x,y,L,x+w,y,x+w,y+h,x,y+h,'Z'];},'triangle':function(x,y,w,h){return[M,x+w/2,y,L,x+w,y+h,x,y+h,'Z'];},'triangle-down':function(x,y,w,h){return[M,x,y,L,x+w,y,x+w/2,y+h,'Z'];},'diamond':function(x,y,w,h){return[M,x+w/2,y,L,x+w,y+h/2,x+w/2,y+h,x,y+h/2,'Z'];},'arc':function(x,y,w,h,options){var start=options.start,radius=options.r||w||h,end=options.end-0.001,// to prevent cos and sin of start and end from becoming equal on 360 arcs (related: #1561)\ninnerRadius=options.innerR,open=options.open,cosStart=mathCos(start),sinStart=mathSin(start),cosEnd=mathCos(end),sinEnd=mathSin(end),longArc=options.end-start<mathPI?0:1;return[M,x+radius*cosStart,y+radius*sinStart,'A',// arcTo\nradius,// x radius\nradius,// y radius\n0,// slanting\nlongArc,// long or short arc\n1,// clockwise\nx+radius*cosEnd,y+radius*sinEnd,open?M:L,x+innerRadius*cosEnd,y+innerRadius*sinEnd,'A',// arcTo\ninnerRadius,// x radius\ninnerRadius,// y radius\n0,// slanting\nlongArc,// long or short arc\n0,// clockwise\nx+innerRadius*cosStart,y+innerRadius*sinStart,open?'':'Z'// close\n];},/**\n             * Callout shape used for default tooltips, also used for rounded rectangles in VML\n             */callout:function(x,y,w,h,options){var arrowLength=6,halfDistance=6,r=mathMin(options&&options.r||0,w,h),safeDistance=r+halfDistance,anchorX=options&&options.anchorX,anchorY=options&&options.anchorY,path;path=['M',x+r,y,'L',x+w-r,y,// top side\n'C',x+w,y,x+w,y,x+w,y+r,// top-right corner\n'L',x+w,y+h-r,// right side\n'C',x+w,y+h,x+w,y+h,x+w-r,y+h,// bottom-right corner\n'L',x+r,y+h,// bottom side\n'C',x,y+h,x,y+h,x,y+h-r,// bottom-left corner\n'L',x,y+r,// left side\n'C',x,y,x,y,x+r,y// top-right corner\n];if(anchorX&&anchorX>w&&anchorY>y+safeDistance&&anchorY<y+h-safeDistance){// replace right side\npath.splice(13,3,'L',x+w,anchorY-halfDistance,x+w+arrowLength,anchorY,x+w,anchorY+halfDistance,x+w,y+h-r);}else if(anchorX&&anchorX<0&&anchorY>y+safeDistance&&anchorY<y+h-safeDistance){// replace left side\npath.splice(33,3,'L',x,anchorY+halfDistance,x-arrowLength,anchorY,x,anchorY-halfDistance,x,y+r);}else if(anchorY&&anchorY>h&&anchorX>x+safeDistance&&anchorX<x+w-safeDistance){// replace bottom\npath.splice(23,3,'L',anchorX+halfDistance,y+h,anchorX,y+h+arrowLength,anchorX-halfDistance,y+h,x+r,y+h);}else if(anchorY&&anchorY<0&&anchorX>x+safeDistance&&anchorX<x+w-safeDistance){// replace top\npath.splice(3,3,'L',anchorX-halfDistance,y,anchorX,y-arrowLength,anchorX+halfDistance,y,w-r,y);}return path;}},/**\n         * Define a clipping rectangle\n         * @param {String} id\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */clipRect:function(x,y,width,height){var wrapper,id=PREFIX+idCounter++,clipPath=this.createElement('clipPath').attr({id:id}).add(this.defs);wrapper=this.rect(x,y,width,height,0).add(clipPath);wrapper.id=id;wrapper.clipPath=clipPath;wrapper.count=0;return wrapper;},/**\n         * Add text to the SVG object\n         * @param {String} str\n         * @param {Number} x Left position\n         * @param {Number} y Top position\n         * @param {Boolean} useHTML Use HTML to render the text\n         */text:function(str,x,y,useHTML){// declare variables\nvar renderer=this,fakeSVG=useCanVG||!hasSVG&&renderer.forExport,wrapper,attr={};if(useHTML&&(renderer.allowHTML||!renderer.forExport)){return renderer.html(str,x,y);}attr.x=Math.round(x||0);// X is always needed for line-wrap logic\nif(y){attr.y=Math.round(y);}if(str||str===0){attr.text=str;}wrapper=renderer.createElement('text').attr(attr);// Prevent wrapping from creating false offsetWidths in export in legacy IE (#1079, #1063)\nif(fakeSVG){wrapper.css({position:ABSOLUTE});}if(!useHTML){wrapper.xSetter=function(value,key,element){var tspans=element.getElementsByTagName('tspan'),tspan,parentVal=element.getAttribute(key),i;for(i=0;i<tspans.length;i++){tspan=tspans[i];// If the x values are equal, the tspan represents a linebreak\nif(tspan.getAttribute(key)===parentVal){tspan.setAttribute(key,value);}}element.setAttribute(key,value);};}return wrapper;},/**\n         * Utility to return the baseline offset and total line height from the font size\n         */fontMetrics:function(fontSize,elem){var lineHeight,baseline,style;fontSize=fontSize||this.style.fontSize;if(!fontSize&&elem&&win.getComputedStyle){elem=elem.element||elem;// SVGElement\nstyle=win.getComputedStyle(elem,'');fontSize=style&&style.fontSize;// #4309, the style doesn't exist inside a hidden iframe in Firefox\n}fontSize=/px/.test(fontSize)?pInt(fontSize):/em/.test(fontSize)?parseFloat(fontSize)*12:12;// Empirical values found by comparing font size and bounding box height.\n// Applies to the default font family. http://jsfiddle.net/highcharts/7xvn7/\nlineHeight=fontSize<24?fontSize+3:mathRound(fontSize*1.2);baseline=mathRound(lineHeight*0.8);return{h:lineHeight,b:baseline,f:fontSize};},/**\n         * Correct X and Y positioning of a label for rotation (#1764)\n         */rotCorr:function(baseline,rotation,alterY){var y=baseline;if(rotation&&alterY){y=mathMax(y*mathCos(rotation*deg2rad),4);}return{x:-baseline/3*mathSin(rotation*deg2rad),y:y};},/**\n         * Add a label, a text item that can hold a colored or gradient background\n         * as well as a border and shadow.\n         * @param {string} str\n         * @param {Number} x\n         * @param {Number} y\n         * @param {String} shape\n         * @param {Number} anchorX In case the shape has a pointer, like a flag, this is the\n         *    coordinates it should be pinned to\n         * @param {Number} anchorY\n         * @param {Boolean} baseline Whether to position the label relative to the text baseline,\n         *    like renderer.text, or to the upper border of the rectangle.\n         * @param {String} className Class name for the group\n         */label:function(str,x,y,shape,anchorX,anchorY,useHTML,baseline,className){var renderer=this,wrapper=renderer.g(className),text=renderer.text('',0,0,useHTML).attr({zIndex:1}),//.add(wrapper),\nbox,bBox,alignFactor=0,padding=3,paddingLeft=0,width,height,wrapperX,wrapperY,crispAdjust=0,deferredAttr={},baselineOffset,needsBox,updateBoxSize,updateTextPadding,boxAttr;/**\n             * This function runs after the label is added to the DOM (when the bounding box is\n             * available), and after the text of the label is updated to detect the new bounding\n             * box and reflect it in the border box.\n             */updateBoxSize=function(){var boxX,boxY,style=text.element.style;bBox=(width===undefined||height===undefined||wrapper.styles.textAlign)&&defined(text.textStr)&&text.getBBox();//#3295 && 3514 box failure when string equals 0\nwrapper.width=(width||bBox.width||0)+2*padding+paddingLeft;wrapper.height=(height||bBox.height||0)+2*padding;// update the label-scoped y offset\nbaselineOffset=padding+renderer.fontMetrics(style&&style.fontSize,text).b;if(needsBox){if(!box){// create the border box if it is not already present\nboxX=crispAdjust;boxY=(baseline?-baselineOffset:0)+crispAdjust;wrapper.box=box=shape?renderer.symbol(shape,boxX,boxY,wrapper.width,wrapper.height,deferredAttr):renderer.rect(boxX,boxY,wrapper.width,wrapper.height,0,deferredAttr[STROKE_WIDTH]);if(!box.isImg){// #4324, fill \"none\" causes it to be ignored by mouse events in IE\nbox.attr('fill',NONE);}box.add(wrapper);}// apply the box attributes\nif(!box.isImg){// #1630\nbox.attr(extend({width:mathRound(wrapper.width),height:mathRound(wrapper.height)},deferredAttr));}deferredAttr=null;}};/**\n             * This function runs after setting text or padding, but only if padding is changed\n             */updateTextPadding=function(){var styles=wrapper.styles,textAlign=styles&&styles.textAlign,x=paddingLeft+padding,y;// determin y based on the baseline\ny=baseline?0:baselineOffset;// compensate for alignment\nif(defined(width)&&bBox&&(textAlign==='center'||textAlign==='right')){x+={center:0.5,right:1}[textAlign]*(width-bBox.width);}// update if anything changed\nif(x!==text.x||y!==text.y){text.attr('x',x);if(y!==UNDEFINED){text.attr('y',y);}}// record current values\ntext.x=x;text.y=y;};/**\n             * Set a box attribute, or defer it if the box is not yet created\n             * @param {Object} key\n             * @param {Object} value\n             */boxAttr=function(key,value){if(box){box.attr(key,value);}else{deferredAttr[key]=value;}};/**\n             * After the text element is added, get the desired size of the border box\n             * and add it before the text in the DOM.\n             */wrapper.onAdd=function(){text.add(wrapper);wrapper.attr({text:str||str===0?str:'',// alignment is available now // #3295: 0 not rendered if given as a value\nx:x,y:y});if(box&&defined(anchorX)){wrapper.attr({anchorX:anchorX,anchorY:anchorY});}};/*\n             * Add specific attribute setters.\n             */ // only change local variables\nwrapper.widthSetter=function(value){width=value;};wrapper.heightSetter=function(value){height=value;};wrapper.paddingSetter=function(value){if(defined(value)&&value!==padding){padding=wrapper.padding=value;updateTextPadding();}};wrapper.paddingLeftSetter=function(value){if(defined(value)&&value!==paddingLeft){paddingLeft=value;updateTextPadding();}};// change local variable and prevent setting attribute on the group\nwrapper.alignSetter=function(value){value={left:0,center:0.5,right:1}[value];if(value!==alignFactor){alignFactor=value;if(bBox){// Bounding box exists, means we're dynamically changing\nwrapper.attr({x:wrapperX});// #5134\n}}};// apply these to the box and the text alike\nwrapper.textSetter=function(value){if(value!==UNDEFINED){text.textSetter(value);}updateBoxSize();updateTextPadding();};// apply these to the box but not to the text\nwrapper['stroke-widthSetter']=function(value,key){if(value){needsBox=true;}crispAdjust=value%2/2;boxAttr(key,value);};wrapper.strokeSetter=wrapper.fillSetter=wrapper.rSetter=function(value,key){if(key==='fill'&&value){needsBox=true;}boxAttr(key,value);};wrapper.anchorXSetter=function(value,key){anchorX=value;boxAttr(key,mathRound(value)-crispAdjust-wrapperX);};wrapper.anchorYSetter=function(value,key){anchorY=value;boxAttr(key,value-wrapperY);};// rename attributes\nwrapper.xSetter=function(value){wrapper.x=value;// for animation getter\nif(alignFactor){value-=alignFactor*((width||bBox.width)+2*padding);}wrapperX=mathRound(value);wrapper.attr('translateX',wrapperX);};wrapper.ySetter=function(value){wrapperY=wrapper.y=mathRound(value);wrapper.attr('translateY',wrapperY);};// Redirect certain methods to either the box or the text\nvar baseCss=wrapper.css;return extend(wrapper,{/**\n                 * Pick up some properties and apply them to the text instead of the wrapper\n                 */css:function(styles){if(styles){var textStyles={};styles=merge(styles);// create a copy to avoid altering the original object (#537)\neach(wrapper.textProps,function(prop){if(styles[prop]!==UNDEFINED){textStyles[prop]=styles[prop];delete styles[prop];}});text.css(textStyles);}return baseCss.call(wrapper,styles);},/**\n                 * Return the bounding box of the box, not the group\n                 */getBBox:function(){return{width:bBox.width+2*padding,height:bBox.height+2*padding,x:bBox.x-padding,y:bBox.y-padding};},/**\n                 * Apply the shadow to the box\n                 */shadow:function(b){if(box){box.shadow(b);}return wrapper;},/**\n                 * Destroy and release memory.\n                 */destroy:function(){// Added by button implementation\nremoveEvent(wrapper.element,'mouseenter');removeEvent(wrapper.element,'mouseleave');if(text){text=text.destroy();}if(box){box=box.destroy();}// Call base implementation to destroy the rest\nSVGElement.prototype.destroy.call(wrapper);// Release local pointers (#1298)\nwrapper=renderer=updateBoxSize=updateTextPadding=boxAttr=null;}});}};// end SVGRenderer\n// general renderer\nRenderer=SVGRenderer;// extend SvgElement for useHTML option\nextend(SVGElement.prototype,{/**\n         * Apply CSS to HTML elements. This is used in text within SVG rendering and\n         * by the VML renderer\n         */htmlCss:function(styles){var wrapper=this,element=wrapper.element,textWidth=styles&&element.tagName==='SPAN'&&styles.width;if(textWidth){delete styles.width;wrapper.textWidth=textWidth;wrapper.updateTransform();}if(styles&&styles.textOverflow==='ellipsis'){styles.whiteSpace='nowrap';styles.overflow='hidden';}wrapper.styles=extend(wrapper.styles,styles);css(wrapper.element,styles);return wrapper;},/**\n         * VML and useHTML method for calculating the bounding box based on offsets\n         * @param {Boolean} refresh Whether to force a fresh value from the DOM or to\n         * use the cached value\n         *\n         * @return {Object} A hash containing values for x, y, width and height\n         */htmlGetBBox:function(){var wrapper=this,element=wrapper.element;// faking getBBox in exported SVG in legacy IE\n// faking getBBox in exported SVG in legacy IE (is this a duplicate of the fix for #1079?)\nif(element.nodeName==='text'){element.style.position=ABSOLUTE;}return{x:element.offsetLeft,y:element.offsetTop,width:element.offsetWidth,height:element.offsetHeight};},/**\n         * VML override private method to update elements based on internal\n         * properties based on SVG transform\n         */htmlUpdateTransform:function(){// aligning non added elements is expensive\nif(!this.added){this.alignOnAdd=true;return;}var wrapper=this,renderer=wrapper.renderer,elem=wrapper.element,translateX=wrapper.translateX||0,translateY=wrapper.translateY||0,x=wrapper.x||0,y=wrapper.y||0,align=wrapper.textAlign||'left',alignCorrection={left:0,center:0.5,right:1}[align],shadows=wrapper.shadows,styles=wrapper.styles;// apply translate\ncss(elem,{marginLeft:translateX,marginTop:translateY});if(shadows){// used in labels/tooltip\neach(shadows,function(shadow){css(shadow,{marginLeft:translateX+1,marginTop:translateY+1});});}// apply inversion\nif(wrapper.inverted){// wrapper is a group\neach(elem.childNodes,function(child){renderer.invertChild(child,elem);});}if(elem.tagName==='SPAN'){var rotation=wrapper.rotation,baseline,textWidth=pInt(wrapper.textWidth),whiteSpace=styles&&styles.whiteSpace,currentTextTransform=[rotation,align,elem.innerHTML,wrapper.textWidth,wrapper.textAlign].join(',');if(currentTextTransform!==wrapper.cTT){// do the calculations and DOM access only if properties changed\nbaseline=renderer.fontMetrics(elem.style.fontSize).b;// Renderer specific handling of span rotation\nif(defined(rotation)){wrapper.setSpanRotation(rotation,alignCorrection,baseline);}// Update textWidth\nif(elem.offsetWidth>textWidth&&/[ \\-]/.test(elem.textContent||elem.innerText)){// #983, #1254\ncss(elem,{width:textWidth+PX,display:'block',whiteSpace:whiteSpace||'normal'// #3331\n});wrapper.hasTextWidth=true;}else if(wrapper.hasTextWidth){// #4928\ncss(elem,{width:'',display:'',whiteSpace:whiteSpace||'nowrap'});wrapper.hasTextWidth=false;}wrapper.getSpanCorrection(wrapper.hasTextWidth?textWidth:elem.offsetWidth,baseline,alignCorrection,rotation,align);}// apply position with correction\ncss(elem,{left:x+(wrapper.xCorr||0)+PX,top:y+(wrapper.yCorr||0)+PX});// force reflow in webkit to apply the left and top on useHTML element (#1249)\nif(isWebKit){baseline=elem.offsetHeight;// assigned to baseline for lint purpose\n}// record current text transform\nwrapper.cTT=currentTextTransform;}},/**\n         * Set the rotation of an individual HTML span\n         */setSpanRotation:function(rotation,alignCorrection,baseline){var rotationStyle={},cssTransformKey=isMS?'-ms-transform':isWebKit?'-webkit-transform':isFirefox?'MozTransform':isOpera?'-o-transform':'';rotationStyle[cssTransformKey]=rotationStyle.transform='rotate('+rotation+'deg)';rotationStyle[cssTransformKey+(isFirefox?'Origin':'-origin')]=rotationStyle.transformOrigin=alignCorrection*100+'% '+baseline+'px';css(this.element,rotationStyle);},/**\n         * Get the correction in X and Y positioning as the element is rotated.\n         */getSpanCorrection:function(width,baseline,alignCorrection){this.xCorr=-width*alignCorrection;this.yCorr=-baseline;}});// Extend SvgRenderer for useHTML option.\nextend(SVGRenderer.prototype,{/**\n         * Create HTML text node. This is used by the VML renderer as well as the SVG\n         * renderer through the useHTML option.\n         *\n         * @param {String} str\n         * @param {Number} x\n         * @param {Number} y\n         */html:function(str,x,y){var wrapper=this.createElement('span'),element=wrapper.element,renderer=wrapper.renderer,isSVG=renderer.isSVG,addSetters=function(element,style){// These properties are set as attributes on the SVG group, and as\n// identical CSS properties on the div. (#3542)\neach(['opacity','visibility'],function(prop){wrap(element,prop+'Setter',function(proceed,value,key,elem){proceed.call(this,value,key,elem);style[key]=value;});});};// Text setter\nwrapper.textSetter=function(value){if(value!==element.innerHTML){delete this.bBox;}element.innerHTML=this.textStr=value;wrapper.htmlUpdateTransform();};// Add setters for the element itself (#4938)\nif(isSVG){// #4938, only for HTML within SVG\naddSetters(wrapper,wrapper.element.style);}// Various setters which rely on update transform\nwrapper.xSetter=wrapper.ySetter=wrapper.alignSetter=wrapper.rotationSetter=function(value,key){if(key==='align'){key='textAlign';// Do not overwrite the SVGElement.align method. Same as VML.\n}wrapper[key]=value;wrapper.htmlUpdateTransform();};// Set the default attributes\nwrapper.attr({text:str,x:mathRound(x),y:mathRound(y)}).css({position:ABSOLUTE,fontFamily:this.style.fontFamily,fontSize:this.style.fontSize});// Keep the whiteSpace style outside the wrapper.styles collection\nelement.style.whiteSpace='nowrap';// Use the HTML specific .css method\nwrapper.css=wrapper.htmlCss;// This is specific for HTML within SVG\nif(isSVG){wrapper.add=function(svgGroupWrapper){var htmlGroup,container=renderer.box.parentNode,parentGroup,parents=[];this.parentGroup=svgGroupWrapper;// Create a mock group to hold the HTML elements\nif(svgGroupWrapper){htmlGroup=svgGroupWrapper.div;if(!htmlGroup){// Read the parent chain into an array and read from top down\nparentGroup=svgGroupWrapper;while(parentGroup){parents.push(parentGroup);// Move up to the next parent group\nparentGroup=parentGroup.parentGroup;}// Ensure dynamically updating position when any parent is translated\neach(parents.reverse(),function(parentGroup){var htmlGroupStyle,cls=attr(parentGroup.element,'class');if(cls){cls={className:cls};}// else null\n// Create a HTML div and append it to the parent div to emulate\n// the SVG group structure\nhtmlGroup=parentGroup.div=parentGroup.div||createElement(DIV,cls,{position:ABSOLUTE,left:(parentGroup.translateX||0)+PX,top:(parentGroup.translateY||0)+PX,opacity:parentGroup.opacity// #5075\n},htmlGroup||container);// the top group is appended to container\n// Shortcut\nhtmlGroupStyle=htmlGroup.style;// Set listeners to update the HTML div's position whenever the SVG group\n// position is changed\nextend(parentGroup,{translateXSetter:function(value,key){htmlGroupStyle.left=value+PX;parentGroup[key]=value;parentGroup.doTransform=true;},translateYSetter:function(value,key){htmlGroupStyle.top=value+PX;parentGroup[key]=value;parentGroup.doTransform=true;}});addSetters(parentGroup,htmlGroupStyle);});}}else{htmlGroup=container;}htmlGroup.appendChild(element);// Shared with VML:\nwrapper.added=true;if(wrapper.alignOnAdd){wrapper.htmlUpdateTransform();}return wrapper;};}return wrapper;}});/* ****************************************************************************\n     *                                                                            *\n     * START OF INTERNET EXPLORER <= 8 SPECIFIC CODE                              *\n     *                                                                            *\n     * For applications and websites that don't need IE support, like platform    *\n     * targeted mobile apps and web apps, this code can be removed.               *\n     *                                                                            *\n     *****************************************************************************/ /**\n     * @constructor\n     */var VMLRenderer,VMLElement;if(!hasSVG&&!useCanVG){/**\n     * The VML element wrapper.\n     */VMLElement={/**\n         * Initialize a new VML element wrapper. It builds the markup as a string\n         * to minimize DOM traffic.\n         * @param {Object} renderer\n         * @param {Object} nodeName\n         */init:function(renderer,nodeName){var wrapper=this,markup=['<',nodeName,' filled=\"f\" stroked=\"f\"'],style=['position: ',ABSOLUTE,';'],isDiv=nodeName===DIV;// divs and shapes need size\nif(nodeName==='shape'||isDiv){style.push('left:0;top:0;width:1px;height:1px;');}style.push('visibility: ',isDiv?HIDDEN:VISIBLE);markup.push(' style=\"',style.join(''),'\"/>');// create element with default attributes and style\nif(nodeName){markup=isDiv||nodeName==='span'||nodeName==='img'?markup.join(''):renderer.prepVML(markup);wrapper.element=createElement(markup);}wrapper.renderer=renderer;},/**\n         * Add the node to the given parent\n         * @param {Object} parent\n         */add:function(parent){var wrapper=this,renderer=wrapper.renderer,element=wrapper.element,box=renderer.box,inverted=parent&&parent.inverted,// get the parent node\nparentNode=parent?parent.element||parent:box;if(parent){this.parentGroup=parent;}// if the parent group is inverted, apply inversion on all children\nif(inverted){// only on groups\nrenderer.invertChild(element,parentNode);}// append it\nparentNode.appendChild(element);// align text after adding to be able to read offset\nwrapper.added=true;if(wrapper.alignOnAdd&&!wrapper.deferUpdateTransform){wrapper.updateTransform();}// fire an event for internal hooks\nif(wrapper.onAdd){wrapper.onAdd();}return wrapper;},/**\n         * VML always uses htmlUpdateTransform\n         */updateTransform:SVGElement.prototype.htmlUpdateTransform,/**\n         * Set the rotation of a span with oldIE's filter\n         */setSpanRotation:function(){// Adjust for alignment and rotation. Rotation of useHTML content is not yet implemented\n// but it can probably be implemented for Firefox 3.5+ on user request. FF3.5+\n// has support for CSS3 transform. The getBBox method also needs to be updated\n// to compensate for the rotation, like it currently does for SVG.\n// Test case: http://jsfiddle.net/highcharts/Ybt44/\nvar rotation=this.rotation,costheta=mathCos(rotation*deg2rad),sintheta=mathSin(rotation*deg2rad);css(this.element,{filter:rotation?['progid:DXImageTransform.Microsoft.Matrix(M11=',costheta,', M12=',-sintheta,', M21=',sintheta,', M22=',costheta,', sizingMethod=\\'auto expand\\')'].join(''):NONE});},/**\n         * Get the positioning correction for the span after rotating.\n         */getSpanCorrection:function(width,baseline,alignCorrection,rotation,align){var costheta=rotation?mathCos(rotation*deg2rad):1,sintheta=rotation?mathSin(rotation*deg2rad):0,height=pick(this.elemHeight,this.element.offsetHeight),quad,nonLeft=align&&align!=='left';// correct x and y\nthis.xCorr=costheta<0&&-width;this.yCorr=sintheta<0&&-height;// correct for baseline and corners spilling out after rotation\nquad=costheta*sintheta<0;this.xCorr+=sintheta*baseline*(quad?1-alignCorrection:alignCorrection);this.yCorr-=costheta*baseline*(rotation?quad?alignCorrection:1-alignCorrection:1);// correct for the length/height of the text\nif(nonLeft){this.xCorr-=width*alignCorrection*(costheta<0?-1:1);if(rotation){this.yCorr-=height*alignCorrection*(sintheta<0?-1:1);}css(this.element,{textAlign:align});}},/**\n         * Converts a subset of an SVG path definition to its VML counterpart. Takes an array\n         * as the parameter and returns a string.\n         */pathToVML:function(value){// convert paths\nvar i=value.length,path=[];while(i--){// Multiply by 10 to allow subpixel precision.\n// Substracting half a pixel seems to make the coordinates\n// align with SVG, but this hasn't been tested thoroughly\nif(isNumber(value[i])){path[i]=mathRound(value[i]*10)-5;}else if(value[i]==='Z'){// close the path\npath[i]='x';}else{path[i]=value[i];// When the start X and end X coordinates of an arc are too close,\n// they are rounded to the same value above. In this case, substract or\n// add 1 from the end X and Y positions. #186, #760, #1371, #1410.\nif(value.isArc&&(value[i]==='wa'||value[i]==='at')){// Start and end X\nif(path[i+5]===path[i+7]){path[i+7]+=value[i+7]>value[i+5]?1:-1;}// Start and end Y\nif(path[i+6]===path[i+8]){path[i+8]+=value[i+8]>value[i+6]?1:-1;}}}}// Loop up again to handle path shortcuts (#2132)\n/*while (i++ < path.length) {\n                if (path[i] === 'H') { // horizontal line to\n                    path[i] = 'L';\n                    path.splice(i + 2, 0, path[i - 1]);\n                } else if (path[i] === 'V') { // vertical line to\n                    path[i] = 'L';\n                    path.splice(i + 1, 0, path[i - 2]);\n                }\n            }*/return path.join(' ')||'x';},/**\n         * Set the element's clipping to a predefined rectangle\n         *\n         * @param {String} id The id of the clip rectangle\n         */clip:function(clipRect){var wrapper=this,clipMembers,cssRet;if(clipRect){clipMembers=clipRect.members;erase(clipMembers,wrapper);// Ensure unique list of elements (#1258)\nclipMembers.push(wrapper);wrapper.destroyClip=function(){erase(clipMembers,wrapper);};cssRet=clipRect.getCSS(wrapper);}else{if(wrapper.destroyClip){wrapper.destroyClip();}cssRet={clip:docMode8?'inherit':'rect(auto)'};// #1214\n}return wrapper.css(cssRet);},/**\n         * Set styles for the element\n         * @param {Object} styles\n         */css:SVGElement.prototype.htmlCss,/**\n         * Removes a child either by removeChild or move to garbageBin.\n         * Issue 490; in VML removeChild results in Orphaned nodes according to sIEve, discardElement does not.\n         */safeRemoveChild:function(element){// discardElement will detach the node from its parent before attaching it\n// to the garbage bin. Therefore it is important that the node is attached and have parent.\nif(element.parentNode){discardElement(element);}},/**\n         * Extend element.destroy by removing it from the clip members array\n         */destroy:function(){if(this.destroyClip){this.destroyClip();}return SVGElement.prototype.destroy.apply(this);},/**\n         * Add an event listener. VML override for normalizing event parameters.\n         * @param {String} eventType\n         * @param {Function} handler\n         */on:function(eventType,handler){// simplest possible event model for internal use\nthis.element['on'+eventType]=function(){var evt=win.event;evt.target=evt.srcElement;handler(evt);};return this;},/**\n         * In stacked columns, cut off the shadows so that they don't overlap\n         */cutOffPath:function(path,length){var len;path=path.split(/[ ,]/);len=path.length;if(len===9||len===11){path[len-4]=path[len-2]=pInt(path[len-2])-10*length;}return path.join(' ');},/**\n         * Apply a drop shadow by copying elements and giving them different strokes\n         * @param {Boolean|Object} shadowOptions\n         */shadow:function(shadowOptions,group,cutOff){var shadows=[],i,element=this.element,renderer=this.renderer,shadow,elemStyle=element.style,markup,path=element.path,strokeWidth,modifiedPath,shadowWidth,shadowElementOpacity;// some times empty paths are not strings\nif(path&&typeof path.value!=='string'){path='x';}modifiedPath=path;if(shadowOptions){shadowWidth=pick(shadowOptions.width,3);shadowElementOpacity=(shadowOptions.opacity||0.15)/shadowWidth;for(i=1;i<=3;i++){strokeWidth=shadowWidth*2+1-2*i;// Cut off shadows for stacked column items\nif(cutOff){modifiedPath=this.cutOffPath(path.value,strokeWidth+0.5);}markup=['<shape isShadow=\"true\" strokeweight=\"',strokeWidth,'\" filled=\"false\" path=\"',modifiedPath,'\" coordsize=\"10 10\" style=\"',element.style.cssText,'\" />'];shadow=createElement(renderer.prepVML(markup),null,{left:pInt(elemStyle.left)+pick(shadowOptions.offsetX,1),top:pInt(elemStyle.top)+pick(shadowOptions.offsetY,1)});if(cutOff){shadow.cutOff=strokeWidth+1;}// apply the opacity\nmarkup=['<stroke color=\"',shadowOptions.color||'black','\" opacity=\"',shadowElementOpacity*i,'\"/>'];createElement(renderer.prepVML(markup),null,null,shadow);// insert it\nif(group){group.element.appendChild(shadow);}else{element.parentNode.insertBefore(shadow,element);}// record it\nshadows.push(shadow);}this.shadows=shadows;}return this;},updateShadows:noop,// Used in SVG only\nsetAttr:function(key,value){if(docMode8){// IE8 setAttribute bug\nthis.element[key]=value;}else{this.element.setAttribute(key,value);}},classSetter:function(value){// IE8 Standards mode has problems retrieving the className unless set like this\nthis.element.className=value;},dashstyleSetter:function(value,key,element){var strokeElem=element.getElementsByTagName('stroke')[0]||createElement(this.renderer.prepVML(['<stroke/>']),null,null,element);strokeElem[key]=value||'solid';this[key]=value;/* because changing stroke-width will change the dash length\n                and cause an epileptic effect */},dSetter:function(value,key,element){var i,shadows=this.shadows;value=value||[];this.d=value.join&&value.join(' ');// used in getter for animation\nelement.path=value=this.pathToVML(value);// update shadows\nif(shadows){i=shadows.length;while(i--){shadows[i].path=shadows[i].cutOff?this.cutOffPath(value,shadows[i].cutOff):value;}}this.setAttr(key,value);},fillSetter:function(value,key,element){var nodeName=element.nodeName;if(nodeName==='SPAN'){// text color\nelement.style.color=value;}else if(nodeName!=='IMG'){// #1336\nelement.filled=value!==NONE;this.setAttr('fillcolor',this.renderer.color(value,element,key,this));}},'fill-opacitySetter':function(value,key,element){createElement(this.renderer.prepVML(['<',key.split('-')[0],' opacity=\"',value,'\"/>']),null,null,element);},opacitySetter:noop,// Don't bother - animation is too slow and filters introduce artifacts\nrotationSetter:function(value,key,element){var style=element.style;this[key]=style[key]=value;// style is for #1873\n// Correction for the 1x1 size of the shape container. Used in gauge needles.\nstyle.left=-mathRound(mathSin(value*deg2rad)+1)+PX;style.top=mathRound(mathCos(value*deg2rad))+PX;},strokeSetter:function(value,key,element){this.setAttr('strokecolor',this.renderer.color(value,element,key,this));},'stroke-widthSetter':function(value,key,element){element.stroked=!!value;// VML \"stroked\" attribute\nthis[key]=value;// used in getter, issue #113\nif(isNumber(value)){value+=PX;}this.setAttr('strokeweight',value);},titleSetter:function(value,key){this.setAttr(key,value);},visibilitySetter:function(value,key,element){// Handle inherited visibility\nif(value==='inherit'){value=VISIBLE;}// Let the shadow follow the main element\nif(this.shadows){each(this.shadows,function(shadow){shadow.style[key]=value;});}// Instead of toggling the visibility CSS property, move the div out of the viewport.\n// This works around #61 and #586\nif(element.nodeName==='DIV'){value=value===HIDDEN?'-999em':0;// In order to redraw, IE7 needs the div to be visible when tucked away\n// outside the viewport. So the visibility is actually opposite of\n// the expected value. This applies to the tooltip only.\nif(!docMode8){element.style[key]=value?VISIBLE:HIDDEN;}key='top';}element.style[key]=value;},xSetter:function(value,key,element){this[key]=value;// used in getter\nif(key==='x'){key='left';}else if(key==='y'){key='top';}/* else {\n                value = mathMax(0, value); // don't set width or height below zero (#311)\n            }*/ // clipping rectangle special\nif(this.updateClipping){this[key]=value;// the key is now 'left' or 'top' for 'x' and 'y'\nthis.updateClipping();}else{// normal\nelement.style[key]=value;}},zIndexSetter:function(value,key,element){element.style[key]=value;}};VMLElement['stroke-opacitySetter']=VMLElement['fill-opacitySetter'];Highcharts.VMLElement=VMLElement=extendClass(SVGElement,VMLElement);// Some shared setters\nVMLElement.prototype.ySetter=VMLElement.prototype.widthSetter=VMLElement.prototype.heightSetter=VMLElement.prototype.xSetter;/**\n     * The VML renderer\n     */var VMLRendererExtension={// inherit SVGRenderer\nElement:VMLElement,isIE8:userAgent.indexOf('MSIE 8.0')>-1,/**\n         * Initialize the VMLRenderer\n         * @param {Object} container\n         * @param {Number} width\n         * @param {Number} height\n         */init:function(container,width,height,style){var renderer=this,boxWrapper,box,css;renderer.alignedObjects=[];boxWrapper=renderer.createElement(DIV).css(extend(this.getStyle(style),{position:'relative'}));box=boxWrapper.element;container.appendChild(boxWrapper.element);// generate the containing box\nrenderer.isVML=true;renderer.box=box;renderer.boxWrapper=boxWrapper;renderer.gradients={};renderer.cache={};// Cache for numerical bounding boxes\nrenderer.cacheKeys=[];renderer.imgCount=0;renderer.setSize(width,height,false);// The only way to make IE6 and IE7 print is to use a global namespace. However,\n// with IE8 the only way to make the dynamic shapes visible in screen and print mode\n// seems to be to add the xmlns attribute and the behaviour style inline.\nif(!doc.namespaces.hcv){doc.namespaces.add('hcv','urn:schemas-microsoft-com:vml');// Setup default CSS (#2153, #2368, #2384)\ncss='hcv\\\\:fill, hcv\\\\:path, hcv\\\\:shape, hcv\\\\:stroke'+'{ behavior:url(#default#VML); display: inline-block; } ';try{doc.createStyleSheet().cssText=css;}catch(e){doc.styleSheets[0].cssText+=css;}}},/**\n         * Detect whether the renderer is hidden. This happens when one of the parent elements\n         * has display: none\n         */isHidden:function(){return!this.box.offsetWidth;},/**\n         * Define a clipping rectangle. In VML it is accomplished by storing the values\n         * for setting the CSS style to all associated members.\n         *\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */clipRect:function(x,y,width,height){// create a dummy element\nvar clipRect=this.createElement(),isObj=isObject(x);// mimic a rectangle with its style object for automatic updating in attr\nreturn extend(clipRect,{members:[],count:0,left:(isObj?x.x:x)+1,top:(isObj?x.y:y)+1,width:(isObj?x.width:width)-1,height:(isObj?x.height:height)-1,getCSS:function(wrapper){var element=wrapper.element,nodeName=element.nodeName,isShape=nodeName==='shape',inverted=wrapper.inverted,rect=this,top=rect.top-(isShape?element.offsetTop:0),left=rect.left,right=left+rect.width,bottom=top+rect.height,ret={clip:'rect('+mathRound(inverted?left:top)+'px,'+mathRound(inverted?bottom:right)+'px,'+mathRound(inverted?right:bottom)+'px,'+mathRound(inverted?top:left)+'px)'};// issue 74 workaround\nif(!inverted&&docMode8&&nodeName==='DIV'){extend(ret,{width:right+PX,height:bottom+PX});}return ret;},// used in attr and animation to update the clipping of all members\nupdateClipping:function(){each(clipRect.members,function(member){if(member.element){// Deleted series, like in stock/members/series-remove demo. Should be removed from members, but this will do.\nmember.css(clipRect.getCSS(member));}});}});},/**\n         * Take a color and return it if it's a string, make it a gradient if it's a\n         * gradient configuration object, and apply opacity.\n         *\n         * @param {Object} color The color or config object\n         */color:function(color,elem,prop,wrapper){var renderer=this,colorObject,regexRgba=/^rgba/,markup,fillType,ret=NONE;// Check for linear or radial gradient\nif(color&&color.linearGradient){fillType='gradient';}else if(color&&color.radialGradient){fillType='pattern';}if(fillType){var stopColor,stopOpacity,gradient=color.linearGradient||color.radialGradient,x1,y1,x2,y2,opacity1,opacity2,color1,color2,fillAttr='',stops=color.stops,firstStop,lastStop,colors=[],addFillNode=function(){// Add the fill subnode. When colors attribute is used, the meanings of opacity and o:opacity2\n// are reversed.\nmarkup=['<fill colors=\"'+colors.join(',')+'\" opacity=\"',opacity2,'\" o:opacity2=\"',opacity1,'\" type=\"',fillType,'\" ',fillAttr,'focus=\"100%\" method=\"any\" />'];createElement(renderer.prepVML(markup),null,null,elem);};// Extend from 0 to 1\nfirstStop=stops[0];lastStop=stops[stops.length-1];if(firstStop[0]>0){stops.unshift([0,firstStop[1]]);}if(lastStop[0]<1){stops.push([1,lastStop[1]]);}// Compute the stops\neach(stops,function(stop,i){if(regexRgba.test(stop[1])){colorObject=Color(stop[1]);stopColor=colorObject.get('rgb');stopOpacity=colorObject.get('a');}else{stopColor=stop[1];stopOpacity=1;}// Build the color attribute\ncolors.push(stop[0]*100+'% '+stopColor);// Only start and end opacities are allowed, so we use the first and the last\nif(!i){opacity1=stopOpacity;color2=stopColor;}else{opacity2=stopOpacity;color1=stopColor;}});// Apply the gradient to fills only.\nif(prop==='fill'){// Handle linear gradient angle\nif(fillType==='gradient'){x1=gradient.x1||gradient[0]||0;y1=gradient.y1||gradient[1]||0;x2=gradient.x2||gradient[2]||0;y2=gradient.y2||gradient[3]||0;fillAttr='angle=\"'+(90-math.atan((y2-y1)/(// y vector\nx2-x1)// x vector\n)*180/mathPI)+'\"';addFillNode();// Radial (circular) gradient\n}else{var r=gradient.r,sizex=r*2,sizey=r*2,cx=gradient.cx,cy=gradient.cy,radialReference=elem.radialReference,bBox,applyRadialGradient=function(){if(radialReference){bBox=wrapper.getBBox();cx+=(radialReference[0]-bBox.x)/bBox.width-0.5;cy+=(radialReference[1]-bBox.y)/bBox.height-0.5;sizex*=radialReference[2]/bBox.width;sizey*=radialReference[2]/bBox.height;}fillAttr='src=\"'+defaultOptions.global.VMLRadialGradientURL+'\" '+'size=\"'+sizex+','+sizey+'\" '+'origin=\"0.5,0.5\" '+'position=\"'+cx+','+cy+'\" '+'color2=\"'+color2+'\" ';addFillNode();};// Apply radial gradient\nif(wrapper.added){applyRadialGradient();}else{// We need to know the bounding box to get the size and position right\nwrapper.onAdd=applyRadialGradient;}// The fill element's color attribute is broken in IE8 standards mode, so we\n// need to set the parent shape's fillcolor attribute instead.\nret=color1;}// Gradients are not supported for VML stroke, return the first color. #722.\n}else{ret=stopColor;}// If the color is an rgba color, split it and add a fill node\n// to hold the opacity component\n}else if(regexRgba.test(color)&&elem.tagName!=='IMG'){colorObject=Color(color);wrapper[prop+'-opacitySetter'](colorObject.get('a'),prop,elem);ret=colorObject.get('rgb');}else{var propNodes=elem.getElementsByTagName(prop);// 'stroke' or 'fill' node\nif(propNodes.length){propNodes[0].opacity=1;propNodes[0].type='solid';}ret=color;}return ret;},/**\n         * Take a VML string and prepare it for either IE8 or IE6/IE7.\n         * @param {Array} markup A string array of the VML markup to prepare\n         */prepVML:function(markup){var vmlStyle='display:inline-block;behavior:url(#default#VML);',isIE8=this.isIE8;markup=markup.join('');if(isIE8){// add xmlns and style inline\nmarkup=markup.replace('/>',' xmlns=\"urn:schemas-microsoft-com:vml\" />');if(markup.indexOf('style=\"')===-1){markup=markup.replace('/>',' style=\"'+vmlStyle+'\" />');}else{markup=markup.replace('style=\"','style=\"'+vmlStyle);}}else{// add namespace\nmarkup=markup.replace('<','<hcv:');}return markup;},/**\n         * Create rotated and aligned text\n         * @param {String} str\n         * @param {Number} x\n         * @param {Number} y\n         */text:SVGRenderer.prototype.html,/**\n         * Create and return a path element\n         * @param {Array} path\n         */path:function(path){var attr={// subpixel precision down to 0.1 (width and height = 1px)\ncoordsize:'10 10'};if(isArray(path)){attr.d=path;}else if(isObject(path)){// attributes\nextend(attr,path);}// create the shape\nreturn this.createElement('shape').attr(attr);},/**\n         * Create and return a circle element. In VML circles are implemented as\n         * shapes, which is faster than v:oval\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} r\n         */circle:function(x,y,r){var circle=this.symbol('circle');if(isObject(x)){r=x.r;y=x.y;x=x.x;}circle.isCircle=true;// Causes x and y to mean center (#1682)\ncircle.r=r;return circle.attr({x:x,y:y});},/**\n         * Create a group using an outer div and an inner v:group to allow rotating\n         * and flipping. A simple v:group would have problems with positioning\n         * child HTML elements and CSS clip.\n         *\n         * @param {String} name The name of the group\n         */g:function(name){var wrapper,attribs;// set the class name\nif(name){attribs={'className':PREFIX+name,'class':PREFIX+name};}// the div to hold HTML and clipping\nwrapper=this.createElement(DIV).attr(attribs);return wrapper;},/**\n         * VML override to create a regular HTML image\n         * @param {String} src\n         * @param {Number} x\n         * @param {Number} y\n         * @param {Number} width\n         * @param {Number} height\n         */image:function(src,x,y,width,height){var obj=this.createElement('img').attr({src:src});if(arguments.length>1){obj.attr({x:x,y:y,width:width,height:height});}return obj;},/**\n         * For rectangles, VML uses a shape for rect to overcome bugs and rotation problems\n         */createElement:function(nodeName){return nodeName==='rect'?this.symbol(nodeName):SVGRenderer.prototype.createElement.call(this,nodeName);},/**\n         * In the VML renderer, each child of an inverted div (group) is inverted\n         * @param {Object} element\n         * @param {Object} parentNode\n         */invertChild:function(element,parentNode){var ren=this,parentStyle=parentNode.style,imgStyle=element.tagName==='IMG'&&element.style;// #1111\ncss(element,{flip:'x',left:pInt(parentStyle.width)-(imgStyle?pInt(imgStyle.top):1),top:pInt(parentStyle.height)-(imgStyle?pInt(imgStyle.left):1),rotation:-90});// Recursively invert child elements, needed for nested composite shapes like box plots and error bars. #1680, #1806.\neach(element.childNodes,function(child){ren.invertChild(child,element);});},/**\n         * Symbol definitions that override the parent SVG renderer's symbols\n         *\n         */symbols:{// VML specific arc function\narc:function(x,y,w,h,options){var start=options.start,end=options.end,radius=options.r||w||h,innerRadius=options.innerR,cosStart=mathCos(start),sinStart=mathSin(start),cosEnd=mathCos(end),sinEnd=mathSin(end),ret;if(end-start===0){// no angle, don't show it.\nreturn['x'];}ret=['wa',// clockwise arc to\nx-radius,// left\ny-radius,// top\nx+radius,// right\ny+radius,// bottom\nx+radius*cosStart,// start x\ny+radius*sinStart,// start y\nx+radius*cosEnd,// end x\ny+radius*sinEnd// end y\n];if(options.open&&!innerRadius){ret.push('e',M,x,// - innerRadius,\ny// - innerRadius\n);}ret.push('at',// anti clockwise arc to\nx-innerRadius,// left\ny-innerRadius,// top\nx+innerRadius,// right\ny+innerRadius,// bottom\nx+innerRadius*cosEnd,// start x\ny+innerRadius*sinEnd,// start y\nx+innerRadius*cosStart,// end x\ny+innerRadius*sinStart,// end y\n'x',// finish path\n'e'// close\n);ret.isArc=true;return ret;},// Add circle symbol path. This performs significantly faster than v:oval.\ncircle:function(x,y,w,h,wrapper){if(wrapper){w=h=2*wrapper.r;}// Center correction, #1682\nif(wrapper&&wrapper.isCircle){x-=w/2;y-=h/2;}// Return the path\nreturn['wa',// clockwisearcto\nx,// left\ny,// top\nx+w,// right\ny+h,// bottom\nx+w,// start x\ny+h/2,// start y\nx+w,// end x\ny+h/2,// end y\n//'x', // finish path\n'e'// close\n];},/**\n             * Add rectangle symbol path which eases rotation and omits arcsize problems\n             * compared to the built-in VML roundrect shape. When borders are not rounded,\n             * use the simpler square path, else use the callout path without the arrow.\n             */rect:function(x,y,w,h,options){return SVGRenderer.prototype.symbols[!defined(options)||!options.r?'square':'callout'].call(0,x,y,w,h,options);}}};Highcharts.VMLRenderer=VMLRenderer=function(){this.init.apply(this,arguments);};VMLRenderer.prototype=merge(SVGRenderer.prototype,VMLRendererExtension);// general renderer\nRenderer=VMLRenderer;}// This method is used with exporting in old IE, when emulating SVG (see #2314)\nSVGRenderer.prototype.measureSpanWidth=function(text,styles){var measuringSpan=doc.createElement('span'),offsetWidth,textNode=doc.createTextNode(text);measuringSpan.appendChild(textNode);css(measuringSpan,styles);this.box.appendChild(measuringSpan);offsetWidth=measuringSpan.offsetWidth;discardElement(measuringSpan);// #2463\nreturn offsetWidth;};/* ****************************************************************************\n     *                                                                            *\n     * END OF INTERNET EXPLORER <= 8 SPECIFIC CODE                                *\n     *                                                                            *\n     *****************************************************************************/ /* ****************************************************************************\n     *                                                                            *\n     * START OF ANDROID < 3 SPECIFIC CODE. THIS CAN BE REMOVED IF YOU'RE NOT      *\n     * TARGETING THAT SYSTEM.                                                     *\n     *                                                                            *\n     *****************************************************************************/var CanVGRenderer,CanVGController;/**\n     * Downloads a script and executes a callback when done.\n     * @param {String} scriptLocation\n     * @param {Function} callback\n     */function getScript(scriptLocation,callback){var head=doc.getElementsByTagName('head')[0],script=doc.createElement('script');script.type='text/javascript';script.src=scriptLocation;script.onload=callback;head.appendChild(script);}if(useCanVG){/**\n         * The CanVGRenderer is empty from start to keep the source footprint small.\n         * When requested, the CanVGController downloads the rest of the source packaged\n         * together with the canvg library.\n         */Highcharts.CanVGRenderer=CanVGRenderer=function(){// Override the global SVG namespace to fake SVG/HTML that accepts CSS\nSVG_NS='http://www.w3.org/1999/xhtml';};/**\n         * Start with an empty symbols object. This is needed when exporting is used (exporting.src.js will add a few symbols), but\n         * the implementation from SvgRenderer will not be merged in until first render.\n         */CanVGRenderer.prototype.symbols={};/**\n         * Handles on demand download of canvg rendering support.\n         */CanVGController=function(){// List of renderering calls\nvar deferredRenderCalls=[];/**\n             * When downloaded, we are ready to draw deferred charts.\n             */function drawDeferred(){var callLength=deferredRenderCalls.length,callIndex;// Draw all pending render calls\nfor(callIndex=0;callIndex<callLength;callIndex++){deferredRenderCalls[callIndex]();}// Clear the list\ndeferredRenderCalls=[];}return{push:function(func,scriptLocation){// Only get the script once\nif(deferredRenderCalls.length===0){getScript(scriptLocation,drawDeferred);}// Register render call\ndeferredRenderCalls.push(func);}};}();Renderer=CanVGRenderer;}// end CanVGRenderer\n/* ****************************************************************************\n     *                                                                            *\n     * END OF ANDROID < 3 SPECIFIC CODE                                           *\n     *                                                                            *\n     *****************************************************************************/ /**\n     * The Tick class\n     */function Tick(axis,pos,type,noLabel){this.axis=axis;this.pos=pos;this.type=type||'';this.isNew=true;if(!type&&!noLabel){this.addLabel();}}Tick.prototype={/**\n         * Write the tick label\n         */addLabel:function(){var tick=this,axis=tick.axis,options=axis.options,chart=axis.chart,categories=axis.categories,names=axis.names,pos=tick.pos,labelOptions=options.labels,str,tickPositions=axis.tickPositions,isFirst=pos===tickPositions[0],isLast=pos===tickPositions[tickPositions.length-1],value=categories?pick(categories[pos],names[pos],pos):pos,label=tick.label,tickPositionInfo=tickPositions.info,dateTimeLabelFormat;// Set the datetime label format. If a higher rank is set for this position, use that. If not,\n// use the general format.\nif(axis.isDatetimeAxis&&tickPositionInfo){dateTimeLabelFormat=options.dateTimeLabelFormats[tickPositionInfo.higherRanks[pos]||tickPositionInfo.unitName];}// set properties for access in render method\ntick.isFirst=isFirst;tick.isLast=isLast;// get the string\nstr=axis.labelFormatter.call({axis:axis,chart:chart,isFirst:isFirst,isLast:isLast,dateTimeLabelFormat:dateTimeLabelFormat,value:axis.isLog?correctFloat(axis.lin2log(value)):value});// prepare CSS\n//css = width && { width: mathMax(1, mathRound(width - 2 * (labelOptions.padding || 10))) + PX };\n// first call\nif(!defined(label)){tick.label=label=defined(str)&&labelOptions.enabled?chart.renderer.text(str,0,0,labelOptions.useHTML)//.attr(attr)\n// without position absolute, IE export sometimes is wrong\n.css(merge(labelOptions.style)).add(axis.labelGroup):null;tick.labelLength=label&&label.getBBox().width;// Un-rotated length\ntick.rotation=0;// Base value to detect change for new calls to getBBox\n// update\n}else if(label){label.attr({text:str});}},/**\n         * Get the offset height or width of the label\n         */getLabelSize:function(){return this.label?this.label.getBBox()[this.axis.horiz?'height':'width']:0;},/**\n         * Handle the label overflow by adjusting the labels to the left and right edge, or\n         * hide them if they collide into the neighbour label.\n         */handleOverflow:function(xy){var axis=this.axis,pxPos=xy.x,chartWidth=axis.chart.chartWidth,spacing=axis.chart.spacing,leftBound=pick(axis.labelLeft,mathMin(axis.pos,spacing[3])),rightBound=pick(axis.labelRight,mathMax(axis.pos+axis.len,chartWidth-spacing[1])),label=this.label,rotation=this.rotation,factor={left:0,center:0.5,right:1}[axis.labelAlign],labelWidth=label.getBBox().width,slotWidth=axis.getSlotWidth(),modifiedSlotWidth=slotWidth,xCorrection=factor,goRight=1,leftPos,rightPos,textWidth,css={};// Check if the label overshoots the chart spacing box. If it does, move it.\n// If it now overshoots the slotWidth, add ellipsis.\nif(!rotation){leftPos=pxPos-factor*labelWidth;rightPos=pxPos+(1-factor)*labelWidth;if(leftPos<leftBound){modifiedSlotWidth=xy.x+modifiedSlotWidth*(1-factor)-leftBound;}else if(rightPos>rightBound){modifiedSlotWidth=rightBound-xy.x+modifiedSlotWidth*factor;goRight=-1;}modifiedSlotWidth=mathMin(slotWidth,modifiedSlotWidth);// #4177\nif(modifiedSlotWidth<slotWidth&&axis.labelAlign==='center'){xy.x+=goRight*(slotWidth-modifiedSlotWidth-xCorrection*(slotWidth-mathMin(labelWidth,modifiedSlotWidth)));}// If the label width exceeds the available space, set a text width to be\n// picked up below. Also, if a width has been set before, we need to set a new\n// one because the reported labelWidth will be limited by the box (#3938).\nif(labelWidth>modifiedSlotWidth||axis.autoRotation&&label.styles.width){textWidth=modifiedSlotWidth;}// Add ellipsis to prevent rotated labels to be clipped against the edge of the chart\n}else if(rotation<0&&pxPos-factor*labelWidth<leftBound){textWidth=mathRound(pxPos/mathCos(rotation*deg2rad)-leftBound);}else if(rotation>0&&pxPos+factor*labelWidth>rightBound){textWidth=mathRound((chartWidth-pxPos)/mathCos(rotation*deg2rad));}if(textWidth){css.width=textWidth;if(!axis.options.labels.style.textOverflow){css.textOverflow='ellipsis';}label.css(css);}},/**\n         * Get the x and y position for ticks and labels\n         */getPosition:function(horiz,pos,tickmarkOffset,old){var axis=this.axis,chart=axis.chart,cHeight=old&&chart.oldChartHeight||chart.chartHeight;return{x:horiz?axis.translate(pos+tickmarkOffset,null,null,old)+axis.transB:axis.left+axis.offset+(axis.opposite?(old&&chart.oldChartWidth||chart.chartWidth)-axis.right-axis.left:0),y:horiz?cHeight-axis.bottom+axis.offset-(axis.opposite?axis.height:0):cHeight-axis.translate(pos+tickmarkOffset,null,null,old)-axis.transB};},/**\n         * Get the x, y position of the tick label\n         */getLabelPosition:function(x,y,label,horiz,labelOptions,tickmarkOffset,index,step){var axis=this.axis,transA=axis.transA,reversed=axis.reversed,staggerLines=axis.staggerLines,rotCorr=axis.tickRotCorr||{x:0,y:0},yOffset=labelOptions.y,line;if(!defined(yOffset)){if(axis.side===0){yOffset=label.rotation?-8:-label.getBBox().height;}else if(axis.side===2){yOffset=rotCorr.y+8;}else{// #3140, #3140\nyOffset=mathCos(label.rotation*deg2rad)*(rotCorr.y-label.getBBox(false,0).height/2);}}x=x+labelOptions.x+rotCorr.x-(tickmarkOffset&&horiz?tickmarkOffset*transA*(reversed?-1:1):0);y=y+yOffset-(tickmarkOffset&&!horiz?tickmarkOffset*transA*(reversed?1:-1):0);// Correct for staggered labels\nif(staggerLines){line=index/(step||1)%staggerLines;if(axis.opposite){line=staggerLines-line-1;}y+=line*(axis.labelOffset/staggerLines);}return{x:x,y:mathRound(y)};},/**\n         * Extendible method to return the path of the marker\n         */getMarkPath:function(x,y,tickLength,tickWidth,horiz,renderer){return renderer.crispLine([M,x,y,L,x+(horiz?0:-tickLength),y+(horiz?tickLength:0)],tickWidth);},/**\n         * Put everything in place\n         *\n         * @param index {Number}\n         * @param old {Boolean} Use old coordinates to prepare an animation into new position\n         */render:function(index,old,opacity){var tick=this,axis=tick.axis,options=axis.options,chart=axis.chart,renderer=chart.renderer,horiz=axis.horiz,type=tick.type,label=tick.label,pos=tick.pos,labelOptions=options.labels,gridLine=tick.gridLine,gridPrefix=type?type+'Grid':'grid',tickPrefix=type?type+'Tick':'tick',gridLineWidth=options[gridPrefix+'LineWidth'],gridLineColor=options[gridPrefix+'LineColor'],dashStyle=options[gridPrefix+'LineDashStyle'],tickSize=axis.tickSize(tickPrefix),tickColor=options[tickPrefix+'Color'],gridLinePath,mark=tick.mark,markPath,step=/*axis.labelStep || */labelOptions.step,attribs,show=true,tickmarkOffset=axis.tickmarkOffset,xy=tick.getPosition(horiz,pos,tickmarkOffset,old),x=xy.x,y=xy.y,reverseCrisp=horiz&&x===axis.pos+axis.len||!horiz&&y===axis.pos?-1:1;// #1480, #1687\nopacity=pick(opacity,1);this.isActive=true;// create the grid line\nif(gridLineWidth){gridLinePath=axis.getPlotLinePath(pos+tickmarkOffset,gridLineWidth*reverseCrisp,old,true);if(gridLine===UNDEFINED){attribs={stroke:gridLineColor,'stroke-width':gridLineWidth};if(dashStyle){attribs.dashstyle=dashStyle;}if(!type){attribs.zIndex=1;}if(old){attribs.opacity=0;}tick.gridLine=gridLine=gridLineWidth?renderer.path(gridLinePath).attr(attribs).add(axis.gridGroup):null;}// If the parameter 'old' is set, the current call will be followed\n// by another call, therefore do not do any animations this time\nif(!old&&gridLine&&gridLinePath){gridLine[tick.isNew?'attr':'animate']({d:gridLinePath,opacity:opacity});}}// create the tick mark\nif(tickSize){if(axis.opposite){tickSize[0]=-tickSize[0];}markPath=tick.getMarkPath(x,y,tickSize[0],tickSize[1]*reverseCrisp,horiz,renderer);if(mark){// updating\nmark.animate({d:markPath,opacity:opacity});}else{// first time\ntick.mark=renderer.path(markPath).attr({stroke:tickColor,'stroke-width':tickSize[1],opacity:opacity}).add(axis.axisGroup);}}// the label is created on init - now move it into place\nif(label&&isNumber(x)){label.xy=xy=tick.getLabelPosition(x,y,label,horiz,labelOptions,tickmarkOffset,index,step);// Apply show first and show last. If the tick is both first and last, it is\n// a single centered tick, in which case we show the label anyway (#2100).\nif(tick.isFirst&&!tick.isLast&&!pick(options.showFirstLabel,1)||tick.isLast&&!tick.isFirst&&!pick(options.showLastLabel,1)){show=false;// Handle label overflow and show or hide accordingly\n}else if(horiz&&!axis.isRadial&&!labelOptions.step&&!labelOptions.rotation&&!old&&opacity!==0){tick.handleOverflow(xy);}// apply step\nif(step&&index%step){// show those indices dividable by step\nshow=false;}// Set the new position, and show or hide\nif(show&&isNumber(xy.y)){xy.opacity=opacity;label[tick.isNew?'attr':'animate'](xy);tick.isNew=false;}else{label.attr('y',-9999);// #1338\n}}},/**\n         * Destructor for the tick prototype\n         */destroy:function(){destroyObjectProperties(this,this.axis);}};/**\n     * The object wrapper for plot lines and plot bands\n     * @param {Object} options\n     */Highcharts.PlotLineOrBand=function(axis,options){this.axis=axis;if(options){this.options=options;this.id=options.id;}};Highcharts.PlotLineOrBand.prototype={/**\n         * Render the plot line or plot band. If it is already existing,\n         * move it.\n         */render:function(){var plotLine=this,axis=plotLine.axis,horiz=axis.horiz,options=plotLine.options,optionsLabel=options.label,label=plotLine.label,width=options.width,to=options.to,from=options.from,isBand=defined(from)&&defined(to),value=options.value,dashStyle=options.dashStyle,svgElem=plotLine.svgElem,path=[],addEvent,eventType,color=options.color,zIndex=pick(options.zIndex,0),events=options.events,attribs={},renderer=axis.chart.renderer,log2lin=axis.log2lin;// logarithmic conversion\nif(axis.isLog){from=log2lin(from);to=log2lin(to);value=log2lin(value);}// plot line\nif(width){path=axis.getPlotLinePath(value,width);attribs={stroke:color,'stroke-width':width};if(dashStyle){attribs.dashstyle=dashStyle;}}else if(isBand){// plot band\npath=axis.getPlotBandPath(from,to,options);if(color){attribs.fill=color;}if(options.borderWidth){attribs.stroke=options.borderColor;attribs['stroke-width']=options.borderWidth;}}else{return;}// zIndex\nattribs.zIndex=zIndex;// common for lines and bands\nif(svgElem){if(path){svgElem.show();svgElem.animate({d:path});}else{svgElem.hide();if(label){plotLine.label=label=label.destroy();}}}else if(path&&path.length){plotLine.svgElem=svgElem=renderer.path(path).attr(attribs).add();// events\nif(events){addEvent=function(eventType){svgElem.on(eventType,function(e){events[eventType].apply(plotLine,[e]);});};for(eventType in events){addEvent(eventType);}}}// the plot band/line label\nif(optionsLabel&&defined(optionsLabel.text)&&path&&path.length&&axis.width>0&&axis.height>0&&!path.flat){// apply defaults\noptionsLabel=merge({align:horiz&&isBand&&'center',x:horiz?!isBand&&4:10,verticalAlign:!horiz&&isBand&&'middle',y:horiz?isBand?16:10:isBand?6:-4,rotation:horiz&&!isBand&&90},optionsLabel);this.renderLabel(optionsLabel,path,isBand,zIndex);}else if(label){// move out of sight\nlabel.hide();}// chainable\nreturn plotLine;},/**\n         * Render and align label for plot line or band.\n         */renderLabel:function(optionsLabel,path,isBand,zIndex){var plotLine=this,label=plotLine.label,renderer=plotLine.axis.chart.renderer,attribs,xs,ys,x,y;// add the SVG element\nif(!label){attribs={align:optionsLabel.textAlign||optionsLabel.align,rotation:optionsLabel.rotation};attribs.zIndex=zIndex;plotLine.label=label=renderer.text(optionsLabel.text,0,0,optionsLabel.useHTML).attr(attribs).css(optionsLabel.style).add();}// get the bounding box and align the label\n// #3000 changed to better handle choice between plotband or plotline\nxs=[path[1],path[4],isBand?path[6]:path[1]];ys=[path[2],path[5],isBand?path[7]:path[2]];x=arrayMin(xs);y=arrayMin(ys);label.align(optionsLabel,false,{x:x,y:y,width:arrayMax(xs)-x,height:arrayMax(ys)-y});label.show();},/**\n         * Remove the plot line or band\n         */destroy:function(){// remove it from the lookup\nerase(this.axis.plotLinesAndBands,this);delete this.axis;destroyObjectProperties(this);}};/**\n     * Object with members for extending the Axis prototype\n     */AxisPlotLineOrBandExtension={/**\n         * Create the path for a plot band\n         */getPlotBandPath:function(from,to){var toPath=this.getPlotLinePath(to,null,null,true),path=this.getPlotLinePath(from,null,null,true);if(path&&toPath){// Flat paths don't need labels (#3836)\npath.flat=path.toString()===toPath.toString();path.push(toPath[4],toPath[5],toPath[1],toPath[2]);}else{// outside the axis area\npath=null;}return path;},addPlotBand:function(options){return this.addPlotBandOrLine(options,'plotBands');},addPlotLine:function(options){return this.addPlotBandOrLine(options,'plotLines');},/**\n         * Add a plot band or plot line after render time\n         *\n         * @param options {Object} The plotBand or plotLine configuration object\n         */addPlotBandOrLine:function(options,coll){var obj=new Highcharts.PlotLineOrBand(this,options).render(),userOptions=this.userOptions;if(obj){// #2189\n// Add it to the user options for exporting and Axis.update\nif(coll){userOptions[coll]=userOptions[coll]||[];userOptions[coll].push(options);}this.plotLinesAndBands.push(obj);}return obj;},/**\n         * Remove a plot band or plot line from the chart by id\n         * @param {Object} id\n         */removePlotBandOrLine:function(id){var plotLinesAndBands=this.plotLinesAndBands,options=this.options,userOptions=this.userOptions,i=plotLinesAndBands.length;while(i--){if(plotLinesAndBands[i].id===id){plotLinesAndBands[i].destroy();}}each([options.plotLines||[],userOptions.plotLines||[],options.plotBands||[],userOptions.plotBands||[]],function(arr){i=arr.length;while(i--){if(arr[i].id===id){erase(arr,arr[i]);}}});}};/**\n     * Create a new axis object\n     * @param {Object} chart\n     * @param {Object} options\n     */var Axis=Highcharts.Axis=function(){this.init.apply(this,arguments);};Axis.prototype={/**\n         * Default options for the X axis - the Y axis has extended defaults\n         */defaultOptions:{// allowDecimals: null,\n// alternateGridColor: null,\n// categories: [],\ndateTimeLabelFormats:{millisecond:'%H:%M:%S.%L',second:'%H:%M:%S',minute:'%H:%M',hour:'%H:%M',day:'%e. %b',week:'%e. %b',month:'%b \\'%y',year:'%Y'},endOnTick:false,gridLineColor:'#D8D8D8',// gridLineDashStyle: 'solid',\n// gridLineWidth: 0,\n// reversed: false,\nlabels:{enabled:true,// rotation: 0,\n// align: 'center',\n// step: null,\nstyle:{color:'#606060',cursor:'default',fontSize:'11px'},x:0//y: undefined\n/*formatter: function () {\n                    return this.value;\n                },*/},lineColor:'#C0D0E0',lineWidth:1,//linkedTo: null,\n//max: undefined,\n//min: undefined,\nminPadding:0.01,maxPadding:0.01,//minRange: null,\nminorGridLineColor:'#E0E0E0',// minorGridLineDashStyle: null,\nminorGridLineWidth:1,minorTickColor:'#A0A0A0',//minorTickInterval: null,\nminorTickLength:2,minorTickPosition:'outside',// inside or outside\n//minorTickWidth: 0,\n//opposite: false,\n//offset: 0,\n//plotBands: [{\n//    events: {},\n//    zIndex: 1,\n//    labels: { align, x, verticalAlign, y, style, rotation, textAlign }\n//}],\n//plotLines: [{\n//    events: {}\n//  dashStyle: {}\n//    zIndex:\n//    labels: { align, x, verticalAlign, y, style, rotation, textAlign }\n//}],\n//reversed: false,\n// showFirstLabel: true,\n// showLastLabel: true,\nstartOfWeek:1,startOnTick:false,tickColor:'#C0D0E0',//tickInterval: null,\ntickLength:10,tickmarkPlacement:'between',// on or between\ntickPixelInterval:100,tickPosition:'outside',//tickWidth: 1,\ntitle:{//text: null,\nalign:'middle',// low, middle or high\n//margin: 0 for horizontal, 10 for vertical axes,\n//rotation: 0,\n//side: 'outside',\nstyle:{color:'#707070'//x: 0,\n//y: 0\n}},type:'linear'// linear, logarithmic or datetime\n//visible: true\n},/**\n         * This options set extends the defaultOptions for Y axes\n         */defaultYAxisOptions:{endOnTick:true,gridLineWidth:1,tickPixelInterval:72,showLastLabel:true,labels:{x:-8},lineWidth:0,maxPadding:0.05,minPadding:0.05,startOnTick:true,//tickWidth: 0,\ntitle:{rotation:270,text:'Values'},stackLabels:{enabled:false,//align: dynamic,\n//y: dynamic,\n//x: dynamic,\n//verticalAlign: dynamic,\n//textAlign: dynamic,\n//rotation: 0,\nformatter:function(){return Highcharts.numberFormat(this.total,-1);},style:merge(defaultPlotOptions.line.dataLabels.style,{color:'#000000'})}},/**\n         * These options extend the defaultOptions for left axes\n         */defaultLeftAxisOptions:{labels:{x:-15},title:{rotation:270}},/**\n         * These options extend the defaultOptions for right axes\n         */defaultRightAxisOptions:{labels:{x:15},title:{rotation:90}},/**\n         * These options extend the defaultOptions for bottom axes\n         */defaultBottomAxisOptions:{labels:{autoRotation:[-45],x:0// overflow: undefined,\n// staggerLines: null\n},title:{rotation:0}},/**\n         * These options extend the defaultOptions for top axes\n         */defaultTopAxisOptions:{labels:{autoRotation:[-45],x:0// overflow: undefined\n// staggerLines: null\n},title:{rotation:0}},/**\n         * Initialize the axis\n         */init:function(chart,userOptions){var isXAxis=userOptions.isX,axis=this;axis.chart=chart;// Flag, is the axis horizontal\naxis.horiz=chart.inverted?!isXAxis:isXAxis;// Flag, isXAxis\naxis.isXAxis=isXAxis;axis.coll=isXAxis?'xAxis':'yAxis';axis.opposite=userOptions.opposite;// needed in setOptions\naxis.side=userOptions.side||(axis.horiz?axis.opposite?0:2:// top : bottom\naxis.opposite?1:3);// right : left\naxis.setOptions(userOptions);var options=this.options,type=options.type,isDatetimeAxis=type==='datetime';axis.labelFormatter=options.labels.formatter||axis.defaultLabelFormatter;// can be overwritten by dynamic format\n// Flag, stagger lines or not\naxis.userOptions=userOptions;//axis.axisTitleMargin = UNDEFINED,// = options.title.margin,\naxis.minPixelPadding=0;axis.reversed=options.reversed;axis.visible=options.visible!==false;axis.zoomEnabled=options.zoomEnabled!==false;// Initial categories\naxis.categories=options.categories||type==='category';axis.names=axis.names||[];// Preserve on update (#3830)\n// Elements\n//axis.axisGroup = UNDEFINED;\n//axis.gridGroup = UNDEFINED;\n//axis.axisTitle = UNDEFINED;\n//axis.axisLine = UNDEFINED;\n// Shorthand types\naxis.isLog=type==='logarithmic';axis.isDatetimeAxis=isDatetimeAxis;// Flag, if axis is linked to another axis\naxis.isLinked=defined(options.linkedTo);// Linked axis.\n//axis.linkedParent = UNDEFINED;\n// Tick positions\n//axis.tickPositions = UNDEFINED; // array containing predefined positions\n// Tick intervals\n//axis.tickInterval = UNDEFINED;\n//axis.minorTickInterval = UNDEFINED;\n// Major ticks\naxis.ticks={};axis.labelEdge=[];// Minor ticks\naxis.minorTicks={};// List of plotLines/Bands\naxis.plotLinesAndBands=[];// Alternate bands\naxis.alternateBands={};// Axis metrics\n//axis.left = UNDEFINED;\n//axis.top = UNDEFINED;\n//axis.width = UNDEFINED;\n//axis.height = UNDEFINED;\n//axis.bottom = UNDEFINED;\n//axis.right = UNDEFINED;\n//axis.transA = UNDEFINED;\n//axis.transB = UNDEFINED;\n//axis.oldTransA = UNDEFINED;\naxis.len=0;//axis.oldMin = UNDEFINED;\n//axis.oldMax = UNDEFINED;\n//axis.oldUserMin = UNDEFINED;\n//axis.oldUserMax = UNDEFINED;\n//axis.oldAxisLength = UNDEFINED;\naxis.minRange=axis.userMinRange=options.minRange||options.maxZoom;axis.range=options.range;axis.offset=options.offset||0;// Dictionary for stacks\naxis.stacks={};axis.oldStacks={};axis.stacksTouched=0;// Min and max in the data\n//axis.dataMin = UNDEFINED,\n//axis.dataMax = UNDEFINED,\n// The axis range\naxis.max=null;axis.min=null;// User set min and max\n//axis.userMin = UNDEFINED,\n//axis.userMax = UNDEFINED,\n// Crosshair options\naxis.crosshair=pick(options.crosshair,splat(chart.options.tooltip.crosshairs)[isXAxis?0:1],false);// Run Axis\nvar eventType,events=axis.options.events;// Register\nif(inArray(axis,chart.axes)===-1){// don't add it again on Axis.update()\nif(isXAxis&&!this.isColorAxis){// #2713\nchart.axes.splice(chart.xAxis.length,0,axis);}else{chart.axes.push(axis);}chart[axis.coll].push(axis);}axis.series=axis.series||[];// populated by Series\n// inverted charts have reversed xAxes as default\nif(chart.inverted&&isXAxis&&axis.reversed===UNDEFINED){axis.reversed=true;}axis.removePlotBand=axis.removePlotBandOrLine;axis.removePlotLine=axis.removePlotBandOrLine;// register event listeners\nfor(eventType in events){addEvent(axis,eventType,events[eventType]);}// extend logarithmic axis\nif(axis.isLog){axis.val2lin=axis.log2lin;axis.lin2val=axis.lin2log;}},/**\n         * Merge and set options\n         */setOptions:function(userOptions){this.options=merge(this.defaultOptions,this.isXAxis?{}:this.defaultYAxisOptions,[this.defaultTopAxisOptions,this.defaultRightAxisOptions,this.defaultBottomAxisOptions,this.defaultLeftAxisOptions][this.side],merge(defaultOptions[this.coll],// if set in setOptions (#1053)\nuserOptions));},/**\n         * The default label formatter. The context is a special config object for the label.\n         */defaultLabelFormatter:function(){var axis=this.axis,value=this.value,categories=axis.categories,dateTimeLabelFormat=this.dateTimeLabelFormat,numericSymbols=defaultOptions.lang.numericSymbols,i=numericSymbols&&numericSymbols.length,multi,ret,formatOption=axis.options.labels.format,// make sure the same symbol is added for all labels on a linear axis\nnumericSymbolDetector=axis.isLog?value:axis.tickInterval;if(formatOption){ret=format(formatOption,this);}else if(categories){ret=value;}else if(dateTimeLabelFormat){// datetime axis\nret=dateFormat(dateTimeLabelFormat,value);}else if(i&&numericSymbolDetector>=1000){// Decide whether we should add a numeric symbol like k (thousands) or M (millions).\n// If we are to enable this in tooltip or other places as well, we can move this\n// logic to the numberFormatter and enable it by a parameter.\nwhile(i--&&ret===UNDEFINED){multi=Math.pow(1000,i+1);if(numericSymbolDetector>=multi&&value*10%multi===0&&numericSymbols[i]!==null){ret=Highcharts.numberFormat(value/multi,-1)+numericSymbols[i];}}}if(ret===UNDEFINED){if(mathAbs(value)>=10000){// add thousands separators\nret=Highcharts.numberFormat(value,-1);}else{// small numbers\nret=Highcharts.numberFormat(value,-1,UNDEFINED,'');// #2466\n}}return ret;},/**\n         * Get the minimum and maximum for the series of each axis\n         */getSeriesExtremes:function(){var axis=this,chart=axis.chart;axis.hasVisibleSeries=false;// Reset properties in case we're redrawing (#3353)\naxis.dataMin=axis.dataMax=axis.threshold=null;axis.softThreshold=!axis.isXAxis;if(axis.buildStacks){axis.buildStacks();}// loop through this axis' series\neach(axis.series,function(series){if(series.visible||!chart.options.chart.ignoreHiddenSeries){var seriesOptions=series.options,xData,threshold=seriesOptions.threshold,seriesDataMin,seriesDataMax;axis.hasVisibleSeries=true;// Validate threshold in logarithmic axes\nif(axis.isLog&&threshold<=0){threshold=null;}// Get dataMin and dataMax for X axes\nif(axis.isXAxis){xData=series.xData;if(xData.length){// If xData contains values which is not numbers, then filter them out.\n// To prevent performance hit, we only do this after we have already\n// found seriesDataMin because in most cases all data is valid. #5234.\nseriesDataMin=arrayMin(xData);if(!isNumber(seriesDataMin)&&!(seriesDataMin instanceof Date)){// Date for #5010\nxData=grep(xData,function(x){return isNumber(x);});seriesDataMin=arrayMin(xData);// Do it again with valid data\n}axis.dataMin=mathMin(pick(axis.dataMin,xData[0]),seriesDataMin);axis.dataMax=mathMax(pick(axis.dataMax,xData[0]),arrayMax(xData));}// Get dataMin and dataMax for Y axes, as well as handle stacking and processed data\n}else{// Get this particular series extremes\nseries.getExtremes();seriesDataMax=series.dataMax;seriesDataMin=series.dataMin;// Get the dataMin and dataMax so far. If percentage is used, the min and max are\n// always 0 and 100. If seriesDataMin and seriesDataMax is null, then series\n// doesn't have active y data, we continue with nulls\nif(defined(seriesDataMin)&&defined(seriesDataMax)){axis.dataMin=mathMin(pick(axis.dataMin,seriesDataMin),seriesDataMin);axis.dataMax=mathMax(pick(axis.dataMax,seriesDataMax),seriesDataMax);}// Adjust to threshold\nif(defined(threshold)){axis.threshold=threshold;}// If any series has a hard threshold, it takes precedence\nif(!seriesOptions.softThreshold||axis.isLog){axis.softThreshold=false;}}}});},/**\n         * Translate from axis value to pixel position on the chart, or back\n         *\n         */translate:function(val,backwards,cvsCoord,old,handleLog,pointPlacement){var axis=this.linkedParent||this,// #1417\nsign=1,cvsOffset=0,localA=old?axis.oldTransA:axis.transA,localMin=old?axis.oldMin:axis.min,returnValue,minPixelPadding=axis.minPixelPadding,doPostTranslate=(axis.isOrdinal||axis.isBroken||axis.isLog&&handleLog)&&axis.lin2val;if(!localA){localA=axis.transA;}// In vertical axes, the canvas coordinates start from 0 at the top like in\n// SVG.\nif(cvsCoord){sign*=-1;// canvas coordinates inverts the value\ncvsOffset=axis.len;}// Handle reversed axis\nif(axis.reversed){sign*=-1;cvsOffset-=sign*(axis.sector||axis.len);}// From pixels to value\nif(backwards){// reverse translation\nval=val*sign+cvsOffset;val-=minPixelPadding;returnValue=val/localA+localMin;// from chart pixel to value\nif(doPostTranslate){// log and ordinal axes\nreturnValue=axis.lin2val(returnValue);}// From value to pixels\n}else{if(doPostTranslate){// log and ordinal axes\nval=axis.val2lin(val);}if(pointPlacement==='between'){pointPlacement=0.5;}returnValue=sign*(val-localMin)*localA+cvsOffset+sign*minPixelPadding+(isNumber(pointPlacement)?localA*pointPlacement*axis.pointRange:0);}return returnValue;},/**\n         * Utility method to translate an axis value to pixel position.\n         * @param {Number} value A value in terms of axis units\n         * @param {Boolean} paneCoordinates Whether to return the pixel coordinate relative to the chart\n         *        or just the axis/pane itself.\n         */toPixels:function(value,paneCoordinates){return this.translate(value,false,!this.horiz,null,true)+(paneCoordinates?0:this.pos);},/*\n         * Utility method to translate a pixel position in to an axis value\n         * @param {Number} pixel The pixel value coordinate\n         * @param {Boolean} paneCoordiantes Whether the input pixel is relative to the chart or just the\n         *        axis/pane itself.\n         */toValue:function(pixel,paneCoordinates){return this.translate(pixel-(paneCoordinates?0:this.pos),true,!this.horiz,null,true);},/**\n         * Create the path for a plot line that goes from the given value on\n         * this axis, across the plot to the opposite side\n         * @param {Number} value\n         * @param {Number} lineWidth Used for calculation crisp line\n         * @param {Number] old Use old coordinates (for resizing and rescaling)\n         */getPlotLinePath:function(value,lineWidth,old,force,translatedValue){var axis=this,chart=axis.chart,axisLeft=axis.left,axisTop=axis.top,x1,y1,x2,y2,cHeight=old&&chart.oldChartHeight||chart.chartHeight,cWidth=old&&chart.oldChartWidth||chart.chartWidth,skip,transB=axis.transB,/**\n                 * Check if x is between a and b. If not, either move to a/b or skip,\n                 * depending on the force parameter.\n                 */between=function(x,a,b){if(x<a||x>b){if(force){x=mathMin(mathMax(a,x),b);}else{skip=true;}}return x;};translatedValue=pick(translatedValue,axis.translate(value,null,null,old));x1=x2=mathRound(translatedValue+transB);y1=y2=mathRound(cHeight-translatedValue-transB);if(!isNumber(translatedValue)){// no min or max\nskip=true;}else if(axis.horiz){y1=axisTop;y2=cHeight-axis.bottom;x1=x2=between(x1,axisLeft,axisLeft+axis.width);}else{x1=axisLeft;x2=cWidth-axis.right;y1=y2=between(y1,axisTop,axisTop+axis.height);}return skip&&!force?null:chart.renderer.crispLine([M,x1,y1,L,x2,y2],lineWidth||1);},/**\n         * Set the tick positions of a linear axis to round values like whole tens or every five.\n         */getLinearTickPositions:function(tickInterval,min,max){var pos,lastPos,roundedMin=correctFloat(mathFloor(min/tickInterval)*tickInterval),roundedMax=correctFloat(mathCeil(max/tickInterval)*tickInterval),tickPositions=[];// For single points, add a tick regardless of the relative position (#2662)\nif(min===max&&isNumber(min)){return[min];}// Populate the intermediate values\npos=roundedMin;while(pos<=roundedMax){// Place the tick on the rounded value\ntickPositions.push(pos);// Always add the raw tickInterval, not the corrected one.\npos=correctFloat(pos+tickInterval);// If the interval is not big enough in the current min - max range to actually increase\n// the loop variable, we need to break out to prevent endless loop. Issue #619\nif(pos===lastPos){break;}// Record the last value\nlastPos=pos;}return tickPositions;},/**\n         * Return the minor tick positions. For logarithmic axes, reuse the same logic\n         * as for major ticks.\n         */getMinorTickPositions:function(){var axis=this,options=axis.options,tickPositions=axis.tickPositions,minorTickInterval=axis.minorTickInterval,minorTickPositions=[],pos,i,pointRangePadding=axis.pointRangePadding||0,min=axis.min-pointRangePadding,// #1498\nmax=axis.max+pointRangePadding,// #1498\nrange=max-min,len;// If minor ticks get too dense, they are hard to read, and may cause long running script. So we don't draw them.\nif(range&&range/minorTickInterval<axis.len/3){// #3875\nif(axis.isLog){len=tickPositions.length;for(i=1;i<len;i++){minorTickPositions=minorTickPositions.concat(axis.getLogTickPositions(minorTickInterval,tickPositions[i-1],tickPositions[i],true));}}else if(axis.isDatetimeAxis&&options.minorTickInterval==='auto'){// #1314\nminorTickPositions=minorTickPositions.concat(axis.getTimeTicks(axis.normalizeTimeTickInterval(minorTickInterval),min,max,options.startOfWeek));}else{for(pos=min+(tickPositions[0]-min)%minorTickInterval;pos<=max;pos+=minorTickInterval){minorTickPositions.push(pos);}}}if(minorTickPositions.length!==0){// don't change the extremes, when there is no minor ticks\naxis.trimTicks(minorTickPositions,options.startOnTick,options.endOnTick);// #3652 #3743 #1498\n}return minorTickPositions;},/**\n         * Adjust the min and max for the minimum range. Keep in mind that the series data is\n         * not yet processed, so we don't have information on data cropping and grouping, or\n         * updated axis.pointRange or series.pointRange. The data can't be processed until\n         * we have finally established min and max.\n         */adjustForMinRange:function(){var axis=this,options=axis.options,min=axis.min,max=axis.max,zoomOffset,spaceAvailable=axis.dataMax-axis.dataMin>=axis.minRange,closestDataRange,i,distance,xData,loopLength,minArgs,maxArgs,minRange;// Set the automatic minimum range based on the closest point distance\nif(axis.isXAxis&&axis.minRange===UNDEFINED&&!axis.isLog){if(defined(options.min)||defined(options.max)){axis.minRange=null;// don't do this again\n}else{// Find the closest distance between raw data points, as opposed to\n// closestPointRange that applies to processed points (cropped and grouped)\neach(axis.series,function(series){xData=series.xData;loopLength=series.xIncrement?1:xData.length-1;for(i=loopLength;i>0;i--){distance=xData[i]-xData[i-1];if(closestDataRange===UNDEFINED||distance<closestDataRange){closestDataRange=distance;}}});axis.minRange=mathMin(closestDataRange*5,axis.dataMax-axis.dataMin);}}// if minRange is exceeded, adjust\nif(max-min<axis.minRange){minRange=axis.minRange;zoomOffset=(minRange-max+min)/2;// if min and max options have been set, don't go beyond it\nminArgs=[min-zoomOffset,pick(options.min,min-zoomOffset)];if(spaceAvailable){// if space is available, stay within the data range\nminArgs[2]=axis.dataMin;}min=arrayMax(minArgs);maxArgs=[min+minRange,pick(options.max,min+minRange)];if(spaceAvailable){// if space is availabe, stay within the data range\nmaxArgs[2]=axis.dataMax;}max=arrayMin(maxArgs);// now if the max is adjusted, adjust the min back\nif(max-min<minRange){minArgs[0]=max-minRange;minArgs[1]=pick(options.min,max-minRange);min=arrayMax(minArgs);}}// Record modified extremes\naxis.min=min;axis.max=max;},/**\n         * Find the closestPointRange across all series\n         */getClosest:function(){var ret;each(this.series,function(series){var seriesClosest=series.closestPointRange;if(!series.noSharedTooltip&&defined(seriesClosest)){ret=defined(ret)?mathMin(ret,seriesClosest):seriesClosest;}});return ret;},/**\n         * Update translation information\n         */setAxisTranslation:function(saveOld){var axis=this,range=axis.max-axis.min,pointRange=axis.axisPointRange||0,closestPointRange,minPointOffset=0,pointRangePadding=0,linkedParent=axis.linkedParent,ordinalCorrection,hasCategories=!!axis.categories,transA=axis.transA,isXAxis=axis.isXAxis;// Adjust translation for padding. Y axis with categories need to go through the same (#1784).\nif(isXAxis||hasCategories||pointRange){if(linkedParent){minPointOffset=linkedParent.minPointOffset;pointRangePadding=linkedParent.pointRangePadding;}else{// Get the closest points\nclosestPointRange=axis.getClosest();each(axis.series,function(series){var seriesPointRange=hasCategories?1:isXAxis?pick(series.options.pointRange,closestPointRange,0):axis.axisPointRange||0,// #2806\npointPlacement=series.options.pointPlacement;pointRange=mathMax(pointRange,seriesPointRange);if(!axis.single){// minPointOffset is the value padding to the left of the axis in order to make\n// room for points with a pointRange, typically columns. When the pointPlacement option\n// is 'between' or 'on', this padding does not apply.\nminPointOffset=mathMax(minPointOffset,isString(pointPlacement)?0:seriesPointRange/2);// Determine the total padding needed to the length of the axis to make room for the\n// pointRange. If the series' pointPlacement is 'on', no padding is added.\npointRangePadding=mathMax(pointRangePadding,pointPlacement==='on'?0:seriesPointRange);}});}// Record minPointOffset and pointRangePadding\nordinalCorrection=axis.ordinalSlope&&closestPointRange?axis.ordinalSlope/closestPointRange:1;// #988, #1853\naxis.minPointOffset=minPointOffset=minPointOffset*ordinalCorrection;axis.pointRangePadding=pointRangePadding=pointRangePadding*ordinalCorrection;// pointRange means the width reserved for each point, like in a column chart\naxis.pointRange=mathMin(pointRange,range);// closestPointRange means the closest distance between points. In columns\n// it is mostly equal to pointRange, but in lines pointRange is 0 while closestPointRange\n// is some other value\nif(isXAxis){axis.closestPointRange=closestPointRange;}}// Secondary values\nif(saveOld){axis.oldTransA=transA;}axis.translationSlope=axis.transA=transA=axis.len/(range+pointRangePadding||1);axis.transB=axis.horiz?axis.left:axis.bottom;// translation addend\naxis.minPixelPadding=transA*minPointOffset;},minFromRange:function(){return this.max-this.range;},/**\n         * Set the tick positions to round values and optionally extend the extremes\n         * to the nearest tick\n         */setTickInterval:function(secondPass){var axis=this,chart=axis.chart,options=axis.options,isLog=axis.isLog,log2lin=axis.log2lin,isDatetimeAxis=axis.isDatetimeAxis,isXAxis=axis.isXAxis,isLinked=axis.isLinked,maxPadding=options.maxPadding,minPadding=options.minPadding,length,linkedParentExtremes,tickIntervalOption=options.tickInterval,minTickInterval,tickPixelIntervalOption=options.tickPixelInterval,categories=axis.categories,threshold=axis.threshold,softThreshold=axis.softThreshold,thresholdMin,thresholdMax,hardMin,hardMax;if(!isDatetimeAxis&&!categories&&!isLinked){this.getTickAmount();}// Min or max set either by zooming/setExtremes or initial options\nhardMin=pick(axis.userMin,options.min);hardMax=pick(axis.userMax,options.max);// Linked axis gets the extremes from the parent axis\nif(isLinked){axis.linkedParent=chart[axis.coll][options.linkedTo];linkedParentExtremes=axis.linkedParent.getExtremes();axis.min=pick(linkedParentExtremes.min,linkedParentExtremes.dataMin);axis.max=pick(linkedParentExtremes.max,linkedParentExtremes.dataMax);if(options.type!==axis.linkedParent.options.type){error(11,1);// Can't link axes of different type\n}// Initial min and max from the extreme data values\n}else{// Adjust to hard threshold\nif(!softThreshold&&defined(threshold)){if(axis.dataMin>=threshold){thresholdMin=threshold;minPadding=0;}else if(axis.dataMax<=threshold){thresholdMax=threshold;maxPadding=0;}}axis.min=pick(hardMin,thresholdMin,axis.dataMin);axis.max=pick(hardMax,thresholdMax,axis.dataMax);}if(isLog){if(!secondPass&&mathMin(axis.min,pick(axis.dataMin,axis.min))<=0){// #978\nerror(10,1);// Can't plot negative values on log axis\n}// The correctFloat cures #934, float errors on full tens. But it\n// was too aggressive for #4360 because of conversion back to lin,\n// therefore use precision 15.\naxis.min=correctFloat(log2lin(axis.min),15);axis.max=correctFloat(log2lin(axis.max),15);}// handle zoomed range\nif(axis.range&&defined(axis.max)){axis.userMin=axis.min=hardMin=mathMax(axis.min,axis.minFromRange());// #618\naxis.userMax=hardMax=axis.max;axis.range=null;// don't use it when running setExtremes\n}// Hook for Highstock Scroller. Consider combining with beforePadding.\nfireEvent(axis,'foundExtremes');// Hook for adjusting this.min and this.max. Used by bubble series.\nif(axis.beforePadding){axis.beforePadding();}// adjust min and max for the minimum range\naxis.adjustForMinRange();// Pad the values to get clear of the chart's edges. To avoid tickInterval taking the padding\n// into account, we do this after computing tick interval (#1337).\nif(!categories&&!axis.axisPointRange&&!axis.usePercentage&&!isLinked&&defined(axis.min)&&defined(axis.max)){length=axis.max-axis.min;if(length){if(!defined(hardMin)&&minPadding){axis.min-=length*minPadding;}if(!defined(hardMax)&&maxPadding){axis.max+=length*maxPadding;}}}// Stay within floor and ceiling\nif(isNumber(options.floor)){axis.min=mathMax(axis.min,options.floor);}if(isNumber(options.ceiling)){axis.max=mathMin(axis.max,options.ceiling);}// When the threshold is soft, adjust the extreme value only if\n// the data extreme and the padded extreme land on either side of the threshold. For example,\n// a series of [0, 1, 2, 3] would make the yAxis add a tick for -1 because of the\n// default minPadding and startOnTick options. This is prevented by the softThreshold\n// option.\nif(softThreshold&&defined(axis.dataMin)){threshold=threshold||0;if(!defined(hardMin)&&axis.min<threshold&&axis.dataMin>=threshold){axis.min=threshold;}else if(!defined(hardMax)&&axis.max>threshold&&axis.dataMax<=threshold){axis.max=threshold;}}// get tickInterval\nif(axis.min===axis.max||axis.min===undefined||axis.max===undefined){axis.tickInterval=1;}else if(isLinked&&!tickIntervalOption&&tickPixelIntervalOption===axis.linkedParent.options.tickPixelInterval){axis.tickInterval=tickIntervalOption=axis.linkedParent.tickInterval;}else{axis.tickInterval=pick(tickIntervalOption,this.tickAmount?(axis.max-axis.min)/mathMax(this.tickAmount-1,1):undefined,categories?// for categoried axis, 1 is default, for linear axis use tickPix\n1:// don't let it be more than the data range\n(axis.max-axis.min)*tickPixelIntervalOption/mathMax(axis.len,tickPixelIntervalOption));}// Now we're finished detecting min and max, crop and group series data. This\n// is in turn needed in order to find tick positions in ordinal axes.\nif(isXAxis&&!secondPass){each(axis.series,function(series){series.processData(axis.min!==axis.oldMin||axis.max!==axis.oldMax);});}// set the translation factor used in translate function\naxis.setAxisTranslation(true);// hook for ordinal axes and radial axes\nif(axis.beforeSetTickPositions){axis.beforeSetTickPositions();}// hook for extensions, used in Highstock ordinal axes\nif(axis.postProcessTickInterval){axis.tickInterval=axis.postProcessTickInterval(axis.tickInterval);}// In column-like charts, don't cramp in more ticks than there are points (#1943, #4184)\nif(axis.pointRange&&!tickIntervalOption){axis.tickInterval=mathMax(axis.pointRange,axis.tickInterval);}// Before normalizing the tick interval, handle minimum tick interval. This applies only if tickInterval is not defined.\nminTickInterval=pick(options.minTickInterval,axis.isDatetimeAxis&&axis.closestPointRange);if(!tickIntervalOption&&axis.tickInterval<minTickInterval){axis.tickInterval=minTickInterval;}// for linear axes, get magnitude and normalize the interval\nif(!isDatetimeAxis&&!isLog&&!tickIntervalOption){axis.tickInterval=normalizeTickInterval(axis.tickInterval,null,getMagnitude(axis.tickInterval),// If the tick interval is between 0.5 and 5 and the axis max is in the order of\n// thousands, chances are we are dealing with years. Don't allow decimals. #3363.\npick(options.allowDecimals,!(axis.tickInterval>0.5&&axis.tickInterval<5&&axis.max>1000&&axis.max<9999)),!!this.tickAmount);}// Prevent ticks from getting so close that we can't draw the labels\nif(!this.tickAmount&&this.len){// Color axis with disabled legend has no length\naxis.tickInterval=axis.unsquish();}this.setTickPositions();},/**\n         * Now we have computed the normalized tickInterval, get the tick positions\n         */setTickPositions:function(){var options=this.options,tickPositions,tickPositionsOption=options.tickPositions,tickPositioner=options.tickPositioner,startOnTick=options.startOnTick,endOnTick=options.endOnTick,single;// Set the tickmarkOffset\nthis.tickmarkOffset=this.categories&&options.tickmarkPlacement==='between'&&this.tickInterval===1?0.5:0;// #3202\n// get minorTickInterval\nthis.minorTickInterval=options.minorTickInterval==='auto'&&this.tickInterval?this.tickInterval/5:options.minorTickInterval;// Find the tick positions\nthis.tickPositions=tickPositions=tickPositionsOption&&tickPositionsOption.slice();// Work on a copy (#1565)\nif(!tickPositions){if(this.isDatetimeAxis){tickPositions=this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval,options.units),this.min,this.max,options.startOfWeek,this.ordinalPositions,this.closestPointRange,true);}else if(this.isLog){tickPositions=this.getLogTickPositions(this.tickInterval,this.min,this.max);}else{tickPositions=this.getLinearTickPositions(this.tickInterval,this.min,this.max);}// Too dense ticks, keep only the first and last (#4477)\nif(tickPositions.length>this.len){tickPositions=[tickPositions[0],tickPositions.pop()];}this.tickPositions=tickPositions;// Run the tick positioner callback, that allows modifying auto tick positions.\nif(tickPositioner){tickPositioner=tickPositioner.apply(this,[this.min,this.max]);if(tickPositioner){this.tickPositions=tickPositions=tickPositioner;}}}if(!this.isLinked){// reset min/max or remove extremes based on start/end on tick\nthis.trimTicks(tickPositions,startOnTick,endOnTick);// When there is only one point, or all points have the same value on this axis, then min\n// and max are equal and tickPositions.length is 0 or 1. In this case, add some padding\n// in order to center the point, but leave it with one tick. #1337.\nif(this.min===this.max&&defined(this.min)&&!this.tickAmount){// Substract half a unit (#2619, #2846, #2515, #3390)\nsingle=true;this.min-=0.5;this.max+=0.5;}this.single=single;if(!tickPositionsOption&&!tickPositioner){this.adjustTickAmount();}}},/**\n         * Handle startOnTick and endOnTick by either adapting to padding min/max or rounded min/max\n         */trimTicks:function(tickPositions,startOnTick,endOnTick){var roundedMin=tickPositions[0],roundedMax=tickPositions[tickPositions.length-1],minPointOffset=this.minPointOffset||0;if(startOnTick){this.min=roundedMin;}else{while(this.min-minPointOffset>tickPositions[0]){tickPositions.shift();}}if(endOnTick){this.max=roundedMax;}else{while(this.max+minPointOffset<tickPositions[tickPositions.length-1]){tickPositions.pop();}}// If no tick are left, set one tick in the middle (#3195)\nif(tickPositions.length===0&&defined(roundedMin)){tickPositions.push((roundedMax+roundedMin)/2);}},/**\n         * Check if there are multiple axes in the same pane\n         * @returns {Boolean} There are other axes\n         */alignToOthers:function(){var others={},// Whether there is another axis to pair with this one\nhasOther,options=this.options;if(this.chart.options.chart.alignTicks!==false&&options.alignTicks!==false){each(this.chart[this.coll],function(axis){var otherOptions=axis.options,horiz=axis.horiz,key=[horiz?otherOptions.left:otherOptions.top,otherOptions.width,otherOptions.height,otherOptions.pane].join(',');if(axis.series.length){// #4442\nif(others[key]){hasOther=true;// #4201\n}else{others[key]=1;}}});}return hasOther;},/**\n         * Set the max ticks of either the x and y axis collection\n         */getTickAmount:function(){var options=this.options,tickAmount=options.tickAmount,tickPixelInterval=options.tickPixelInterval;if(!defined(options.tickInterval)&&this.len<tickPixelInterval&&!this.isRadial&&!this.isLog&&options.startOnTick&&options.endOnTick){tickAmount=2;}if(!tickAmount&&this.alignToOthers()){// Add 1 because 4 tick intervals require 5 ticks (including first and last)\ntickAmount=mathCeil(this.len/tickPixelInterval)+1;}// For tick amounts of 2 and 3, compute five ticks and remove the intermediate ones. This\n// prevents the axis from adding ticks that are too far away from the data extremes.\nif(tickAmount<4){this.finalTickAmt=tickAmount;tickAmount=5;}this.tickAmount=tickAmount;},/**\n         * When using multiple axes, adjust the number of ticks to match the highest\n         * number of ticks in that group\n         */adjustTickAmount:function(){var tickInterval=this.tickInterval,tickPositions=this.tickPositions,tickAmount=this.tickAmount,finalTickAmt=this.finalTickAmt,currentTickAmount=tickPositions&&tickPositions.length,i,len;if(currentTickAmount<tickAmount){while(tickPositions.length<tickAmount){tickPositions.push(correctFloat(tickPositions[tickPositions.length-1]+tickInterval));}this.transA*=(currentTickAmount-1)/(tickAmount-1);this.max=tickPositions[tickPositions.length-1];// We have too many ticks, run second pass to try to reduce ticks\n}else if(currentTickAmount>tickAmount){this.tickInterval*=2;this.setTickPositions();}// The finalTickAmt property is set in getTickAmount\nif(defined(finalTickAmt)){i=len=tickPositions.length;while(i--){if(finalTickAmt===3&&i%2===1||// Remove every other tick\nfinalTickAmt<=2&&i>0&&i<len-1// Remove all but first and last\n){tickPositions.splice(i,1);}}this.finalTickAmt=UNDEFINED;}},/**\n         * Set the scale based on data min and max, user set min and max or options\n         *\n         */setScale:function(){var axis=this,isDirtyData,isDirtyAxisLength;axis.oldMin=axis.min;axis.oldMax=axis.max;axis.oldAxisLength=axis.len;// set the new axisLength\naxis.setAxisSize();//axisLength = horiz ? axisWidth : axisHeight;\nisDirtyAxisLength=axis.len!==axis.oldAxisLength;// is there new data?\neach(axis.series,function(series){if(series.isDirtyData||series.isDirty||series.xAxis.isDirty){// when x axis is dirty, we need new data extremes for y as well\nisDirtyData=true;}});// do we really need to go through all this?\nif(isDirtyAxisLength||isDirtyData||axis.isLinked||axis.forceRedraw||axis.userMin!==axis.oldUserMin||axis.userMax!==axis.oldUserMax||axis.alignToOthers()){if(axis.resetStacks){axis.resetStacks();}axis.forceRedraw=false;// get data extremes if needed\naxis.getSeriesExtremes();// get fixed positions based on tickInterval\naxis.setTickInterval();// record old values to decide whether a rescale is necessary later on (#540)\naxis.oldUserMin=axis.userMin;axis.oldUserMax=axis.userMax;// Mark as dirty if it is not already set to dirty and extremes have changed. #595.\nif(!axis.isDirty){axis.isDirty=isDirtyAxisLength||axis.min!==axis.oldMin||axis.max!==axis.oldMax;}}else if(axis.cleanStacks){axis.cleanStacks();}},/**\n         * Set the extremes and optionally redraw\n         * @param {Number} newMin\n         * @param {Number} newMax\n         * @param {Boolean} redraw\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         * @param {Object} eventArguments\n         *\n         */setExtremes:function(newMin,newMax,redraw,animation,eventArguments){var axis=this,chart=axis.chart;redraw=pick(redraw,true);// defaults to true\neach(axis.series,function(serie){delete serie.kdTree;});// Extend the arguments with min and max\neventArguments=extend(eventArguments,{min:newMin,max:newMax});// Fire the event\nfireEvent(axis,'setExtremes',eventArguments,function(){// the default event handler\naxis.userMin=newMin;axis.userMax=newMax;axis.eventArgs=eventArguments;if(redraw){chart.redraw(animation);}});},/**\n         * Overridable method for zooming chart. Pulled out in a separate method to allow overriding\n         * in stock charts.\n         */zoom:function(newMin,newMax){var dataMin=this.dataMin,dataMax=this.dataMax,options=this.options,min=mathMin(dataMin,pick(options.min,dataMin)),max=mathMax(dataMax,pick(options.max,dataMax));// Prevent pinch zooming out of range. Check for defined is for #1946. #1734.\nif(!this.allowZoomOutside){if(defined(dataMin)&&newMin<=min){newMin=min;}if(defined(dataMax)&&newMax>=max){newMax=max;}}// In full view, displaying the reset zoom button is not required\nthis.displayBtn=newMin!==UNDEFINED||newMax!==UNDEFINED;// Do it\nthis.setExtremes(newMin,newMax,false,UNDEFINED,{trigger:'zoom'});return true;},/**\n         * Update the axis metrics\n         */setAxisSize:function(){var chart=this.chart,options=this.options,offsetLeft=options.offsetLeft||0,offsetRight=options.offsetRight||0,horiz=this.horiz,width=pick(options.width,chart.plotWidth-offsetLeft+offsetRight),height=pick(options.height,chart.plotHeight),top=pick(options.top,chart.plotTop),left=pick(options.left,chart.plotLeft+offsetLeft),percentRegex=/%$/;// Check for percentage based input values. Rounding fixes problems with\n// column overflow and plot line filtering (#4898, #4899)\nif(percentRegex.test(height)){height=Math.round(parseFloat(height)/100*chart.plotHeight);}if(percentRegex.test(top)){top=Math.round(parseFloat(top)/100*chart.plotHeight+chart.plotTop);}// Expose basic values to use in Series object and navigator\nthis.left=left;this.top=top;this.width=width;this.height=height;this.bottom=chart.chartHeight-height-top;this.right=chart.chartWidth-width-left;// Direction agnostic properties\nthis.len=mathMax(horiz?width:height,0);// mathMax fixes #905\nthis.pos=horiz?left:top;// distance from SVG origin\n},/**\n         * Get the actual axis extremes\n         */getExtremes:function(){var axis=this,isLog=axis.isLog,lin2log=axis.lin2log;return{min:isLog?correctFloat(lin2log(axis.min)):axis.min,max:isLog?correctFloat(lin2log(axis.max)):axis.max,dataMin:axis.dataMin,dataMax:axis.dataMax,userMin:axis.userMin,userMax:axis.userMax};},/**\n         * Get the zero plane either based on zero or on the min or max value.\n         * Used in bar and area plots\n         */getThreshold:function(threshold){var axis=this,isLog=axis.isLog,lin2log=axis.lin2log,realMin=isLog?lin2log(axis.min):axis.min,realMax=isLog?lin2log(axis.max):axis.max;// With a threshold of null, make the columns/areas rise from the top or bottom\n// depending on the value, assuming an actual threshold of 0 (#4233).\nif(threshold===null){threshold=realMax<0?realMax:realMin;}else if(realMin>threshold){threshold=realMin;}else if(realMax<threshold){threshold=realMax;}return axis.translate(threshold,0,1,0,1);},/**\n         * Compute auto alignment for the axis label based on which side the axis is on\n         * and the given rotation for the label\n         */autoLabelAlign:function(rotation){var ret,angle=(pick(rotation,0)-this.side*90+720)%360;if(angle>15&&angle<165){ret='right';}else if(angle>195&&angle<345){ret='left';}else{ret='center';}return ret;},/**\n         * Get the tick length and width for the axis.\n         * @param   {String} prefix 'tick' or 'minorTick'\n         * @returns {Array}        An array of tickLength and tickWidth\n         */tickSize:function(prefix){var options=this.options,tickLength=options[prefix+'Length'],tickWidth=pick(options[prefix+'Width'],prefix==='tick'&&this.isXAxis?1:0);// X axis defaults to 1\nif(tickWidth&&tickLength){// Negate the length\nif(options[prefix+'Position']==='inside'){tickLength=-tickLength;}return[tickLength,tickWidth];}},/**\n         * Return the size of the labels\n         */labelMetrics:function(){return this.chart.renderer.fontMetrics(this.options.labels.style.fontSize,this.ticks[0]&&this.ticks[0].label);},/**\n         * Prevent the ticks from getting so close we can't draw the labels. On a horizontal\n         * axis, this is handled by rotating the labels, removing ticks and adding ellipsis.\n         * On a vertical axis remove ticks and add ellipsis.\n         */unsquish:function(){var labelOptions=this.options.labels,horiz=this.horiz,tickInterval=this.tickInterval,newTickInterval=tickInterval,slotSize=this.len/(((this.categories?1:0)+this.max-this.min)/tickInterval),rotation,rotationOption=labelOptions.rotation,labelMetrics=this.labelMetrics(),step,bestScore=Number.MAX_VALUE,autoRotation,// Return the multiple of tickInterval that is needed to avoid collision\ngetStep=function(spaceNeeded){var step=spaceNeeded/(slotSize||1);step=step>1?mathCeil(step):1;return step*tickInterval;};if(horiz){autoRotation=!labelOptions.staggerLines&&!labelOptions.step&&(// #3971\ndefined(rotationOption)?[rotationOption]:slotSize<pick(labelOptions.autoRotationLimit,80)&&labelOptions.autoRotation);if(autoRotation){// Loop over the given autoRotation options, and determine which gives the best score. The\n// best score is that with the lowest number of steps and a rotation closest to horizontal.\neach(autoRotation,function(rot){var score;if(rot===rotationOption||rot&&rot>=-90&&rot<=90){// #3891\nstep=getStep(mathAbs(labelMetrics.h/mathSin(deg2rad*rot)));score=step+mathAbs(rot/360);if(score<bestScore){bestScore=score;rotation=rot;newTickInterval=step;}}});}}else if(!labelOptions.step){// #4411\nnewTickInterval=getStep(labelMetrics.h);}this.autoRotation=autoRotation;this.labelRotation=pick(rotation,rotationOption);return newTickInterval;},/**\n         * Get the general slot width for this axis. This may change between the pre-render (from Axis.getOffset) \n         * and the final tick rendering and placement (#5086).\n         */getSlotWidth:function(){var chart=this.chart,horiz=this.horiz,labelOptions=this.options.labels,slotCount=Math.max(this.tickPositions.length-(this.categories?0:1),1),marginLeft=chart.margin[3];return horiz&&(labelOptions.step||0)<2&&!labelOptions.rotation&&// #4415\n(this.staggerLines||1)*chart.plotWidth/slotCount||!horiz&&(marginLeft&&marginLeft-chart.spacing[3]||chart.chartWidth*0.33);// #1580, #1931\n},/**\n         * Render the axis labels and determine whether ellipsis or rotation need to be applied\n         */renderUnsquish:function(){var chart=this.chart,renderer=chart.renderer,tickPositions=this.tickPositions,ticks=this.ticks,labelOptions=this.options.labels,horiz=this.horiz,slotWidth=this.getSlotWidth(),innerWidth=mathMax(1,mathRound(slotWidth-2*(labelOptions.padding||5))),attr={},labelMetrics=this.labelMetrics(),textOverflowOption=labelOptions.style.textOverflow,css,labelLength=0,label,i,pos;// Set rotation option unless it is \"auto\", like in gauges\nif(!isString(labelOptions.rotation)){attr.rotation=labelOptions.rotation||0;// #4443\n}// Handle auto rotation on horizontal axis\nif(this.autoRotation){// Get the longest label length\neach(tickPositions,function(tick){tick=ticks[tick];if(tick&&tick.labelLength>labelLength){labelLength=tick.labelLength;}});// Apply rotation only if the label is too wide for the slot, and\n// the label is wider than its height.\nif(labelLength>innerWidth&&labelLength>labelMetrics.h){attr.rotation=this.labelRotation;}else{this.labelRotation=0;}// Handle word-wrap or ellipsis on vertical axis\n}else if(slotWidth){// For word-wrap or ellipsis\ncss={width:innerWidth+PX};if(!textOverflowOption){css.textOverflow='clip';// On vertical axis, only allow word wrap if there is room for more lines.\ni=tickPositions.length;while(!horiz&&i--){pos=tickPositions[i];label=ticks[pos].label;if(label){// Reset ellipsis in order to get the correct bounding box (#4070)\nif(label.styles.textOverflow==='ellipsis'){label.css({textOverflow:'clip'});// Set the correct width in order to read the bounding box height (#4678, #5034)\n}else if(ticks[pos].labelLength>slotWidth){label.css({width:slotWidth+'px'});}if(label.getBBox().height>this.len/tickPositions.length-(labelMetrics.h-labelMetrics.f)){label.specCss={textOverflow:'ellipsis'};}}}}}// Add ellipsis if the label length is significantly longer than ideal\nif(attr.rotation){css={width:(labelLength>chart.chartHeight*0.5?chart.chartHeight*0.33:chart.chartHeight)+PX};if(!textOverflowOption){css.textOverflow='ellipsis';}}// Set the explicit or automatic label alignment\nthis.labelAlign=labelOptions.align||this.autoLabelAlign(this.labelRotation);if(this.labelAlign){attr.align=this.labelAlign;}// Apply general and specific CSS\neach(tickPositions,function(pos){var tick=ticks[pos],label=tick&&tick.label;if(label){label.attr(attr);// This needs to go before the CSS in old IE (#4502)\nif(css){label.css(merge(css,label.specCss));}delete label.specCss;tick.rotation=attr.rotation;}});// Note: Why is this not part of getLabelPosition?\nthis.tickRotCorr=renderer.rotCorr(labelMetrics.b,this.labelRotation||0,this.side!==0);},/**\n         * Return true if the axis has associated data\n         */hasData:function(){return this.hasVisibleSeries||defined(this.min)&&defined(this.max)&&!!this.tickPositions;},/**\n         * Render the tick labels to a preliminary position to get their sizes\n         */getOffset:function(){var axis=this,chart=axis.chart,renderer=chart.renderer,options=axis.options,tickPositions=axis.tickPositions,ticks=axis.ticks,horiz=axis.horiz,side=axis.side,invertedSide=chart.inverted?[1,0,3,2][side]:side,hasData,showAxis,titleOffset=0,titleOffsetOption,titleMargin=0,axisTitleOptions=options.title,labelOptions=options.labels,labelOffset=0,// reset\nlabelOffsetPadded,opposite=axis.opposite,axisOffset=chart.axisOffset,clipOffset=chart.clipOffset,clip,directionFactor=[-1,1,1,-1][side],n,textAlign,axisParent=axis.axisParent,// Used in color axis\nlineHeightCorrection,tickSize=this.tickSize('tick');// For reuse in Axis.render\nhasData=axis.hasData();axis.showAxis=showAxis=hasData||pick(options.showEmpty,true);// Set/reset staggerLines\naxis.staggerLines=axis.horiz&&labelOptions.staggerLines;// Create the axisGroup and gridGroup elements on first iteration\nif(!axis.axisGroup){axis.gridGroup=renderer.g('grid').attr({zIndex:options.gridZIndex||1}).add(axisParent);axis.axisGroup=renderer.g('axis').attr({zIndex:options.zIndex||2}).add(axisParent);axis.labelGroup=renderer.g('axis-labels').attr({zIndex:labelOptions.zIndex||7}).addClass(PREFIX+axis.coll.toLowerCase()+'-labels').add(axisParent);}if(hasData||axis.isLinked){// Generate ticks\neach(tickPositions,function(pos){if(!ticks[pos]){ticks[pos]=new Tick(axis,pos);}else{ticks[pos].addLabel();// update labels depending on tick interval\n}});axis.renderUnsquish();// Left side must be align: right and right side must have align: left for labels\nif(labelOptions.reserveSpace!==false&&(side===0||side===2||{1:'left',3:'right'}[side]===axis.labelAlign||axis.labelAlign==='center')){each(tickPositions,function(pos){// get the highest offset\nlabelOffset=mathMax(ticks[pos].getLabelSize(),labelOffset);});}if(axis.staggerLines){labelOffset*=axis.staggerLines;axis.labelOffset=labelOffset*(axis.opposite?-1:1);}}else{// doesn't have data\nfor(n in ticks){ticks[n].destroy();delete ticks[n];}}if(axisTitleOptions&&axisTitleOptions.text&&axisTitleOptions.enabled!==false){if(!axis.axisTitle){textAlign=axisTitleOptions.textAlign;if(!textAlign){textAlign=(horiz?{low:'left',middle:'center',high:'right'}:{low:opposite?'right':'left',middle:'center',high:opposite?'left':'right'})[axisTitleOptions.align];}axis.axisTitle=renderer.text(axisTitleOptions.text,0,0,axisTitleOptions.useHTML).attr({zIndex:7,rotation:axisTitleOptions.rotation||0,align:textAlign}).addClass(PREFIX+this.coll.toLowerCase()+'-title').css(axisTitleOptions.style).add(axis.axisGroup);axis.axisTitle.isNew=true;}if(showAxis){titleOffset=axis.axisTitle.getBBox()[horiz?'height':'width'];titleOffsetOption=axisTitleOptions.offset;titleMargin=defined(titleOffsetOption)?0:pick(axisTitleOptions.margin,horiz?5:10);}// hide or show the title depending on whether showEmpty is set\naxis.axisTitle[showAxis?'show':'hide'](true);}// handle automatic or user set offset\naxis.offset=directionFactor*pick(options.offset,axisOffset[side]);axis.tickRotCorr=axis.tickRotCorr||{x:0,y:0};// polar\nif(side===0){lineHeightCorrection=-axis.labelMetrics().h;}else if(side===2){lineHeightCorrection=axis.tickRotCorr.y;}else{lineHeightCorrection=0;}// Find the padded label offset\nlabelOffsetPadded=Math.abs(labelOffset)+titleMargin;if(labelOffset){labelOffsetPadded-=lineHeightCorrection;labelOffsetPadded+=directionFactor*(horiz?pick(labelOptions.y,axis.tickRotCorr.y+directionFactor*8):labelOptions.x);}axis.axisTitleMargin=pick(titleOffsetOption,labelOffsetPadded);axisOffset[side]=mathMax(axisOffset[side],axis.axisTitleMargin+titleOffset+directionFactor*axis.offset,labelOffsetPadded,// #3027\nhasData&&tickPositions.length&&tickSize?tickSize[0]:0// #4866\n);// Decide the clipping needed to keep the graph inside the plot area and axis lines\nclip=options.offset?0:mathFloor(options.lineWidth/2)*2;// #4308, #4371\nclipOffset[invertedSide]=mathMax(clipOffset[invertedSide],clip);},/**\n         * Get the path for the axis line\n         */getLinePath:function(lineWidth){var chart=this.chart,opposite=this.opposite,offset=this.offset,horiz=this.horiz,lineLeft=this.left+(opposite?this.width:0)+offset,lineTop=chart.chartHeight-this.bottom-(opposite?this.height:0)+offset;if(opposite){lineWidth*=-1;// crispify the other way - #1480, #1687\n}return chart.renderer.crispLine([M,horiz?this.left:lineLeft,horiz?lineTop:this.top,L,horiz?chart.chartWidth-this.right:lineLeft,horiz?lineTop:chart.chartHeight-this.bottom],lineWidth);},/**\n         * Position the title\n         */getTitlePosition:function(){// compute anchor points for each of the title align options\nvar horiz=this.horiz,axisLeft=this.left,axisTop=this.top,axisLength=this.len,axisTitleOptions=this.options.title,margin=horiz?axisLeft:axisTop,opposite=this.opposite,offset=this.offset,xOption=axisTitleOptions.x||0,yOption=axisTitleOptions.y||0,fontSize=pInt(axisTitleOptions.style.fontSize||12),// the position in the length direction of the axis\nalongAxis={low:margin+(horiz?0:axisLength),middle:margin+axisLength/2,high:margin+(horiz?axisLength:0)}[axisTitleOptions.align],// the position in the perpendicular direction of the axis\noffAxis=(horiz?axisTop+this.height:axisLeft)+(horiz?1:-1)*(// horizontal axis reverses the margin\nopposite?-1:1)*// so does opposite axes\nthis.axisTitleMargin+(this.side===2?fontSize:0);return{x:horiz?alongAxis+xOption:offAxis+(opposite?this.width:0)+offset+xOption,y:horiz?offAxis+yOption-(opposite?this.height:0)+offset:alongAxis+yOption};},/**\n         * Render the axis\n         */render:function(){var axis=this,chart=axis.chart,renderer=chart.renderer,options=axis.options,isLog=axis.isLog,lin2log=axis.lin2log,isLinked=axis.isLinked,tickPositions=axis.tickPositions,axisTitle=axis.axisTitle,ticks=axis.ticks,minorTicks=axis.minorTicks,alternateBands=axis.alternateBands,stackLabelOptions=options.stackLabels,alternateGridColor=options.alternateGridColor,tickmarkOffset=axis.tickmarkOffset,lineWidth=options.lineWidth,linePath,hasRendered=chart.hasRendered,slideInTicks=hasRendered&&isNumber(axis.oldMin),showAxis=axis.showAxis,animation=animObject(renderer.globalAnimation),from,to;// Reset\naxis.labelEdge.length=0;//axis.justifyToPlot = overflow === 'justify';\naxis.overlap=false;// Mark all elements inActive before we go over and mark the active ones\neach([ticks,minorTicks,alternateBands],function(coll){var pos;for(pos in coll){coll[pos].isActive=false;}});// If the series has data draw the ticks. Else only the line and title\nif(axis.hasData()||isLinked){// minor ticks\nif(axis.minorTickInterval&&!axis.categories){each(axis.getMinorTickPositions(),function(pos){if(!minorTicks[pos]){minorTicks[pos]=new Tick(axis,pos,'minor');}// render new ticks in old position\nif(slideInTicks&&minorTicks[pos].isNew){minorTicks[pos].render(null,true);}minorTicks[pos].render(null,false,1);});}// Major ticks. Pull out the first item and render it last so that\n// we can get the position of the neighbour label. #808.\nif(tickPositions.length){// #1300\neach(tickPositions,function(pos,i){// linked axes need an extra check to find out if\nif(!isLinked||pos>=axis.min&&pos<=axis.max){if(!ticks[pos]){ticks[pos]=new Tick(axis,pos);}// render new ticks in old position\nif(slideInTicks&&ticks[pos].isNew){ticks[pos].render(i,true,0.1);}ticks[pos].render(i);}});// In a categorized axis, the tick marks are displayed between labels. So\n// we need to add a tick mark and grid line at the left edge of the X axis.\nif(tickmarkOffset&&(axis.min===0||axis.single)){if(!ticks[-1]){ticks[-1]=new Tick(axis,-1,null,true);}ticks[-1].render(-1);}}// alternate grid color\nif(alternateGridColor){each(tickPositions,function(pos,i){to=tickPositions[i+1]!==UNDEFINED?tickPositions[i+1]+tickmarkOffset:axis.max-tickmarkOffset;if(i%2===0&&pos<axis.max&&to<=axis.max+(chart.polar?-tickmarkOffset:tickmarkOffset)){// #2248, #4660\nif(!alternateBands[pos]){alternateBands[pos]=new Highcharts.PlotLineOrBand(axis);}from=pos+tickmarkOffset;// #949\nalternateBands[pos].options={from:isLog?lin2log(from):from,to:isLog?lin2log(to):to,color:alternateGridColor};alternateBands[pos].render();alternateBands[pos].isActive=true;}});}// custom plot lines and bands\nif(!axis._addedPlotLB){// only first time\neach((options.plotLines||[]).concat(options.plotBands||[]),function(plotLineOptions){axis.addPlotBandOrLine(plotLineOptions);});axis._addedPlotLB=true;}}// end if hasData\n// Remove inactive ticks\neach([ticks,minorTicks,alternateBands],function(coll){var pos,i,forDestruction=[],delay=animation.duration,destroyInactiveItems=function(){i=forDestruction.length;while(i--){// When resizing rapidly, the same items may be destroyed in different timeouts,\n// or the may be reactivated\nif(coll[forDestruction[i]]&&!coll[forDestruction[i]].isActive){coll[forDestruction[i]].destroy();delete coll[forDestruction[i]];}}};for(pos in coll){if(!coll[pos].isActive){// Render to zero opacity\ncoll[pos].render(pos,false,0);coll[pos].isActive=false;forDestruction.push(pos);}}// When the objects are finished fading out, destroy them\nsyncTimeout(destroyInactiveItems,coll===alternateBands||!chart.hasRendered||!delay?0:delay);});// Static items. As the axis group is cleared on subsequent calls\n// to render, these items are added outside the group.\n// axis line\nif(lineWidth){linePath=axis.getLinePath(lineWidth);if(!axis.axisLine){axis.axisLine=renderer.path(linePath).attr({stroke:options.lineColor,'stroke-width':lineWidth,zIndex:7}).add(axis.axisGroup);}else{axis.axisLine.animate({d:linePath});}// show or hide the line depending on options.showEmpty\naxis.axisLine[showAxis?'show':'hide'](true);}if(axisTitle&&showAxis){axisTitle[axisTitle.isNew?'attr':'animate'](axis.getTitlePosition());axisTitle.isNew=false;}// Stacked totals:\nif(stackLabelOptions&&stackLabelOptions.enabled){axis.renderStackTotals();}// End stacked totals\naxis.isDirty=false;},/**\n         * Redraw the axis to reflect changes in the data or axis extremes\n         */redraw:function(){if(this.visible){// render the axis\nthis.render();// move plot lines and bands\neach(this.plotLinesAndBands,function(plotLine){plotLine.render();});}// mark associated series as dirty and ready for redraw\neach(this.series,function(series){series.isDirty=true;});},/**\n         * Destroys an Axis instance.\n         */destroy:function(keepEvents){var axis=this,stacks=axis.stacks,stackKey,plotLinesAndBands=axis.plotLinesAndBands,i;// Remove the events\nif(!keepEvents){removeEvent(axis);}// Destroy each stack total\nfor(stackKey in stacks){destroyObjectProperties(stacks[stackKey]);stacks[stackKey]=null;}// Destroy collections\neach([axis.ticks,axis.minorTicks,axis.alternateBands],function(coll){destroyObjectProperties(coll);});i=plotLinesAndBands.length;while(i--){// #1975\nplotLinesAndBands[i].destroy();}// Destroy local variables\neach(['stackTotalGroup','axisLine','axisTitle','axisGroup','cross','gridGroup','labelGroup'],function(prop){if(axis[prop]){axis[prop]=axis[prop].destroy();}});// Destroy crosshair\nif(this.cross){this.cross.destroy();}},/**\n         * Draw the crosshair\n         * \n         * @param  {Object} e The event arguments from the modified pointer event\n         * @param  {Object} point The Point object\n         */drawCrosshair:function(e,point){var path,options=this.crosshair,pos,attribs,categorized,strokeWidth;if(// Disabled in options\n!this.crosshair||// Snap\n(defined(point)||!pick(options.snap,true))===false){this.hideCrosshair();}else{// Get the path\nif(!pick(options.snap,true)){pos=this.horiz?e.chartX-this.pos:this.len-e.chartY+this.pos;}else if(defined(point)){pos=this.isXAxis?point.plotX:this.len-point.plotY;// #3834\n}if(this.isRadial){path=this.getPlotLinePath(this.isXAxis?point.x:pick(point.stackY,point.y))||null;// #3189\n}else{path=this.getPlotLinePath(null,null,null,null,pos)||null;// #3189\n}if(path===null){this.hideCrosshair();return;}categorized=this.categories&&!this.isRadial;strokeWidth=pick(options.width,categorized?this.transA:1);// Draw the cross\nif(this.cross){this.cross.attr({d:path,visibility:'visible','stroke-width':strokeWidth// #4737\n});}else{attribs={'pointer-events':'none',// #5259\n'stroke-width':strokeWidth,stroke:options.color||(categorized?'rgba(155,200,255,0.2)':'#C0C0C0'),zIndex:pick(options.zIndex,2)};if(options.dashStyle){attribs.dashstyle=options.dashStyle;}this.cross=this.chart.renderer.path(path).attr(attribs).add();}}},/**\n         *    Hide the crosshair.\n         */hideCrosshair:function(){if(this.cross){this.cross.hide();}}};// end Axis\nextend(Axis.prototype,AxisPlotLineOrBandExtension);/**\n     * Set the tick positions to a time unit that makes sense, for example\n     * on the first of each month or on every Monday. Return an array\n     * with the time positions. Used in datetime axes as well as for grouping\n     * data on a datetime axis.\n     *\n     * @param {Object} normalizedInterval The interval in axis values (ms) and the count\n     * @param {Number} min The minimum in axis values\n     * @param {Number} max The maximum in axis values\n     * @param {Number} startOfWeek\n     */Axis.prototype.getTimeTicks=function(normalizedInterval,min,max,startOfWeek){var tickPositions=[],i,higherRanks={},useUTC=defaultOptions.global.useUTC,minYear,// used in months and years as a basis for Date.UTC()\nminDate=new Date(min-getTZOffset(min)),interval=normalizedInterval.unitRange,count=normalizedInterval.count;if(defined(min)){// #1300\nminDate[setMilliseconds](interval>=timeUnits.second?0:// #3935\ncount*mathFloor(minDate.getMilliseconds()/count));// #3652, #3654\nif(interval>=timeUnits.second){// second\nminDate[setSeconds](interval>=timeUnits.minute?0:// #3935\ncount*mathFloor(minDate.getSeconds()/count));}if(interval>=timeUnits.minute){// minute\nminDate[setMinutes](interval>=timeUnits.hour?0:count*mathFloor(minDate[getMinutes]()/count));}if(interval>=timeUnits.hour){// hour\nminDate[setHours](interval>=timeUnits.day?0:count*mathFloor(minDate[getHours]()/count));}if(interval>=timeUnits.day){// day\nminDate[setDate](interval>=timeUnits.month?1:count*mathFloor(minDate[getDate]()/count));}if(interval>=timeUnits.month){// month\nminDate[setMonth](interval>=timeUnits.year?0:count*mathFloor(minDate[getMonth]()/count));minYear=minDate[getFullYear]();}if(interval>=timeUnits.year){// year\nminYear-=minYear%count;minDate[setFullYear](minYear);}// week is a special case that runs outside the hierarchy\nif(interval===timeUnits.week){// get start of current week, independent of count\nminDate[setDate](minDate[getDate]()-minDate[getDay]()+pick(startOfWeek,1));}// get tick positions\ni=1;if(timezoneOffset||getTimezoneOffset){minDate=minDate.getTime();minDate=new Date(minDate+getTZOffset(minDate));}minYear=minDate[getFullYear]();var time=minDate.getTime(),minMonth=minDate[getMonth](),minDateDate=minDate[getDate](),variableDayLength=!useUTC||!!getTimezoneOffset,// #4951\nlocalTimezoneOffset=(timeUnits.day+(useUTC?getTZOffset(minDate):minDate.getTimezoneOffset()*60*1000))%timeUnits.day;// #950, #3359\n// iterate and add tick positions at appropriate values\nwhile(time<max){tickPositions.push(time);// if the interval is years, use Date.UTC to increase years\nif(interval===timeUnits.year){time=makeTime(minYear+i*count,0);// if the interval is months, use Date.UTC to increase months\n}else if(interval===timeUnits.month){time=makeTime(minYear,minMonth+i*count);// if we're using global time, the interval is not fixed as it jumps\n// one hour at the DST crossover\n}else if(variableDayLength&&(interval===timeUnits.day||interval===timeUnits.week)){time=makeTime(minYear,minMonth,minDateDate+i*count*(interval===timeUnits.day?1:7));// else, the interval is fixed and we use simple addition\n}else{time+=interval*count;}i++;}// push the last time\ntickPositions.push(time);// mark new days if the time is dividible by day (#1649, #1760)\neach(grep(tickPositions,function(time){return interval<=timeUnits.hour&&time%timeUnits.day===localTimezoneOffset;}),function(time){higherRanks[time]='day';});}// record information on the chosen unit - for dynamic label formatter\ntickPositions.info=extend(normalizedInterval,{higherRanks:higherRanks,totalRange:interval*count});return tickPositions;};/**\n     * Get a normalized tick interval for dates. Returns a configuration object with\n     * unit range (interval), count and name. Used to prepare data for getTimeTicks.\n     * Previously this logic was part of getTimeTicks, but as getTimeTicks now runs\n     * of segments in stock charts, the normalizing logic was extracted in order to\n     * prevent it for running over again for each segment having the same interval.\n     * #662, #697.\n     */Axis.prototype.normalizeTimeTickInterval=function(tickInterval,unitsOption){var units=unitsOption||[['millisecond',// unit name\n[1,2,5,10,20,25,50,100,200,500]// allowed multiples\n],['second',[1,2,5,10,15,30]],['minute',[1,2,5,10,15,30]],['hour',[1,2,3,4,6,8,12]],['day',[1,2]],['week',[1,2]],['month',[1,2,3,4,6]],['year',null]],unit=units[units.length-1],// default unit is years\ninterval=timeUnits[unit[0]],multiples=unit[1],count,i;// loop through the units to find the one that best fits the tickInterval\nfor(i=0;i<units.length;i++){unit=units[i];interval=timeUnits[unit[0]];multiples=unit[1];if(units[i+1]){// lessThan is in the middle between the highest multiple and the next unit.\nvar lessThan=(interval*multiples[multiples.length-1]+timeUnits[units[i+1][0]])/2;// break and keep the current unit\nif(tickInterval<=lessThan){break;}}}// prevent 2.5 years intervals, though 25, 250 etc. are allowed\nif(interval===timeUnits.year&&tickInterval<5*interval){multiples=[1,2,5];}// get the count\ncount=normalizeTickInterval(tickInterval/interval,multiples,unit[0]==='year'?mathMax(getMagnitude(tickInterval/interval),1):1// #1913, #2360\n);return{unitRange:interval,count:count,unitName:unit[0]};};/**\n     * Methods defined on the Axis prototype\n     */ /**\n     * Set the tick positions of a logarithmic axis\n     */Axis.prototype.getLogTickPositions=function(interval,min,max,minor){var axis=this,options=axis.options,axisLength=axis.len,lin2log=axis.lin2log,log2lin=axis.log2lin,// Since we use this method for both major and minor ticks,\n// use a local variable and return the result\npositions=[];// Reset\nif(!minor){axis._minorAutoInterval=null;}// First case: All ticks fall on whole logarithms: 1, 10, 100 etc.\nif(interval>=0.5){interval=mathRound(interval);positions=axis.getLinearTickPositions(interval,min,max);// Second case: We need intermediary ticks. For example\n// 1, 2, 4, 6, 8, 10, 20, 40 etc.\n}else if(interval>=0.08){var roundedMin=mathFloor(min),intermediate,i,j,len,pos,lastPos,break2;if(interval>0.3){intermediate=[1,2,4];}else if(interval>0.15){// 0.2 equals five minor ticks per 1, 10, 100 etc\nintermediate=[1,2,4,6,8];}else{// 0.1 equals ten minor ticks per 1, 10, 100 etc\nintermediate=[1,2,3,4,5,6,7,8,9];}for(i=roundedMin;i<max+1&&!break2;i++){len=intermediate.length;for(j=0;j<len&&!break2;j++){pos=log2lin(lin2log(i)*intermediate[j]);if(pos>min&&(!minor||lastPos<=max)&&lastPos!==UNDEFINED){// #1670, lastPos is #3113\npositions.push(lastPos);}if(lastPos>max){break2=true;}lastPos=pos;}}// Third case: We are so deep in between whole logarithmic values that\n// we might as well handle the tick positions like a linear axis. For\n// example 1.01, 1.02, 1.03, 1.04.\n}else{var realMin=lin2log(min),realMax=lin2log(max),tickIntervalOption=options[minor?'minorTickInterval':'tickInterval'],filteredTickIntervalOption=tickIntervalOption==='auto'?null:tickIntervalOption,tickPixelIntervalOption=options.tickPixelInterval/(minor?5:1),totalPixelLength=minor?axisLength/axis.tickPositions.length:axisLength;interval=pick(filteredTickIntervalOption,axis._minorAutoInterval,(realMax-realMin)*tickPixelIntervalOption/(totalPixelLength||1));interval=normalizeTickInterval(interval,null,getMagnitude(interval));positions=map(axis.getLinearTickPositions(interval,realMin,realMax),log2lin);if(!minor){axis._minorAutoInterval=interval/5;}}// Set the axis-level tickInterval variable\nif(!minor){axis.tickInterval=interval;}return positions;};Axis.prototype.log2lin=function(num){return math.log(num)/math.LN10;};Axis.prototype.lin2log=function(num){return math.pow(10,num);};/**\n     * The tooltip object\n     * @param {Object} chart The chart instance\n     * @param {Object} options Tooltip options\n     */var Tooltip=Highcharts.Tooltip=function(){this.init.apply(this,arguments);};Tooltip.prototype={init:function(chart,options){var borderWidth=options.borderWidth,style=options.style,padding=pInt(style.padding);// Save the chart and options\nthis.chart=chart;this.options=options;// Keep track of the current series\n//this.currentSeries = UNDEFINED;\n// List of crosshairs\nthis.crosshairs=[];// Current values of x and y when animating\nthis.now={x:0,y:0};// The tooltip is initially hidden\nthis.isHidden=true;// create the label\nthis.label=chart.renderer.label('',0,0,options.shape||'callout',null,null,options.useHTML,null,'tooltip').attr({padding:padding,fill:options.backgroundColor,'stroke-width':borderWidth,r:options.borderRadius,zIndex:8}).css(style).css({padding:0})// Remove it from VML, the padding is applied as an attribute instead (#1117)\n.add().attr({y:-9999});// #2301, #2657\n// When using canVG the shadow shows up as a gray circle\n// even if the tooltip is hidden.\nif(!useCanVG){this.label.shadow(options.shadow);}// Public property for getting the shared state.\nthis.shared=options.shared;},/**\n         * Destroy the tooltip and its elements.\n         */destroy:function(){// Destroy and clear local variables\nif(this.label){this.label=this.label.destroy();}clearTimeout(this.hideTimer);clearTimeout(this.tooltipTimeout);},/**\n         * Provide a soft movement for the tooltip\n         *\n         * @param {Number} x\n         * @param {Number} y\n         * @private\n         */move:function(x,y,anchorX,anchorY){var tooltip=this,now=tooltip.now,animate=tooltip.options.animation!==false&&!tooltip.isHidden&&(// When we get close to the target position, abort animation and land on the right place (#3056)\nmathAbs(x-now.x)>1||mathAbs(y-now.y)>1),skipAnchor=tooltip.followPointer||tooltip.len>1;// Get intermediate values for animation\nextend(now,{x:animate?(2*now.x+x)/3:x,y:animate?(now.y+y)/2:y,anchorX:skipAnchor?UNDEFINED:animate?(2*now.anchorX+anchorX)/3:anchorX,anchorY:skipAnchor?UNDEFINED:animate?(now.anchorY+anchorY)/2:anchorY});// Move to the intermediate value\ntooltip.label.attr(now);// Run on next tick of the mouse tracker\nif(animate){// Never allow two timeouts\nclearTimeout(this.tooltipTimeout);// Set the fixed interval ticking for the smooth tooltip\nthis.tooltipTimeout=setTimeout(function(){// The interval function may still be running during destroy, so check that the chart is really there before calling.\nif(tooltip){tooltip.move(x,y,anchorX,anchorY);}},32);}},/**\n         * Hide the tooltip\n         */hide:function(delay){var tooltip=this;clearTimeout(this.hideTimer);// disallow duplicate timers (#1728, #1766)\ndelay=pick(delay,this.options.hideDelay,500);if(!this.isHidden){this.hideTimer=syncTimeout(function(){tooltip.label[delay?'fadeOut':'hide']();tooltip.isHidden=true;},delay);}},/**\n         * Extendable method to get the anchor position of the tooltip\n         * from a point or set of points\n         */getAnchor:function(points,mouseEvent){var ret,chart=this.chart,inverted=chart.inverted,plotTop=chart.plotTop,plotLeft=chart.plotLeft,plotX=0,plotY=0,yAxis,xAxis;points=splat(points);// Pie uses a special tooltipPos\nret=points[0].tooltipPos;// When tooltip follows mouse, relate the position to the mouse\nif(this.followPointer&&mouseEvent){if(mouseEvent.chartX===UNDEFINED){mouseEvent=chart.pointer.normalize(mouseEvent);}ret=[mouseEvent.chartX-chart.plotLeft,mouseEvent.chartY-plotTop];}// When shared, use the average position\nif(!ret){each(points,function(point){yAxis=point.series.yAxis;xAxis=point.series.xAxis;plotX+=point.plotX+(!inverted&&xAxis?xAxis.left-plotLeft:0);plotY+=(point.plotLow?(point.plotLow+point.plotHigh)/2:point.plotY)+(!inverted&&yAxis?yAxis.top-plotTop:0);// #1151\n});plotX/=points.length;plotY/=points.length;ret=[inverted?chart.plotWidth-plotY:plotX,this.shared&&!inverted&&points.length>1&&mouseEvent?mouseEvent.chartY-plotTop:// place shared tooltip next to the mouse (#424)\ninverted?chart.plotHeight-plotX:plotY];}return map(ret,mathRound);},/**\n         * Place the tooltip in a chart without spilling over\n         * and not covering the point it self.\n         */getPosition:function(boxWidth,boxHeight,point){var chart=this.chart,distance=this.distance,ret={},h=point.h||0,// #4117\nswapped,first=['y',chart.chartHeight,boxHeight,point.plotY+chart.plotTop,chart.plotTop,chart.plotTop+chart.plotHeight],second=['x',chart.chartWidth,boxWidth,point.plotX+chart.plotLeft,chart.plotLeft,chart.plotLeft+chart.plotWidth],// The far side is right or bottom\npreferFarSide=!this.followPointer&&pick(point.ttBelow,!chart.inverted===!!point.negative),// #4984\n/**\n                 * Handle the preferred dimension. When the preferred dimension is tooltip\n                 * on top or bottom of the point, it will look for space there.\n                 */firstDimension=function(dim,outerSize,innerSize,point,min,max){var roomLeft=innerSize<point-distance,roomRight=point+distance+innerSize<outerSize,alignedLeft=point-distance-innerSize,alignedRight=point+distance;if(preferFarSide&&roomRight){ret[dim]=alignedRight;}else if(!preferFarSide&&roomLeft){ret[dim]=alignedLeft;}else if(roomLeft){ret[dim]=mathMin(max-innerSize,alignedLeft-h<0?alignedLeft:alignedLeft-h);}else if(roomRight){ret[dim]=mathMax(min,alignedRight+h+innerSize>outerSize?alignedRight:alignedRight+h);}else{return false;}},/**\n                 * Handle the secondary dimension. If the preferred dimension is tooltip\n                 * on top or bottom of the point, the second dimension is to align the tooltip\n                 * above the point, trying to align center but allowing left or right\n                 * align within the chart box.\n                 */secondDimension=function(dim,outerSize,innerSize,point){var retVal;// Too close to the edge, return false and swap dimensions\nif(point<distance||point>outerSize-distance){retVal=false;// Align left/top\n}else if(point<innerSize/2){ret[dim]=1;// Align right/bottom\n}else if(point>outerSize-innerSize/2){ret[dim]=outerSize-innerSize-2;// Align center\n}else{ret[dim]=point-innerSize/2;}return retVal;},/**\n                 * Swap the dimensions\n                 */swap=function(count){var temp=first;first=second;second=temp;swapped=count;},run=function(){if(firstDimension.apply(0,first)!==false){if(secondDimension.apply(0,second)===false&&!swapped){swap(true);run();}}else if(!swapped){swap(true);run();}else{ret.x=ret.y=0;}};// Under these conditions, prefer the tooltip on the side of the point\nif(chart.inverted||this.len>1){swap();}run();return ret;},/**\n         * In case no user defined formatter is given, this will be used. Note that the context\n         * here is an object holding point, series, x, y etc.\n         */defaultFormatter:function(tooltip){var items=this.points||splat(this),s;// build the header\ns=[tooltip.tooltipFooterHeaderFormatter(items[0])];//#3397: abstraction to enable formatting of footer and header\n// build the values\ns=s.concat(tooltip.bodyFormatter(items));// footer\ns.push(tooltip.tooltipFooterHeaderFormatter(items[0],true));//#3397: abstraction to enable formatting of footer and header\nreturn s.join('');},/**\n         * Refresh the tooltip's text and position.\n         * @param {Object} point\n         */refresh:function(point,mouseEvent){var tooltip=this,chart=tooltip.chart,label=tooltip.label,options=tooltip.options,x,y,anchor,textConfig={},text,pointConfig=[],formatter=options.formatter||tooltip.defaultFormatter,hoverPoints=chart.hoverPoints,borderColor,shared=tooltip.shared,currentSeries;clearTimeout(this.hideTimer);// get the reference point coordinates (pie charts use tooltipPos)\ntooltip.followPointer=splat(point)[0].series.tooltipOptions.followPointer;anchor=tooltip.getAnchor(point,mouseEvent);x=anchor[0];y=anchor[1];// shared tooltip, array is sent over\nif(shared&&!(point.series&&point.series.noSharedTooltip)){// hide previous hoverPoints and set new\nchart.hoverPoints=point;if(hoverPoints){each(hoverPoints,function(point){point.setState();});}each(point,function(item){item.setState(HOVER_STATE);pointConfig.push(item.getLabelConfig());});textConfig={x:point[0].category,y:point[0].y};textConfig.points=pointConfig;this.len=pointConfig.length;point=point[0];// single point tooltip\n}else{textConfig=point.getLabelConfig();}text=formatter.call(textConfig,tooltip);// register the current series\ncurrentSeries=point.series;this.distance=pick(currentSeries.tooltipOptions.distance,16);// update the inner HTML\nif(text===false){this.hide();}else{// show it\nif(tooltip.isHidden){stop(label);label.attr('opacity',1).show();}// update text\nlabel.attr({text:text});// set the stroke color of the box\nborderColor=options.borderColor||point.color||currentSeries.color||'#606060';label.attr({stroke:borderColor});tooltip.updatePosition({plotX:x,plotY:y,negative:point.negative,ttBelow:point.ttBelow,h:anchor[2]||0});this.isHidden=false;}fireEvent(chart,'tooltipRefresh',{text:text,x:x+chart.plotLeft,y:y+chart.plotTop,borderColor:borderColor});},/**\n         * Find the new position and perform the move\n         */updatePosition:function(point){var chart=this.chart,label=this.label,pos=(this.options.positioner||this.getPosition).call(this,label.width,label.height,point);// do the move\nthis.move(mathRound(pos.x),mathRound(pos.y||0),// can be undefined (#3977)\npoint.plotX+chart.plotLeft,point.plotY+chart.plotTop);},/**\n         * Get the best X date format based on the closest point range on the axis.\n         */getXDateFormat:function(point,options,xAxis){var xDateFormat,dateTimeLabelFormats=options.dateTimeLabelFormats,closestPointRange=xAxis&&xAxis.closestPointRange,n,blank='01-01 00:00:00.000',strpos={millisecond:15,second:12,minute:9,hour:6,day:3},date,lastN='millisecond';// for sub-millisecond data, #4223\nif(closestPointRange){date=dateFormat('%m-%d %H:%M:%S.%L',point.x);for(n in timeUnits){// If the range is exactly one week and we're looking at a Sunday/Monday, go for the week format\nif(closestPointRange===timeUnits.week&&+dateFormat('%w',point.x)===xAxis.options.startOfWeek&&date.substr(6)===blank.substr(6)){n='week';break;}// The first format that is too great for the range\nif(timeUnits[n]>closestPointRange){n=lastN;break;}// If the point is placed every day at 23:59, we need to show\n// the minutes as well. #2637.\nif(strpos[n]&&date.substr(strpos[n])!==blank.substr(strpos[n])){break;}// Weeks are outside the hierarchy, only apply them on Mondays/Sundays like in the first condition\nif(n!=='week'){lastN=n;}}if(n){xDateFormat=dateTimeLabelFormats[n];}}else{xDateFormat=dateTimeLabelFormats.day;}return xDateFormat||dateTimeLabelFormats.year;// #2546, 2581\n},/**\n         * Format the footer/header of the tooltip\n         * #3397: abstraction to enable formatting of footer and header\n         */tooltipFooterHeaderFormatter:function(point,isFooter){var footOrHead=isFooter?'footer':'header',series=point.series,tooltipOptions=series.tooltipOptions,xDateFormat=tooltipOptions.xDateFormat,xAxis=series.xAxis,isDateTime=xAxis&&xAxis.options.type==='datetime'&&isNumber(point.key),formatString=tooltipOptions[footOrHead+'Format'];// Guess the best date format based on the closest point distance (#568, #3418)\nif(isDateTime&&!xDateFormat){xDateFormat=this.getXDateFormat(point,tooltipOptions,xAxis);}// Insert the footer date format if any\nif(isDateTime&&xDateFormat){formatString=formatString.replace('{point.key}','{point.key:'+xDateFormat+'}');}return format(formatString,{point:point,series:series});},/**\n         * Build the body (lines) of the tooltip by iterating over the items and returning one entry for each item,\n         * abstracting this functionality allows to easily overwrite and extend it.\n         */bodyFormatter:function(items){return map(items,function(item){var tooltipOptions=item.series.tooltipOptions;return(tooltipOptions.pointFormatter||item.point.tooltipFormatter).call(item.point,tooltipOptions.pointFormat);});}};var hoverChartIndex;// Global flag for touch support\nhasTouch=doc&&doc.documentElement.ontouchstart!==UNDEFINED;/**\n     * The mouse tracker object. All methods starting with \"on\" are primary DOM event handlers.\n     * Subsequent methods should be named differently from what they are doing.\n     * @param {Object} chart The Chart instance\n     * @param {Object} options The root options object\n     */var Pointer=Highcharts.Pointer=function(chart,options){this.init(chart,options);};Pointer.prototype={/**\n         * Initialize Pointer\n         */init:function(chart,options){var chartOptions=options.chart,chartEvents=chartOptions.events,zoomType=useCanVG?'':chartOptions.zoomType,inverted=chart.inverted,zoomX,zoomY;// Store references\nthis.options=options;this.chart=chart;// Zoom status\nthis.zoomX=zoomX=/x/.test(zoomType);this.zoomY=zoomY=/y/.test(zoomType);this.zoomHor=zoomX&&!inverted||zoomY&&inverted;this.zoomVert=zoomY&&!inverted||zoomX&&inverted;this.hasZoom=zoomX||zoomY;// Do we need to handle click on a touch device?\nthis.runChartClick=chartEvents&&!!chartEvents.click;this.pinchDown=[];this.lastValidTouch={};if(Highcharts.Tooltip&&options.tooltip.enabled){chart.tooltip=new Tooltip(chart,options.tooltip);this.followTouchMove=pick(options.tooltip.followTouchMove,true);}this.setDOMEvents();},/**\n         * Add crossbrowser support for chartX and chartY\n         * @param {Object} e The event object in standard browsers\n         */normalize:function(e,chartPosition){var chartX,chartY,ePos;// IE normalizing\ne=e||win.event;if(!e.target){e.target=e.srcElement;}// iOS (#2757)\nePos=e.touches?e.touches.length?e.touches.item(0):e.changedTouches[0]:e;// Get mouse position\nif(!chartPosition){this.chartPosition=chartPosition=offset(this.chart.container);}// chartX and chartY\nif(ePos.pageX===UNDEFINED){// IE < 9. #886.\nchartX=mathMax(e.x,e.clientX-chartPosition.left);// #2005, #2129: the second case is\n// for IE10 quirks mode within framesets\nchartY=e.y;}else{chartX=ePos.pageX-chartPosition.left;chartY=ePos.pageY-chartPosition.top;}return extend(e,{chartX:mathRound(chartX),chartY:mathRound(chartY)});},/**\n         * Get the click position in terms of axis values.\n         *\n         * @param {Object} e A pointer event\n         */getCoordinates:function(e){var coordinates={xAxis:[],yAxis:[]};each(this.chart.axes,function(axis){coordinates[axis.isXAxis?'xAxis':'yAxis'].push({axis:axis,value:axis.toValue(e[axis.horiz?'chartX':'chartY'])});});return coordinates;},/**\n         * With line type charts with a single tracker, get the point closest to the mouse.\n         * Run Point.onMouseOver and display tooltip for the point or points.\n         */runPointActions:function(e){var pointer=this,chart=pointer.chart,series=chart.series,tooltip=chart.tooltip,shared=tooltip?tooltip.shared:false,followPointer,hoverPoint=chart.hoverPoint,hoverSeries=chart.hoverSeries,i,distance=[Number.MAX_VALUE,Number.MAX_VALUE],// #4511\nanchor,noSharedTooltip,stickToHoverSeries,directTouch,kdpoints=[],kdpoint=[],kdpointT;// For hovering over the empty parts of the plot area (hoverSeries is undefined).\n// If there is one series with point tracking (combo chart), don't go to nearest neighbour.\nif(!shared&&!hoverSeries){for(i=0;i<series.length;i++){if(series[i].directTouch||!series[i].options.stickyTracking){series=[];}}}// If it has a hoverPoint and that series requires direct touch (like columns, #3899), or we're on\n// a noSharedTooltip series among shared tooltip series (#4546), use the hoverPoint . Otherwise,\n// search the k-d tree.\nstickToHoverSeries=hoverSeries&&(shared?hoverSeries.noSharedTooltip:hoverSeries.directTouch);if(stickToHoverSeries&&hoverPoint){kdpoint=[hoverPoint];// Handle shared tooltip or cases where a series is not yet hovered\n}else{// Find nearest points on all series\neach(series,function(s){// Skip hidden series\nnoSharedTooltip=s.noSharedTooltip&&shared;directTouch=!shared&&s.directTouch;if(s.visible&&!noSharedTooltip&&!directTouch&&pick(s.options.enableMouseTracking,true)){// #3821\nkdpointT=s.searchPoint(e,!noSharedTooltip&&s.kdDimensions===1);// #3828\nif(kdpointT){kdpoints.push(kdpointT);}}});// Find absolute nearest point\neach(kdpoints,function(p){if(p){// Store both closest points, using point.dist and point.distX comparisons (#4645):\neach(['dist','distX'],function(dist,k){if(isNumber(p[dist])){var// It is closer than the reference point\nisCloser=p[dist]<distance[k],// It is equally close, but above the reference point (#4679)\nisAbove=p[dist]===distance[k]&&p.series.group.zIndex>=kdpoint[k].series.group.zIndex;if(isCloser||isAbove){distance[k]=p[dist];kdpoint[k]=p;}}});}});}// Remove points with different x-positions, required for shared tooltip and crosshairs (#4645):\nif(shared){i=kdpoints.length;while(i--){if(kdpoints[i].clientX!==kdpoint[1].clientX||kdpoints[i].series.noSharedTooltip){kdpoints.splice(i,1);}}}// Refresh tooltip for kdpoint if new hover point or tooltip was hidden // #3926, #4200\nif(kdpoint[0]&&(kdpoint[0]!==this.prevKDPoint||tooltip&&tooltip.isHidden)){// Draw tooltip if necessary\nif(shared&&!kdpoint[0].series.noSharedTooltip){if(kdpoints.length&&tooltip){tooltip.refresh(kdpoints,e);}// Do mouseover on all points (#3919, #3985, #4410)\neach(kdpoints,function(point){point.onMouseOver(e,point!==(hoverSeries&&hoverSeries.directTouch&&hoverPoint||kdpoint[0]));});this.prevKDPoint=kdpoint[1];}else{if(tooltip){tooltip.refresh(kdpoint[0],e);}if(!hoverSeries||!hoverSeries.directTouch){// #4448\nkdpoint[0].onMouseOver(e);}this.prevKDPoint=kdpoint[0];}// Update positions (regardless of kdpoint or hoverPoint)\n}else{followPointer=hoverSeries&&hoverSeries.tooltipOptions.followPointer;if(tooltip&&followPointer&&!tooltip.isHidden){anchor=tooltip.getAnchor([{}],e);tooltip.updatePosition({plotX:anchor[0],plotY:anchor[1]});}}// Start the event listener to pick up the tooltip and crosshairs\nif(!pointer._onDocumentMouseMove){pointer._onDocumentMouseMove=function(e){if(charts[hoverChartIndex]){charts[hoverChartIndex].pointer.onDocumentMouseMove(e);}};addEvent(doc,'mousemove',pointer._onDocumentMouseMove);}// Crosshair. For each hover point, loop over axes and draw cross if that point\n// belongs to the axis (#4927).\neach(shared?kdpoints:[pick(hoverPoint,kdpoint[1])],function(point){// #5269\neach(chart.axes,function(axis){// In case of snap = false, point is undefined, and we draw the crosshair anyway (#5066)\nif(!point||point.series[axis.coll]===axis){axis.drawCrosshair(e,point);}});});},/**\n         * Reset the tracking by hiding the tooltip, the hover series state and the hover point\n         *\n         * @param allowMove {Boolean} Instead of destroying the tooltip altogether, allow moving it if possible\n         */reset:function(allowMove,delay){var pointer=this,chart=pointer.chart,hoverSeries=chart.hoverSeries,hoverPoint=chart.hoverPoint,hoverPoints=chart.hoverPoints,tooltip=chart.tooltip,tooltipPoints=tooltip&&tooltip.shared?hoverPoints:hoverPoint;// Check if the points have moved outside the plot area (#1003, #4736, #5101)\nif(allowMove&&tooltipPoints){each(splat(tooltipPoints),function(point){if(point.series.isCartesian&&point.plotX===undefined){allowMove=false;}});}// Just move the tooltip, #349\nif(allowMove){if(tooltip&&tooltipPoints){tooltip.refresh(tooltipPoints);if(hoverPoint){// #2500\nhoverPoint.setState(hoverPoint.state,true);each(chart.axes,function(axis){if(pick(axis.crosshair&&axis.crosshair.snap,true)){axis.drawCrosshair(null,hoverPoint);}else{axis.hideCrosshair();}});}}// Full reset\n}else{if(hoverPoint){hoverPoint.onMouseOut();}if(hoverPoints){each(hoverPoints,function(point){point.setState();});}if(hoverSeries){hoverSeries.onMouseOut();}if(tooltip){tooltip.hide(delay);}if(pointer._onDocumentMouseMove){removeEvent(doc,'mousemove',pointer._onDocumentMouseMove);pointer._onDocumentMouseMove=null;}// Remove crosshairs\neach(chart.axes,function(axis){axis.hideCrosshair();});pointer.hoverX=chart.hoverPoints=chart.hoverPoint=null;}},/**\n         * Scale series groups to a certain scale and translation\n         */scaleGroups:function(attribs,clip){var chart=this.chart,seriesAttribs;// Scale each series\neach(chart.series,function(series){seriesAttribs=attribs||series.getPlotBox();// #1701\nif(series.xAxis&&series.xAxis.zoomEnabled){series.group.attr(seriesAttribs);if(series.markerGroup){series.markerGroup.attr(seriesAttribs);series.markerGroup.clip(clip?chart.clipRect:null);}if(series.dataLabelsGroup){series.dataLabelsGroup.attr(seriesAttribs);}}});// Clip\nchart.clipRect.attr(clip||chart.clipBox);},/**\n         * Start a drag operation\n         */dragStart:function(e){var chart=this.chart;// Record the start position\nchart.mouseIsDown=e.type;chart.cancelClick=false;chart.mouseDownX=this.mouseDownX=e.chartX;chart.mouseDownY=this.mouseDownY=e.chartY;},/**\n         * Perform a drag operation in response to a mousemove event while the mouse is down\n         */drag:function(e){var chart=this.chart,chartOptions=chart.options.chart,chartX=e.chartX,chartY=e.chartY,zoomHor=this.zoomHor,zoomVert=this.zoomVert,plotLeft=chart.plotLeft,plotTop=chart.plotTop,plotWidth=chart.plotWidth,plotHeight=chart.plotHeight,clickedInside,size,selectionMarker=this.selectionMarker,mouseDownX=this.mouseDownX,mouseDownY=this.mouseDownY,panKey=chartOptions.panKey&&e[chartOptions.panKey+'Key'];// If the device supports both touch and mouse (like IE11), and we are touch-dragging\n// inside the plot area, don't handle the mouse event. #4339.\nif(selectionMarker&&selectionMarker.touch){return;}// If the mouse is outside the plot area, adjust to cooordinates\n// inside to prevent the selection marker from going outside\nif(chartX<plotLeft){chartX=plotLeft;}else if(chartX>plotLeft+plotWidth){chartX=plotLeft+plotWidth;}if(chartY<plotTop){chartY=plotTop;}else if(chartY>plotTop+plotHeight){chartY=plotTop+plotHeight;}// determine if the mouse has moved more than 10px\nthis.hasDragged=Math.sqrt(Math.pow(mouseDownX-chartX,2)+Math.pow(mouseDownY-chartY,2));if(this.hasDragged>10){clickedInside=chart.isInsidePlot(mouseDownX-plotLeft,mouseDownY-plotTop);// make a selection\nif(chart.hasCartesianSeries&&(this.zoomX||this.zoomY)&&clickedInside&&!panKey){if(!selectionMarker){this.selectionMarker=selectionMarker=chart.renderer.rect(plotLeft,plotTop,zoomHor?1:plotWidth,zoomVert?1:plotHeight,0).attr({fill:chartOptions.selectionMarkerFill||'rgba(69,114,167,0.25)',zIndex:7}).add();}}// adjust the width of the selection marker\nif(selectionMarker&&zoomHor){size=chartX-mouseDownX;selectionMarker.attr({width:mathAbs(size),x:(size>0?0:size)+mouseDownX});}// adjust the height of the selection marker\nif(selectionMarker&&zoomVert){size=chartY-mouseDownY;selectionMarker.attr({height:mathAbs(size),y:(size>0?0:size)+mouseDownY});}// panning\nif(clickedInside&&!selectionMarker&&chartOptions.panning){chart.pan(e,chartOptions.panning);}}},/**\n         * On mouse up or touch end across the entire document, drop the selection.\n         */drop:function(e){var pointer=this,chart=this.chart,hasPinched=this.hasPinched;if(this.selectionMarker){var selectionData={originalEvent:e,// #4890\nxAxis:[],yAxis:[]},selectionBox=this.selectionMarker,selectionLeft=selectionBox.attr?selectionBox.attr('x'):selectionBox.x,selectionTop=selectionBox.attr?selectionBox.attr('y'):selectionBox.y,selectionWidth=selectionBox.attr?selectionBox.attr('width'):selectionBox.width,selectionHeight=selectionBox.attr?selectionBox.attr('height'):selectionBox.height,runZoom;// a selection has been made\nif(this.hasDragged||hasPinched){// record each axis' min and max\neach(chart.axes,function(axis){if(axis.zoomEnabled&&defined(axis.min)&&(hasPinched||pointer[{xAxis:'zoomX',yAxis:'zoomY'}[axis.coll]])){// #859, #3569\nvar horiz=axis.horiz,minPixelPadding=e.type==='touchend'?axis.minPixelPadding:0,// #1207, #3075\nselectionMin=axis.toValue((horiz?selectionLeft:selectionTop)+minPixelPadding),selectionMax=axis.toValue((horiz?selectionLeft+selectionWidth:selectionTop+selectionHeight)-minPixelPadding);selectionData[axis.coll].push({axis:axis,min:mathMin(selectionMin,selectionMax),// for reversed axes\nmax:mathMax(selectionMin,selectionMax)});runZoom=true;}});if(runZoom){fireEvent(chart,'selection',selectionData,function(args){chart.zoom(extend(args,hasPinched?{animation:false}:null));});}}this.selectionMarker=this.selectionMarker.destroy();// Reset scaling preview\nif(hasPinched){this.scaleGroups();}}// Reset all\nif(chart){// it may be destroyed on mouse up - #877\ncss(chart.container,{cursor:chart._cursor});chart.cancelClick=this.hasDragged>10;// #370\nchart.mouseIsDown=this.hasDragged=this.hasPinched=false;this.pinchDown=[];}},onContainerMouseDown:function(e){e=this.normalize(e);// issue #295, dragging not always working in Firefox\nif(e.preventDefault){e.preventDefault();}this.dragStart(e);},onDocumentMouseUp:function(e){if(charts[hoverChartIndex]){charts[hoverChartIndex].pointer.drop(e);}},/**\n         * Special handler for mouse move that will hide the tooltip when the mouse leaves the plotarea.\n         * Issue #149 workaround. The mouseleave event does not always fire.\n         */onDocumentMouseMove:function(e){var chart=this.chart,chartPosition=this.chartPosition;e=this.normalize(e,chartPosition);// If we're outside, hide the tooltip\nif(chartPosition&&!this.inClass(e.target,'highcharts-tracker')&&!chart.isInsidePlot(e.chartX-chart.plotLeft,e.chartY-chart.plotTop)){this.reset();}},/**\n         * When mouse leaves the container, hide the tooltip.\n         */onContainerMouseLeave:function(e){var chart=charts[hoverChartIndex];if(chart&&(e.relatedTarget||e.toElement)){// #4886, MS Touch end fires mouseleave but with no related target\nchart.pointer.reset();chart.pointer.chartPosition=null;// also reset the chart position, used in #149 fix\n}},// The mousemove, touchmove and touchstart event handler\nonContainerMouseMove:function(e){var chart=this.chart;if(!defined(hoverChartIndex)||!charts[hoverChartIndex]||!charts[hoverChartIndex].mouseIsDown){hoverChartIndex=chart.index;}e=this.normalize(e);e.returnValue=false;// #2251, #3224\nif(chart.mouseIsDown==='mousedown'){this.drag(e);}// Show the tooltip and run mouse over events (#977)\nif((this.inClass(e.target,'highcharts-tracker')||chart.isInsidePlot(e.chartX-chart.plotLeft,e.chartY-chart.plotTop))&&!chart.openMenu){this.runPointActions(e);}},/**\n         * Utility to detect whether an element has, or has a parent with, a specific\n         * class name. Used on detection of tracker objects and on deciding whether\n         * hovering the tooltip should cause the active series to mouse out.\n         */inClass:function(element,className){var elemClassName;while(element){elemClassName=attr(element,'class');if(elemClassName){if(elemClassName.indexOf(className)!==-1){return true;}if(elemClassName.indexOf(PREFIX+'container')!==-1){return false;}}element=element.parentNode;}},onTrackerMouseOut:function(e){var series=this.chart.hoverSeries,relatedTarget=e.relatedTarget||e.toElement;if(series&&relatedTarget&&!series.options.stickyTracking&&// #4886\n!this.inClass(relatedTarget,PREFIX+'tooltip')&&!this.inClass(relatedTarget,PREFIX+'series-'+series.index)){// #2499, #4465\nseries.onMouseOut();}},onContainerClick:function(e){var chart=this.chart,hoverPoint=chart.hoverPoint,plotLeft=chart.plotLeft,plotTop=chart.plotTop;e=this.normalize(e);if(!chart.cancelClick){// On tracker click, fire the series and point events. #783, #1583\nif(hoverPoint&&this.inClass(e.target,PREFIX+'tracker')){// the series click event\nfireEvent(hoverPoint.series,'click',extend(e,{point:hoverPoint}));// the point click event\nif(chart.hoverPoint){// it may be destroyed (#1844)\nhoverPoint.firePointEvent('click',e);}// When clicking outside a tracker, fire a chart event\n}else{extend(e,this.getCoordinates(e));// fire a click event in the chart\nif(chart.isInsidePlot(e.chartX-plotLeft,e.chartY-plotTop)){fireEvent(chart,'click',e);}}}},/**\n         * Set the JS DOM events on the container and document. This method should contain\n         * a one-to-one assignment between methods and their handlers. Any advanced logic should\n         * be moved to the handler reflecting the event's name.\n         */setDOMEvents:function(){var pointer=this,container=pointer.chart.container;container.onmousedown=function(e){pointer.onContainerMouseDown(e);};container.onmousemove=function(e){pointer.onContainerMouseMove(e);};container.onclick=function(e){pointer.onContainerClick(e);};addEvent(container,'mouseleave',pointer.onContainerMouseLeave);if(chartCount===1){addEvent(doc,'mouseup',pointer.onDocumentMouseUp);}if(hasTouch){container.ontouchstart=function(e){pointer.onContainerTouchStart(e);};container.ontouchmove=function(e){pointer.onContainerTouchMove(e);};if(chartCount===1){addEvent(doc,'touchend',pointer.onDocumentTouchEnd);}}},/**\n         * Destroys the Pointer object and disconnects DOM events.\n         */destroy:function(){var prop;removeEvent(this.chart.container,'mouseleave',this.onContainerMouseLeave);if(!chartCount){removeEvent(doc,'mouseup',this.onDocumentMouseUp);removeEvent(doc,'touchend',this.onDocumentTouchEnd);}// memory and CPU leak\nclearInterval(this.tooltipTimeout);for(prop in this){this[prop]=null;}}};/* Support for touch devices */extend(Highcharts.Pointer.prototype,{/**\n         * Run translation operations\n         */pinchTranslate:function(pinchDown,touches,transform,selectionMarker,clip,lastValidTouch){if(this.zoomHor||this.pinchHor){this.pinchTranslateDirection(true,pinchDown,touches,transform,selectionMarker,clip,lastValidTouch);}if(this.zoomVert||this.pinchVert){this.pinchTranslateDirection(false,pinchDown,touches,transform,selectionMarker,clip,lastValidTouch);}},/**\n         * Run translation operations for each direction (horizontal and vertical) independently\n         */pinchTranslateDirection:function(horiz,pinchDown,touches,transform,selectionMarker,clip,lastValidTouch,forcedScale){var chart=this.chart,xy=horiz?'x':'y',XY=horiz?'X':'Y',sChartXY='chart'+XY,wh=horiz?'width':'height',plotLeftTop=chart['plot'+(horiz?'Left':'Top')],selectionWH,selectionXY,clipXY,scale=forcedScale||1,inverted=chart.inverted,bounds=chart.bounds[horiz?'h':'v'],singleTouch=pinchDown.length===1,touch0Start=pinchDown[0][sChartXY],touch0Now=touches[0][sChartXY],touch1Start=!singleTouch&&pinchDown[1][sChartXY],touch1Now=!singleTouch&&touches[1][sChartXY],outOfBounds,transformScale,scaleKey,setScale=function(){if(!singleTouch&&mathAbs(touch0Start-touch1Start)>20){// Don't zoom if fingers are too close on this axis\nscale=forcedScale||mathAbs(touch0Now-touch1Now)/mathAbs(touch0Start-touch1Start);}clipXY=(plotLeftTop-touch0Now)/scale+touch0Start;selectionWH=chart['plot'+(horiz?'Width':'Height')]/scale;};// Set the scale, first pass\nsetScale();selectionXY=clipXY;// the clip position (x or y) is altered if out of bounds, the selection position is not\n// Out of bounds\nif(selectionXY<bounds.min){selectionXY=bounds.min;outOfBounds=true;}else if(selectionXY+selectionWH>bounds.max){selectionXY=bounds.max-selectionWH;outOfBounds=true;}// Is the chart dragged off its bounds, determined by dataMin and dataMax?\nif(outOfBounds){// Modify the touchNow position in order to create an elastic drag movement. This indicates\n// to the user that the chart is responsive but can't be dragged further.\ntouch0Now-=0.8*(touch0Now-lastValidTouch[xy][0]);if(!singleTouch){touch1Now-=0.8*(touch1Now-lastValidTouch[xy][1]);}// Set the scale, second pass to adapt to the modified touchNow positions\nsetScale();}else{lastValidTouch[xy]=[touch0Now,touch1Now];}// Set geometry for clipping, selection and transformation\nif(!inverted){clip[xy]=clipXY-plotLeftTop;clip[wh]=selectionWH;}scaleKey=inverted?horiz?'scaleY':'scaleX':'scale'+XY;transformScale=inverted?1/scale:scale;selectionMarker[wh]=selectionWH;selectionMarker[xy]=selectionXY;transform[scaleKey]=scale;transform['translate'+XY]=transformScale*plotLeftTop+(touch0Now-transformScale*touch0Start);},/**\n         * Handle touch events with two touches\n         */pinch:function(e){var self=this,chart=self.chart,pinchDown=self.pinchDown,touches=e.touches,touchesLength=touches.length,lastValidTouch=self.lastValidTouch,hasZoom=self.hasZoom,selectionMarker=self.selectionMarker,transform={},fireClickEvent=touchesLength===1&&(self.inClass(e.target,PREFIX+'tracker')&&chart.runTrackerClick||self.runChartClick),clip={};// Don't initiate panning until the user has pinched. This prevents us from\n// blocking page scrolling as users scroll down a long page (#4210).\nif(touchesLength>1){self.initiated=true;}// On touch devices, only proceed to trigger click if a handler is defined\nif(hasZoom&&self.initiated&&!fireClickEvent){e.preventDefault();}// Normalize each touch\nmap(touches,function(e){return self.normalize(e);});// Register the touch start position\nif(e.type==='touchstart'){each(touches,function(e,i){pinchDown[i]={chartX:e.chartX,chartY:e.chartY};});lastValidTouch.x=[pinchDown[0].chartX,pinchDown[1]&&pinchDown[1].chartX];lastValidTouch.y=[pinchDown[0].chartY,pinchDown[1]&&pinchDown[1].chartY];// Identify the data bounds in pixels\neach(chart.axes,function(axis){if(axis.zoomEnabled){var bounds=chart.bounds[axis.horiz?'h':'v'],minPixelPadding=axis.minPixelPadding,min=axis.toPixels(pick(axis.options.min,axis.dataMin)),max=axis.toPixels(pick(axis.options.max,axis.dataMax)),absMin=mathMin(min,max),absMax=mathMax(min,max);// Store the bounds for use in the touchmove handler\nbounds.min=mathMin(axis.pos,absMin-minPixelPadding);bounds.max=mathMax(axis.pos+axis.len,absMax+minPixelPadding);}});self.res=true;// reset on next move\n// Event type is touchmove, handle panning and pinching\n}else if(pinchDown.length){// can be 0 when releasing, if touchend fires first\n// Set the marker\nif(!selectionMarker){self.selectionMarker=selectionMarker=extend({destroy:noop,touch:true},chart.plotBox);}self.pinchTranslate(pinchDown,touches,transform,selectionMarker,clip,lastValidTouch);self.hasPinched=hasZoom;// Scale and translate the groups to provide visual feedback during pinching\nself.scaleGroups(transform,clip);// Optionally move the tooltip on touchmove\nif(!hasZoom&&self.followTouchMove&&touchesLength===1){this.runPointActions(self.normalize(e));}else if(self.res){self.res=false;this.reset(false,0);}}},/**\n         * General touch handler shared by touchstart and touchmove.\n         */touch:function(e,start){var chart=this.chart,hasMoved,pinchDown;hoverChartIndex=chart.index;if(e.touches.length===1){e=this.normalize(e);if(chart.isInsidePlot(e.chartX-chart.plotLeft,e.chartY-chart.plotTop)&&!chart.openMenu){// Run mouse events and display tooltip etc\nif(start){this.runPointActions(e);}// Android fires touchmove events after the touchstart even if the\n// finger hasn't moved, or moved only a pixel or two. In iOS however,\n// the touchmove doesn't fire unless the finger moves more than ~4px.\n// So we emulate this behaviour in Android by checking how much it\n// moved, and cancelling on small distances. #3450.\nif(e.type==='touchmove'){pinchDown=this.pinchDown;hasMoved=pinchDown[0]?Math.sqrt(// #5266\nMath.pow(pinchDown[0].chartX-e.chartX,2)+Math.pow(pinchDown[0].chartY-e.chartY,2))>=4:false;}if(pick(hasMoved,true)){this.pinch(e);}}else if(start){// Hide the tooltip on touching outside the plot area (#1203)\nthis.reset();}}else if(e.touches.length===2){this.pinch(e);}},onContainerTouchStart:function(e){this.touch(e,true);},onContainerTouchMove:function(e){this.touch(e);},onDocumentTouchEnd:function(e){if(charts[hoverChartIndex]){charts[hoverChartIndex].pointer.drop(e);}}});if(win.PointerEvent||win.MSPointerEvent){// The touches object keeps track of the points being touched at all times\nvar touches={},hasPointerEvent=!!win.PointerEvent,getWebkitTouches=function(){var key,fake=[];fake.item=function(i){return this[i];};for(key in touches){if(touches.hasOwnProperty(key)){fake.push({pageX:touches[key].pageX,pageY:touches[key].pageY,target:touches[key].target});}}return fake;},translateMSPointer=function(e,method,wktype,func){var p;if((e.pointerType==='touch'||e.pointerType===e.MSPOINTER_TYPE_TOUCH)&&charts[hoverChartIndex]){func(e);p=charts[hoverChartIndex].pointer;p[method]({type:wktype,target:e.currentTarget,preventDefault:noop,touches:getWebkitTouches()});}};/**\n         * Extend the Pointer prototype with methods for each event handler and more\n         */extend(Pointer.prototype,{onContainerPointerDown:function(e){translateMSPointer(e,'onContainerTouchStart','touchstart',function(e){touches[e.pointerId]={pageX:e.pageX,pageY:e.pageY,target:e.currentTarget};});},onContainerPointerMove:function(e){translateMSPointer(e,'onContainerTouchMove','touchmove',function(e){touches[e.pointerId]={pageX:e.pageX,pageY:e.pageY};if(!touches[e.pointerId].target){touches[e.pointerId].target=e.currentTarget;}});},onDocumentPointerUp:function(e){translateMSPointer(e,'onDocumentTouchEnd','touchend',function(e){delete touches[e.pointerId];});},/**\n             * Add or remove the MS Pointer specific events\n             */batchMSEvents:function(fn){fn(this.chart.container,hasPointerEvent?'pointerdown':'MSPointerDown',this.onContainerPointerDown);fn(this.chart.container,hasPointerEvent?'pointermove':'MSPointerMove',this.onContainerPointerMove);fn(doc,hasPointerEvent?'pointerup':'MSPointerUp',this.onDocumentPointerUp);}});// Disable default IE actions for pinch and such on chart element\nwrap(Pointer.prototype,'init',function(proceed,chart,options){proceed.call(this,chart,options);if(this.hasZoom){// #4014\ncss(chart.container,{'-ms-touch-action':NONE,'touch-action':NONE});}});// Add IE specific touch events to chart\nwrap(Pointer.prototype,'setDOMEvents',function(proceed){proceed.apply(this);if(this.hasZoom||this.followTouchMove){this.batchMSEvents(addEvent);}});// Destroy MS events also\nwrap(Pointer.prototype,'destroy',function(proceed){this.batchMSEvents(removeEvent);proceed.call(this);});}/**\n     * The overview of the chart's series\n     */var Legend=Highcharts.Legend=function(chart,options){this.init(chart,options);};Legend.prototype={/**\n         * Initialize the legend\n         */init:function(chart,options){var legend=this,itemStyle=options.itemStyle,padding,itemMarginTop=options.itemMarginTop||0;this.options=options;if(!options.enabled){return;}legend.itemStyle=itemStyle;legend.itemHiddenStyle=merge(itemStyle,options.itemHiddenStyle);legend.itemMarginTop=itemMarginTop;legend.padding=padding=pick(options.padding,8);legend.initialItemX=padding;legend.initialItemY=padding-5;// 5 is the number of pixels above the text\nlegend.maxItemWidth=0;legend.chart=chart;legend.itemHeight=0;legend.symbolWidth=pick(options.symbolWidth,16);legend.pages=[];// Render it\nlegend.render();// move checkboxes\naddEvent(legend.chart,'endResize',function(){legend.positionCheckboxes();});},/**\n         * Set the colors for the legend item\n         * @param {Object} item A Series or Point instance\n         * @param {Object} visible Dimmed or colored\n         */colorizeItem:function(item,visible){var legend=this,options=legend.options,legendItem=item.legendItem,legendLine=item.legendLine,legendSymbol=item.legendSymbol,hiddenColor=legend.itemHiddenStyle.color,textColor=visible?options.itemStyle.color:hiddenColor,symbolColor=visible?item.legendColor||item.color||'#CCC':hiddenColor,markerOptions=item.options&&item.options.marker,symbolAttr={fill:symbolColor},key,val;if(legendItem){legendItem.css({fill:textColor,color:textColor});// color for #1553, oldIE\n}if(legendLine){legendLine.attr({stroke:symbolColor});}if(legendSymbol){// Apply marker options\nif(markerOptions&&legendSymbol.isMarker){// #585\nsymbolAttr.stroke=symbolColor;markerOptions=item.convertAttribs(markerOptions);for(key in markerOptions){val=markerOptions[key];if(val!==UNDEFINED){symbolAttr[key]=val;}}}legendSymbol.attr(symbolAttr);}},/**\n         * Position the legend item\n         * @param {Object} item A Series or Point instance\n         */positionItem:function(item){var legend=this,options=legend.options,symbolPadding=options.symbolPadding,ltr=!options.rtl,legendItemPos=item._legendItemPos,itemX=legendItemPos[0],itemY=legendItemPos[1],checkbox=item.checkbox,legendGroup=item.legendGroup;if(legendGroup&&legendGroup.element){legendGroup.translate(ltr?itemX:legend.legendWidth-itemX-2*symbolPadding-4,itemY);}if(checkbox){checkbox.x=itemX;checkbox.y=itemY;}},/**\n         * Destroy a single legend item\n         * @param {Object} item The series or point\n         */destroyItem:function(item){var checkbox=item.checkbox;// destroy SVG elements\neach(['legendItem','legendLine','legendSymbol','legendGroup'],function(key){if(item[key]){item[key]=item[key].destroy();}});if(checkbox){discardElement(item.checkbox);}},/**\n         * Destroys the legend.\n         */destroy:function(){var legend=this,legendGroup=legend.group,box=legend.box;if(box){legend.box=box.destroy();}if(legendGroup){legend.group=legendGroup.destroy();}},/**\n         * Position the checkboxes after the width is determined\n         */positionCheckboxes:function(scrollOffset){var alignAttr=this.group.alignAttr,translateY,clipHeight=this.clipHeight||this.legendHeight,titleHeight=this.titleHeight;if(alignAttr){translateY=alignAttr.translateY;each(this.allItems,function(item){var checkbox=item.checkbox,top;if(checkbox){top=translateY+titleHeight+checkbox.y+(scrollOffset||0)+3;css(checkbox,{left:alignAttr.translateX+item.checkboxOffset+checkbox.x-20+PX,top:top+PX,display:top>translateY-6&&top<translateY+clipHeight-6?'':NONE});}});}},/**\n         * Render the legend title on top of the legend\n         */renderTitle:function(){var options=this.options,padding=this.padding,titleOptions=options.title,titleHeight=0,bBox;if(titleOptions.text){if(!this.title){this.title=this.chart.renderer.label(titleOptions.text,padding-3,padding-4,null,null,null,null,null,'legend-title').attr({zIndex:1}).css(titleOptions.style).add(this.group);}bBox=this.title.getBBox();titleHeight=bBox.height;this.offsetWidth=bBox.width;// #1717\nthis.contentGroup.attr({translateY:titleHeight});}this.titleHeight=titleHeight;},/**\n         * Set the legend item text\n         */setText:function(item){var options=this.options;item.legendItem.attr({text:options.labelFormat?format(options.labelFormat,item):options.labelFormatter.call(item)});},/**\n         * Render a single specific legend item\n         * @param {Object} item A series or point\n         */renderItem:function(item){var legend=this,chart=legend.chart,renderer=chart.renderer,options=legend.options,horizontal=options.layout==='horizontal',symbolWidth=legend.symbolWidth,symbolPadding=options.symbolPadding,itemStyle=legend.itemStyle,itemHiddenStyle=legend.itemHiddenStyle,padding=legend.padding,itemDistance=horizontal?pick(options.itemDistance,20):0,ltr=!options.rtl,itemHeight,widthOption=options.width,itemMarginBottom=options.itemMarginBottom||0,itemMarginTop=legend.itemMarginTop,initialItemX=legend.initialItemX,bBox,itemWidth,li=item.legendItem,series=item.series&&item.series.drawLegendSymbol?item.series:item,seriesOptions=series.options,showCheckbox=legend.createCheckboxForItem&&seriesOptions&&seriesOptions.showCheckbox,useHTML=options.useHTML;if(!li){// generate it once, later move it\n// Generate the group box\n// A group to hold the symbol and text. Text is to be appended in Legend class.\nitem.legendGroup=renderer.g('legend-item').attr({zIndex:1}).add(legend.scrollGroup);// Generate the list item text and add it to the group\nitem.legendItem=li=renderer.text('',ltr?symbolWidth+symbolPadding:-symbolPadding,legend.baseline||0,useHTML).css(merge(item.visible?itemStyle:itemHiddenStyle))// merge to prevent modifying original (#1021)\n.attr({align:ltr?'left':'right',zIndex:2}).add(item.legendGroup);// Get the baseline for the first item - the font size is equal for all\nif(!legend.baseline){legend.fontMetrics=renderer.fontMetrics(itemStyle.fontSize,li);legend.baseline=legend.fontMetrics.f+3+itemMarginTop;li.attr('y',legend.baseline);}// Draw the legend symbol inside the group box\nseries.drawLegendSymbol(legend,item);if(legend.setItemEvents){legend.setItemEvents(item,li,useHTML,itemStyle,itemHiddenStyle);}// add the HTML checkbox on top\nif(showCheckbox){legend.createCheckboxForItem(item);}}// Colorize the items\nlegend.colorizeItem(item,item.visible);// Always update the text\nlegend.setText(item);// calculate the positions for the next line\nbBox=li.getBBox();itemWidth=item.checkboxOffset=options.itemWidth||item.legendItemWidth||symbolWidth+symbolPadding+bBox.width+itemDistance+(showCheckbox?20:0);legend.itemHeight=itemHeight=mathRound(item.legendItemHeight||bBox.height);// if the item exceeds the width, start a new line\nif(horizontal&&legend.itemX-initialItemX+itemWidth>(widthOption||chart.chartWidth-2*padding-initialItemX-options.x)){legend.itemX=initialItemX;legend.itemY+=itemMarginTop+legend.lastLineHeight+itemMarginBottom;legend.lastLineHeight=0;// reset for next line (#915, #3976)\n}// If the item exceeds the height, start a new column\n/*if (!horizontal && legend.itemY + options.y + itemHeight > chart.chartHeight - spacingTop - spacingBottom) {\n                legend.itemY = legend.initialItemY;\n                legend.itemX += legend.maxItemWidth;\n                legend.maxItemWidth = 0;\n            }*/ // Set the edge positions\nlegend.maxItemWidth=mathMax(legend.maxItemWidth,itemWidth);legend.lastItemY=itemMarginTop+legend.itemY+itemMarginBottom;legend.lastLineHeight=mathMax(itemHeight,legend.lastLineHeight);// #915\n// cache the position of the newly generated or reordered items\nitem._legendItemPos=[legend.itemX,legend.itemY];// advance\nif(horizontal){legend.itemX+=itemWidth;}else{legend.itemY+=itemMarginTop+itemHeight+itemMarginBottom;legend.lastLineHeight=itemHeight;}// the width of the widest item\nlegend.offsetWidth=widthOption||mathMax((horizontal?legend.itemX-initialItemX-itemDistance:itemWidth)+padding,legend.offsetWidth);},/**\n         * Get all items, which is one item per series for normal series and one item per point\n         * for pie series.\n         */getAllItems:function(){var allItems=[];each(this.chart.series,function(series){var seriesOptions=series.options;// Handle showInLegend. If the series is linked to another series, defaults to false.\nif(!pick(seriesOptions.showInLegend,!defined(seriesOptions.linkedTo)?UNDEFINED:false,true)){return;}// use points or series for the legend item depending on legendType\nallItems=allItems.concat(series.legendItems||(seriesOptions.legendType==='point'?series.data:series));});return allItems;},/**\n         * Adjust the chart margins by reserving space for the legend on only one side\n         * of the chart. If the position is set to a corner, top or bottom is reserved\n         * for horizontal legends and left or right for vertical ones.\n         */adjustMargins:function(margin,spacing){var chart=this.chart,options=this.options,// Use the first letter of each alignment option in order to detect the side\nalignment=options.align.charAt(0)+options.verticalAlign.charAt(0)+options.layout.charAt(0);// #4189 - use charAt(x) notation instead of [x] for IE7\nif(this.display&&!options.floating){each([/(lth|ct|rth)/,/(rtv|rm|rbv)/,/(rbh|cb|lbh)/,/(lbv|lm|ltv)/],function(alignments,side){if(alignments.test(alignment)&&!defined(margin[side])){// Now we have detected on which side of the chart we should reserve space for the legend\nchart[marginNames[side]]=mathMax(chart[marginNames[side]],chart.legend[(side+1)%2?'legendHeight':'legendWidth']+[1,-1,-1,1][side]*options[side%2?'x':'y']+pick(options.margin,12)+spacing[side]);}});}},/**\n         * Render the legend. This method can be called both before and after\n         * chart.render. If called after, it will only rearrange items instead\n         * of creating new ones.\n         */render:function(){var legend=this,chart=legend.chart,renderer=chart.renderer,legendGroup=legend.group,allItems,display,legendWidth,legendHeight,box=legend.box,options=legend.options,padding=legend.padding,legendBorderWidth=options.borderWidth,legendBackgroundColor=options.backgroundColor;legend.itemX=legend.initialItemX;legend.itemY=legend.initialItemY;legend.offsetWidth=0;legend.lastItemY=0;if(!legendGroup){legend.group=legendGroup=renderer.g('legend').attr({zIndex:7}).add();legend.contentGroup=renderer.g().attr({zIndex:1})// above background\n.add(legendGroup);legend.scrollGroup=renderer.g().add(legend.contentGroup);}legend.renderTitle();// add each series or point\nallItems=legend.getAllItems();// sort by legendIndex\nstableSort(allItems,function(a,b){return(a.options&&a.options.legendIndex||0)-(b.options&&b.options.legendIndex||0);});// reversed legend\nif(options.reversed){allItems.reverse();}legend.allItems=allItems;legend.display=display=!!allItems.length;// render the items\nlegend.lastLineHeight=0;each(allItems,function(item){legend.renderItem(item);});// Get the box\nlegendWidth=(options.width||legend.offsetWidth)+padding;legendHeight=legend.lastItemY+legend.lastLineHeight+legend.titleHeight;legendHeight=legend.handleOverflow(legendHeight);legendHeight+=padding;// Draw the border and/or background\nif(legendBorderWidth||legendBackgroundColor){if(!box){legend.box=box=renderer.rect(0,0,legendWidth,legendHeight,options.borderRadius,legendBorderWidth||0).attr({stroke:options.borderColor,'stroke-width':legendBorderWidth||0,fill:legendBackgroundColor||NONE}).add(legendGroup).shadow(options.shadow);box.isNew=true;}else if(legendWidth>0&&legendHeight>0){box[box.isNew?'attr':'animate'](box.crisp({width:legendWidth,height:legendHeight}));box.isNew=false;}// hide the border if no items\nbox[display?'show':'hide']();}legend.legendWidth=legendWidth;legend.legendHeight=legendHeight;// Now that the legend width and height are established, put the items in the\n// final position\neach(allItems,function(item){legend.positionItem(item);});// 1.x compatibility: positioning based on style\n/*var props = ['left', 'right', 'top', 'bottom'],\n                prop,\n                i = 4;\n            while (i--) {\n                prop = props[i];\n                if (options.style[prop] && options.style[prop] !== 'auto') {\n                    options[i < 2 ? 'align' : 'verticalAlign'] = prop;\n                    options[i < 2 ? 'x' : 'y'] = pInt(options.style[prop]) * (i % 2 ? -1 : 1);\n                }\n            }*/if(display){legendGroup.align(extend({width:legendWidth,height:legendHeight},options),true,'spacingBox');}if(!chart.isResizing){this.positionCheckboxes();}},/**\n         * Set up the overflow handling by adding navigation with up and down arrows below the\n         * legend.\n         */handleOverflow:function(legendHeight){var legend=this,chart=this.chart,renderer=chart.renderer,options=this.options,optionsY=options.y,alignTop=options.verticalAlign==='top',spaceHeight=chart.spacingBox.height+(alignTop?-optionsY:optionsY)-this.padding,maxHeight=options.maxHeight,clipHeight,clipRect=this.clipRect,navOptions=options.navigation,animation=pick(navOptions.animation,true),arrowSize=navOptions.arrowSize||12,nav=this.nav,pages=this.pages,padding=this.padding,lastY,allItems=this.allItems,clipToHeight=function(height){clipRect.attr({height:height});// useHTML\nif(legend.contentGroup.div){legend.contentGroup.div.style.clip='rect('+padding+'px,9999px,'+(padding+height)+'px,0)';}};// Adjust the height\nif(options.layout==='horizontal'){spaceHeight/=2;}if(maxHeight){spaceHeight=mathMin(spaceHeight,maxHeight);}// Reset the legend height and adjust the clipping rectangle\npages.length=0;if(legendHeight>spaceHeight&&navOptions.enabled!==false){this.clipHeight=clipHeight=mathMax(spaceHeight-20-this.titleHeight-padding,0);this.currentPage=pick(this.currentPage,1);this.fullHeight=legendHeight;// Fill pages with Y positions so that the top of each a legend item defines\n// the scroll top for each page (#2098)\neach(allItems,function(item,i){var y=item._legendItemPos[1],h=mathRound(item.legendItem.getBBox().height),len=pages.length;if(!len||y-pages[len-1]>clipHeight&&(lastY||y)!==pages[len-1]){pages.push(lastY||y);len++;}if(i===allItems.length-1&&y+h-pages[len-1]>clipHeight){pages.push(y);}if(y!==lastY){lastY=y;}});// Only apply clipping if needed. Clipping causes blurred legend in PDF export (#1787)\nif(!clipRect){clipRect=legend.clipRect=renderer.clipRect(0,padding,9999,0);legend.contentGroup.clip(clipRect);}clipToHeight(clipHeight);// Add navigation elements\nif(!nav){this.nav=nav=renderer.g().attr({zIndex:1}).add(this.group);this.up=renderer.symbol('triangle',0,0,arrowSize,arrowSize).on('click',function(){legend.scroll(-1,animation);}).add(nav);this.pager=renderer.text('',15,10).css(navOptions.style).add(nav);this.down=renderer.symbol('triangle-down',0,0,arrowSize,arrowSize).on('click',function(){legend.scroll(1,animation);}).add(nav);}// Set initial position\nlegend.scroll(0);legendHeight=spaceHeight;}else if(nav){clipToHeight(chart.chartHeight);nav.hide();this.scrollGroup.attr({translateY:1});this.clipHeight=0;// #1379\n}return legendHeight;},/**\n         * Scroll the legend by a number of pages\n         * @param {Object} scrollBy\n         * @param {Object} animation\n         */scroll:function(scrollBy,animation){var pages=this.pages,pageCount=pages.length,currentPage=this.currentPage+scrollBy,clipHeight=this.clipHeight,navOptions=this.options.navigation,activeColor=navOptions.activeColor,inactiveColor=navOptions.inactiveColor,pager=this.pager,padding=this.padding,scrollOffset;// When resizing while looking at the last page\nif(currentPage>pageCount){currentPage=pageCount;}if(currentPage>0){if(animation!==UNDEFINED){setAnimation(animation,this.chart);}this.nav.attr({translateX:padding,translateY:clipHeight+this.padding+7+this.titleHeight,visibility:VISIBLE});this.up.attr({fill:currentPage===1?inactiveColor:activeColor}).css({cursor:currentPage===1?'default':'pointer'});pager.attr({text:currentPage+'/'+pageCount});this.down.attr({x:18+this.pager.getBBox().width,// adjust to text width\nfill:currentPage===pageCount?inactiveColor:activeColor}).css({cursor:currentPage===pageCount?'default':'pointer'});scrollOffset=-pages[currentPage-1]+this.initialItemY;this.scrollGroup.animate({translateY:scrollOffset});this.currentPage=currentPage;this.positionCheckboxes(scrollOffset);}}};/*\n     * LegendSymbolMixin\n     */var LegendSymbolMixin=Highcharts.LegendSymbolMixin={/**\n         * Get the series' symbol in the legend\n         *\n         * @param {Object} legend The legend object\n         * @param {Object} item The series (this) or point\n         */drawRectangle:function(legend,item){var symbolHeight=legend.options.symbolHeight||legend.fontMetrics.f;item.legendSymbol=this.chart.renderer.rect(0,legend.baseline-symbolHeight+1,// #3988\nlegend.symbolWidth,symbolHeight,legend.options.symbolRadius||0).attr({zIndex:3}).add(item.legendGroup);},/**\n         * Get the series' symbol in the legend. This method should be overridable to create custom\n         * symbols through Highcharts.seriesTypes[type].prototype.drawLegendSymbols.\n         *\n         * @param {Object} legend The legend object\n         */drawLineMarker:function(legend){var options=this.options,markerOptions=options.marker,radius,legendSymbol,symbolWidth=legend.symbolWidth,renderer=this.chart.renderer,legendItemGroup=this.legendGroup,verticalCenter=legend.baseline-mathRound(legend.fontMetrics.b*0.3),attr;// Draw the line\nif(options.lineWidth){attr={'stroke-width':options.lineWidth};if(options.dashStyle){attr.dashstyle=options.dashStyle;}this.legendLine=renderer.path([M,0,verticalCenter,L,symbolWidth,verticalCenter]).attr(attr).add(legendItemGroup);}// Draw the marker\nif(markerOptions&&markerOptions.enabled!==false){radius=markerOptions.radius;this.legendSymbol=legendSymbol=renderer.symbol(this.symbol,symbolWidth/2-radius,verticalCenter-radius,2*radius,2*radius,markerOptions).add(legendItemGroup);legendSymbol.isMarker=true;}}};// Workaround for #2030, horizontal legend items not displaying in IE11 Preview,\n// and for #2580, a similar drawing flaw in Firefox 26.\n// Explore if there's a general cause for this. The problem may be related\n// to nested group elements, as the legend item texts are within 4 group elements.\nif(/Trident\\/7\\.0/.test(userAgent)||isFirefox){wrap(Legend.prototype,'positionItem',function(proceed,item){var legend=this,runPositionItem=function(){// If chart destroyed in sync, this is undefined (#2030)\nif(item._legendItemPos){proceed.call(legend,item);}};// Do it now, for export and to get checkbox placement\nrunPositionItem();// Do it after to work around the core issue\nsetTimeout(runPositionItem);});}/**\n     * The Chart class\n     * @param {String|Object} renderTo The DOM element to render to, or its id\n     * @param {Object} options\n     * @param {Function} callback Function to run when the chart has loaded\n     */var Chart=Highcharts.Chart=function(){this.getArgs.apply(this,arguments);};Highcharts.chart=function(a,b,c){return new Chart(a,b,c);};Chart.prototype={/**\n         * Hook for modules\n         */callbacks:[],/**\n         * Handle the arguments passed to the constructor\n         * @returns {Array} Arguments without renderTo\n         */getArgs:function(){var args=[].slice.call(arguments);// Remove the optional first argument, renderTo, and\n// set it on this.\nif(isString(args[0])||args[0].nodeName){this.renderTo=args.shift();}this.init(args[0],args[1]);},/**\n         * Initialize the chart\n         */init:function(userOptions,callback){// Handle regular options\nvar options,seriesOptions=userOptions.series;// skip merging data points to increase performance\nuserOptions.series=null;options=merge(defaultOptions,userOptions);// do the merge\noptions.series=userOptions.series=seriesOptions;// set back the series data\nthis.userOptions=userOptions;var optionsChart=options.chart;// Create margin & spacing array\nthis.margin=this.splashArray('margin',optionsChart);this.spacing=this.splashArray('spacing',optionsChart);var chartEvents=optionsChart.events;//this.runChartClick = chartEvents && !!chartEvents.click;\nthis.bounds={h:{},v:{}};// Pixel data bounds for touch zoom\nthis.callback=callback;this.isResizing=0;this.options=options;//chartTitleOptions = UNDEFINED;\n//chartSubtitleOptions = UNDEFINED;\nthis.axes=[];this.series=[];this.hasCartesianSeries=optionsChart.showAxes;//this.axisOffset = UNDEFINED;\n//this.maxTicks = UNDEFINED; // handle the greatest amount of ticks on grouped axes\n//this.inverted = UNDEFINED;\n//this.loadingShown = UNDEFINED;\n//this.container = UNDEFINED;\n//this.chartWidth = UNDEFINED;\n//this.chartHeight = UNDEFINED;\n//this.marginRight = UNDEFINED;\n//this.marginBottom = UNDEFINED;\n//this.containerWidth = UNDEFINED;\n//this.containerHeight = UNDEFINED;\n//this.oldChartWidth = UNDEFINED;\n//this.oldChartHeight = UNDEFINED;\n//this.renderTo = UNDEFINED;\n//this.renderToClone = UNDEFINED;\n//this.spacingBox = UNDEFINED\n//this.legend = UNDEFINED;\n// Elements\n//this.chartBackground = UNDEFINED;\n//this.plotBackground = UNDEFINED;\n//this.plotBGImage = UNDEFINED;\n//this.plotBorder = UNDEFINED;\n//this.loadingDiv = UNDEFINED;\n//this.loadingSpan = UNDEFINED;\nvar chart=this,eventType;// Add the chart to the global lookup\nchart.index=charts.length;charts.push(chart);chartCount++;// Set up auto resize\nif(optionsChart.reflow!==false){addEvent(chart,'load',function(){chart.initReflow();});}// Chart event handlers\nif(chartEvents){for(eventType in chartEvents){addEvent(chart,eventType,chartEvents[eventType]);}}chart.xAxis=[];chart.yAxis=[];// Expose methods and variables\nchart.animation=useCanVG?false:pick(optionsChart.animation,true);chart.pointCount=chart.colorCounter=chart.symbolCounter=0;chart.firstRender();},/**\n         * Initialize an individual series, called internally before render time\n         */initSeries:function(options){var chart=this,optionsChart=chart.options.chart,type=options.type||optionsChart.type||optionsChart.defaultSeriesType,series,constr=seriesTypes[type];// No such series type\nif(!constr){error(17,true);}series=new constr();series.init(this,options);return series;},/**\n         * Check whether a given point is within the plot area\n         *\n         * @param {Number} plotX Pixel x relative to the plot area\n         * @param {Number} plotY Pixel y relative to the plot area\n         * @param {Boolean} inverted Whether the chart is inverted\n         */isInsidePlot:function(plotX,plotY,inverted){var x=inverted?plotY:plotX,y=inverted?plotX:plotY;return x>=0&&x<=this.plotWidth&&y>=0&&y<=this.plotHeight;},/**\n         * Redraw legend, axes or series based on updated data\n         *\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */redraw:function(animation){var chart=this,axes=chart.axes,series=chart.series,pointer=chart.pointer,legend=chart.legend,redrawLegend=chart.isDirtyLegend,hasStackedSeries,hasDirtyStacks,hasCartesianSeries=chart.hasCartesianSeries,isDirtyBox=chart.isDirtyBox,seriesLength=series.length,i=seriesLength,serie,renderer=chart.renderer,isHiddenChart=renderer.isHidden(),afterRedraw=[];setAnimation(animation,chart);if(isHiddenChart){chart.cloneRenderTo();}// Adjust title layout (reflow multiline text)\nchart.layOutTitles();// link stacked series\nwhile(i--){serie=series[i];if(serie.options.stacking){hasStackedSeries=true;if(serie.isDirty){hasDirtyStacks=true;break;}}}if(hasDirtyStacks){// mark others as dirty\ni=seriesLength;while(i--){serie=series[i];if(serie.options.stacking){serie.isDirty=true;}}}// Handle updated data in the series\neach(series,function(serie){if(serie.isDirty){if(serie.options.legendType==='point'){if(serie.updateTotals){serie.updateTotals();}redrawLegend=true;}}if(serie.isDirtyData){fireEvent(serie,'updatedData');}});// handle added or removed series\nif(redrawLegend&&legend.options.enabled){// series or pie points are added or removed\n// draw legend graphics\nlegend.render();chart.isDirtyLegend=false;}// reset stacks\nif(hasStackedSeries){chart.getStacks();}if(hasCartesianSeries){if(!chart.isResizing){// reset maxTicks\nchart.maxTicks=null;// set axes scales\neach(axes,function(axis){axis.setScale();});}}chart.getMargins();// #3098\nif(hasCartesianSeries){// If one axis is dirty, all axes must be redrawn (#792, #2169)\neach(axes,function(axis){if(axis.isDirty){isDirtyBox=true;}});// redraw axes\neach(axes,function(axis){// Fire 'afterSetExtremes' only if extremes are set\nvar key=axis.min+','+axis.max;if(axis.extKey!==key){// #821, #4452\naxis.extKey=key;afterRedraw.push(function(){// prevent a recursive call to chart.redraw() (#1119)\nfireEvent(axis,'afterSetExtremes',extend(axis.eventArgs,axis.getExtremes()));// #747, #751\ndelete axis.eventArgs;});}if(isDirtyBox||hasStackedSeries){axis.redraw();}});}// the plot areas size has changed\nif(isDirtyBox){chart.drawChartBox();}// redraw affected series\neach(series,function(serie){if(serie.isDirty&&serie.visible&&(!serie.isCartesian||serie.xAxis)){// issue #153\nserie.redraw();}});// move tooltip or reset\nif(pointer){pointer.reset(true);}// redraw if canvas\nrenderer.draw();// fire the event\nfireEvent(chart,'redraw');if(isHiddenChart){chart.cloneRenderTo(true);}// Fire callbacks that are put on hold until after the redraw\neach(afterRedraw,function(callback){callback.call();});},/**\n         * Get an axis, series or point object by id.\n         * @param id {String} The id as given in the configuration options\n         */get:function(id){var chart=this,axes=chart.axes,series=chart.series;var i,j,points;// search axes\nfor(i=0;i<axes.length;i++){if(axes[i].options.id===id){return axes[i];}}// search series\nfor(i=0;i<series.length;i++){if(series[i].options.id===id){return series[i];}}// search points\nfor(i=0;i<series.length;i++){points=series[i].points||[];for(j=0;j<points.length;j++){if(points[j].id===id){return points[j];}}}return null;},/**\n         * Create the Axis instances based on the config options\n         */getAxes:function(){var chart=this,options=this.options,xAxisOptions=options.xAxis=splat(options.xAxis||{}),yAxisOptions=options.yAxis=splat(options.yAxis||{}),optionsArray;// make sure the options are arrays and add some members\neach(xAxisOptions,function(axis,i){axis.index=i;axis.isX=true;});each(yAxisOptions,function(axis,i){axis.index=i;});// concatenate all axis options into one array\noptionsArray=xAxisOptions.concat(yAxisOptions);each(optionsArray,function(axisOptions){new Axis(chart,axisOptions);// eslint-disable-line no-new\n});},/**\n         * Get the currently selected points from all series\n         */getSelectedPoints:function(){var points=[];each(this.series,function(serie){points=points.concat(grep(serie.points||[],function(point){return point.selected;}));});return points;},/**\n         * Get the currently selected series\n         */getSelectedSeries:function(){return grep(this.series,function(serie){return serie.selected;});},/**\n         * Show the title and subtitle of the chart\n         *\n         * @param titleOptions {Object} New title options\n         * @param subtitleOptions {Object} New subtitle options\n         *\n         */setTitle:function(titleOptions,subtitleOptions,redraw){var chart=this,options=chart.options,chartTitleOptions,chartSubtitleOptions;chartTitleOptions=options.title=merge(options.title,titleOptions);chartSubtitleOptions=options.subtitle=merge(options.subtitle,subtitleOptions);// add title and subtitle\neach([['title',titleOptions,chartTitleOptions],['subtitle',subtitleOptions,chartSubtitleOptions]],function(arr){var name=arr[0],title=chart[name],titleOptions=arr[1],chartTitleOptions=arr[2];if(title&&titleOptions){chart[name]=title=title.destroy();// remove old\n}if(chartTitleOptions&&chartTitleOptions.text&&!title){chart[name]=chart.renderer.text(chartTitleOptions.text,0,0,chartTitleOptions.useHTML).attr({align:chartTitleOptions.align,'class':PREFIX+name,zIndex:chartTitleOptions.zIndex||4}).css(chartTitleOptions.style).add();}});chart.layOutTitles(redraw);},/**\n         * Lay out the chart titles and cache the full offset height for use in getMargins\n         */layOutTitles:function(redraw){var titleOffset=0,title=this.title,subtitle=this.subtitle,options=this.options,titleOptions=options.title,subtitleOptions=options.subtitle,requiresDirtyBox,renderer=this.renderer,spacingBox=this.spacingBox;if(title){title.css({width:(titleOptions.width||spacingBox.width+titleOptions.widthAdjust)+PX}).align(extend({y:renderer.fontMetrics(titleOptions.style.fontSize,title).b-3},titleOptions),false,spacingBox);if(!titleOptions.floating&&!titleOptions.verticalAlign){titleOffset=title.getBBox().height;}}if(subtitle){subtitle.css({width:(subtitleOptions.width||spacingBox.width+subtitleOptions.widthAdjust)+PX}).align(extend({y:titleOffset+(titleOptions.margin-13)+renderer.fontMetrics(subtitleOptions.style.fontSize,title).b},subtitleOptions),false,spacingBox);if(!subtitleOptions.floating&&!subtitleOptions.verticalAlign){titleOffset=mathCeil(titleOffset+subtitle.getBBox().height);}}requiresDirtyBox=this.titleOffset!==titleOffset;this.titleOffset=titleOffset;// used in getMargins\nif(!this.isDirtyBox&&requiresDirtyBox){this.isDirtyBox=requiresDirtyBox;// Redraw if necessary (#2719, #2744)\nif(this.hasRendered&&pick(redraw,true)&&this.isDirtyBox){this.redraw();}}},/**\n         * Get chart width and height according to options and container size\n         */getChartSize:function(){var chart=this,optionsChart=chart.options.chart,widthOption=optionsChart.width,heightOption=optionsChart.height,renderTo=chart.renderToClone||chart.renderTo;// Get inner width and height\nif(!defined(widthOption)){chart.containerWidth=getStyle(renderTo,'width');}if(!defined(heightOption)){chart.containerHeight=getStyle(renderTo,'height');}chart.chartWidth=mathMax(0,widthOption||chart.containerWidth||600);// #1393, 1460\nchart.chartHeight=mathMax(0,pick(heightOption,// the offsetHeight of an empty container is 0 in standard browsers, but 19 in IE7:\nchart.containerHeight>19?chart.containerHeight:400));},/**\n         * Create a clone of the chart's renderTo div and place it outside the viewport to allow\n         * size computation on chart.render and chart.redraw\n         */cloneRenderTo:function(revert){var clone=this.renderToClone,container=this.container;// Destroy the clone and bring the container back to the real renderTo div\nif(revert){if(clone){this.renderTo.appendChild(container);discardElement(clone);delete this.renderToClone;}// Set up the clone\n}else{if(container&&container.parentNode===this.renderTo){this.renderTo.removeChild(container);// do not clone this\n}this.renderToClone=clone=this.renderTo.cloneNode(0);css(clone,{position:ABSOLUTE,top:'-9999px',display:'block'// #833\n});if(clone.style.setProperty){// #2631\nclone.style.setProperty('display','block','important');}doc.body.appendChild(clone);if(container){clone.appendChild(container);}}},/**\n         * Get the containing element, determine the size and create the inner container\n         * div to hold the chart\n         */getContainer:function(){var chart=this,container,options=chart.options,optionsChart=options.chart,chartWidth,chartHeight,renderTo=chart.renderTo,indexAttrName='data-highcharts-chart',oldChartIndex,Ren,containerId='highcharts-'+idCounter++;if(!renderTo){chart.renderTo=renderTo=optionsChart.renderTo;}if(isString(renderTo)){chart.renderTo=renderTo=doc.getElementById(renderTo);}// Display an error if the renderTo is wrong\nif(!renderTo){error(13,true);}// If the container already holds a chart, destroy it. The check for hasRendered is there\n// because web pages that are saved to disk from the browser, will preserve the data-highcharts-chart\n// attribute and the SVG contents, but not an interactive chart. So in this case,\n// charts[oldChartIndex] will point to the wrong chart if any (#2609).\noldChartIndex=pInt(attr(renderTo,indexAttrName));if(isNumber(oldChartIndex)&&charts[oldChartIndex]&&charts[oldChartIndex].hasRendered){charts[oldChartIndex].destroy();}// Make a reference to the chart from the div\nattr(renderTo,indexAttrName,chart.index);// remove previous chart\nrenderTo.innerHTML='';// If the container doesn't have an offsetWidth, it has or is a child of a node\n// that has display:none. We need to temporarily move it out to a visible\n// state to determine the size, else the legend and tooltips won't render\n// properly. The allowClone option is used in sparklines as a micro optimization,\n// saving about 1-2 ms each chart.\nif(!optionsChart.skipClone&&!renderTo.offsetWidth){chart.cloneRenderTo();}// get the width and height\nchart.getChartSize();chartWidth=chart.chartWidth;chartHeight=chart.chartHeight;// create the inner container\nchart.container=container=createElement(DIV,{className:PREFIX+'container'+(optionsChart.className?' '+optionsChart.className:''),id:containerId},extend({position:RELATIVE,overflow:HIDDEN,// needed for context menu (avoid scrollbars) and\n// content overflow in IE\nwidth:chartWidth+PX,height:chartHeight+PX,textAlign:'left',lineHeight:'normal',// #427\nzIndex:0,// #1072\n'-webkit-tap-highlight-color':'rgba(0,0,0,0)'},optionsChart.style),chart.renderToClone||renderTo);// cache the cursor (#1650)\nchart._cursor=container.style.cursor;// Initialize the renderer\nRen=Highcharts[optionsChart.renderer]||Renderer;chart.renderer=new Ren(container,chartWidth,chartHeight,optionsChart.style,optionsChart.forExport,options.exporting&&options.exporting.allowHTML);if(useCanVG){// If we need canvg library, extend and configure the renderer\n// to get the tracker for translating mouse events\nchart.renderer.create(chart,container,chartWidth,chartHeight);}// Add a reference to the charts index\nchart.renderer.chartIndex=chart.index;},/**\n         * Calculate margins by rendering axis labels in a preliminary position. Title,\n         * subtitle and legend have already been rendered at this stage, but will be\n         * moved into their final positions\n         */getMargins:function(skipAxes){var chart=this,spacing=chart.spacing,margin=chart.margin,titleOffset=chart.titleOffset;chart.resetMargins();// Adjust for title and subtitle\nif(titleOffset&&!defined(margin[0])){chart.plotTop=mathMax(chart.plotTop,titleOffset+chart.options.title.margin+spacing[0]);}// Adjust for legend\nchart.legend.adjustMargins(margin,spacing);// adjust for scroller\nif(chart.extraBottomMargin){chart.marginBottom+=chart.extraBottomMargin;}if(chart.extraTopMargin){chart.plotTop+=chart.extraTopMargin;}if(!skipAxes){this.getAxisMargins();}},getAxisMargins:function(){var chart=this,axisOffset=chart.axisOffset=[0,0,0,0],// top, right, bottom, left\nmargin=chart.margin;// pre-render axes to get labels offset width\nif(chart.hasCartesianSeries){each(chart.axes,function(axis){if(axis.visible){axis.getOffset();}});}// Add the axis offsets\neach(marginNames,function(m,side){if(!defined(margin[side])){chart[m]+=axisOffset[side];}});chart.setChartSize();},/**\n         * Resize the chart to its container if size is not explicitly set\n         */reflow:function(e){var chart=this,optionsChart=chart.options.chart,renderTo=chart.renderTo,width=optionsChart.width||getStyle(renderTo,'width'),height=optionsChart.height||getStyle(renderTo,'height'),target=e?e.target:win;// Width and height checks for display:none. Target is doc in IE8 and Opera,\n// win in Firefox, Chrome and IE9.\nif(!chart.hasUserSize&&!chart.isPrinting&&width&&height&&(target===win||target===doc)){// #1093\nif(width!==chart.containerWidth||height!==chart.containerHeight){clearTimeout(chart.reflowTimeout);// When called from window.resize, e is set, else it's called directly (#2224)\nchart.reflowTimeout=syncTimeout(function(){if(chart.container){// It may have been destroyed in the meantime (#1257)\nchart.setSize(width,height,false);chart.hasUserSize=null;}},e?100:0);}chart.containerWidth=width;chart.containerHeight=height;}},/**\n         * Add the event handlers necessary for auto resizing\n         */initReflow:function(){var chart=this,reflow=function(e){chart.reflow(e);};addEvent(win,'resize',reflow);addEvent(chart,'destroy',function(){removeEvent(win,'resize',reflow);});},/**\n         * Resize the chart to a given width and height\n         * @param {Number} width\n         * @param {Number} height\n         * @param {Object|Boolean} animation\n         */setSize:function(width,height,animation){var chart=this,chartWidth,chartHeight,renderer=chart.renderer,globalAnimation;// Handle the isResizing counter\nchart.isResizing+=1;// set the animation for the current process\nsetAnimation(animation,chart);chart.oldChartHeight=chart.chartHeight;chart.oldChartWidth=chart.chartWidth;if(defined(width)){chart.chartWidth=chartWidth=mathMax(0,mathRound(width));chart.hasUserSize=!!chartWidth;}if(defined(height)){chart.chartHeight=chartHeight=mathMax(0,mathRound(height));}// Resize the container with the global animation applied if enabled (#2503)\nglobalAnimation=renderer.globalAnimation;(globalAnimation?animate:css)(chart.container,{width:chartWidth+PX,height:chartHeight+PX},globalAnimation);chart.setChartSize(true);renderer.setSize(chartWidth,chartHeight,animation);// handle axes\nchart.maxTicks=null;each(chart.axes,function(axis){axis.isDirty=true;axis.setScale();});// make sure non-cartesian series are also handled\neach(chart.series,function(serie){serie.isDirty=true;});chart.isDirtyLegend=true;// force legend redraw\nchart.isDirtyBox=true;// force redraw of plot and chart border\nchart.layOutTitles();// #2857\nchart.getMargins();chart.redraw(animation);chart.oldChartHeight=null;fireEvent(chart,'resize');// Fire endResize and set isResizing back. If animation is disabled, fire without delay\nsyncTimeout(function(){if(chart){fireEvent(chart,'endResize',null,function(){chart.isResizing-=1;});}},animObject(globalAnimation).duration);},/**\n         * Set the public chart properties. This is done before and after the pre-render\n         * to determine margin sizes\n         */setChartSize:function(skipAxes){var chart=this,inverted=chart.inverted,renderer=chart.renderer,chartWidth=chart.chartWidth,chartHeight=chart.chartHeight,optionsChart=chart.options.chart,spacing=chart.spacing,clipOffset=chart.clipOffset,clipX,clipY,plotLeft,plotTop,plotWidth,plotHeight,plotBorderWidth;chart.plotLeft=plotLeft=mathRound(chart.plotLeft);chart.plotTop=plotTop=mathRound(chart.plotTop);chart.plotWidth=plotWidth=mathMax(0,mathRound(chartWidth-plotLeft-chart.marginRight));chart.plotHeight=plotHeight=mathMax(0,mathRound(chartHeight-plotTop-chart.marginBottom));chart.plotSizeX=inverted?plotHeight:plotWidth;chart.plotSizeY=inverted?plotWidth:plotHeight;chart.plotBorderWidth=optionsChart.plotBorderWidth||0;// Set boxes used for alignment\nchart.spacingBox=renderer.spacingBox={x:spacing[3],y:spacing[0],width:chartWidth-spacing[3]-spacing[1],height:chartHeight-spacing[0]-spacing[2]};chart.plotBox=renderer.plotBox={x:plotLeft,y:plotTop,width:plotWidth,height:plotHeight};plotBorderWidth=2*mathFloor(chart.plotBorderWidth/2);clipX=mathCeil(mathMax(plotBorderWidth,clipOffset[3])/2);clipY=mathCeil(mathMax(plotBorderWidth,clipOffset[0])/2);chart.clipBox={x:clipX,y:clipY,width:mathFloor(chart.plotSizeX-mathMax(plotBorderWidth,clipOffset[1])/2-clipX),height:mathMax(0,mathFloor(chart.plotSizeY-mathMax(plotBorderWidth,clipOffset[2])/2-clipY))};if(!skipAxes){each(chart.axes,function(axis){axis.setAxisSize();axis.setAxisTranslation();});}},/**\n         * Initial margins before auto size margins are applied\n         */resetMargins:function(){var chart=this;each(marginNames,function(m,side){chart[m]=pick(chart.margin[side],chart.spacing[side]);});chart.axisOffset=[0,0,0,0];// top, right, bottom, left\nchart.clipOffset=[0,0,0,0];},/**\n         * Draw the borders and backgrounds for chart and plot area\n         */drawChartBox:function(){var chart=this,optionsChart=chart.options.chart,renderer=chart.renderer,chartWidth=chart.chartWidth,chartHeight=chart.chartHeight,chartBackground=chart.chartBackground,plotBackground=chart.plotBackground,plotBorder=chart.plotBorder,plotBGImage=chart.plotBGImage,chartBorderWidth=optionsChart.borderWidth||0,chartBackgroundColor=optionsChart.backgroundColor,plotBackgroundColor=optionsChart.plotBackgroundColor,plotBackgroundImage=optionsChart.plotBackgroundImage,plotBorderWidth=optionsChart.plotBorderWidth||0,mgn,bgAttr,plotLeft=chart.plotLeft,plotTop=chart.plotTop,plotWidth=chart.plotWidth,plotHeight=chart.plotHeight,plotBox=chart.plotBox,clipRect=chart.clipRect,clipBox=chart.clipBox;// Chart area\nmgn=chartBorderWidth+(optionsChart.shadow?8:0);if(chartBorderWidth||chartBackgroundColor){if(!chartBackground){bgAttr={fill:chartBackgroundColor||NONE};if(chartBorderWidth){// #980\nbgAttr.stroke=optionsChart.borderColor;bgAttr['stroke-width']=chartBorderWidth;}chart.chartBackground=renderer.rect(mgn/2,mgn/2,chartWidth-mgn,chartHeight-mgn,optionsChart.borderRadius,chartBorderWidth).attr(bgAttr).addClass(PREFIX+'background').add().shadow(optionsChart.shadow);}else{// resize\nchartBackground.animate(chartBackground.crisp({width:chartWidth-mgn,height:chartHeight-mgn}));}}// Plot background\nif(plotBackgroundColor){if(!plotBackground){chart.plotBackground=renderer.rect(plotLeft,plotTop,plotWidth,plotHeight,0).attr({fill:plotBackgroundColor}).add().shadow(optionsChart.plotShadow);}else{plotBackground.animate(plotBox);}}if(plotBackgroundImage){if(!plotBGImage){chart.plotBGImage=renderer.image(plotBackgroundImage,plotLeft,plotTop,plotWidth,plotHeight).add();}else{plotBGImage.animate(plotBox);}}// Plot clip\nif(!clipRect){chart.clipRect=renderer.clipRect(clipBox);}else{clipRect.animate({width:clipBox.width,height:clipBox.height});}// Plot area border\nif(plotBorderWidth){if(!plotBorder){chart.plotBorder=renderer.rect(plotLeft,plotTop,plotWidth,plotHeight,0,-plotBorderWidth).attr({stroke:optionsChart.plotBorderColor,'stroke-width':plotBorderWidth,fill:NONE,zIndex:1}).add();}else{plotBorder.strokeWidth=-plotBorderWidth;plotBorder.animate(plotBorder.crisp({x:plotLeft,y:plotTop,width:plotWidth,height:plotHeight})//#3282 plotBorder should be negative\n);}}// reset\nchart.isDirtyBox=false;},/**\n         * Detect whether a certain chart property is needed based on inspecting its options\n         * and series. This mainly applies to the chart.invert property, and in extensions to\n         * the chart.angular and chart.polar properties.\n         */propFromSeries:function(){var chart=this,optionsChart=chart.options.chart,klass,seriesOptions=chart.options.series,i,value;each(['inverted','angular','polar'],function(key){// The default series type's class\nklass=seriesTypes[optionsChart.type||optionsChart.defaultSeriesType];// Get the value from available chart-wide properties\nvalue=chart[key]||// 1. it is set before\noptionsChart[key]||// 2. it is set in the options\nklass&&klass.prototype[key]// 3. it's default series class requires it\n;// 4. Check if any the chart's series require it\ni=seriesOptions&&seriesOptions.length;while(!value&&i--){klass=seriesTypes[seriesOptions[i].type];if(klass&&klass.prototype[key]){value=true;}}// Set the chart property\nchart[key]=value;});},/**\n         * Link two or more series together. This is done initially from Chart.render,\n         * and after Chart.addSeries and Series.remove.\n         */linkSeries:function(){var chart=this,chartSeries=chart.series;// Reset links\neach(chartSeries,function(series){series.linkedSeries.length=0;});// Apply new links\neach(chartSeries,function(series){var linkedTo=series.options.linkedTo;if(isString(linkedTo)){if(linkedTo===':previous'){linkedTo=chart.series[series.index-1];}else{linkedTo=chart.get(linkedTo);}if(linkedTo){linkedTo.linkedSeries.push(series);series.linkedParent=linkedTo;series.visible=pick(series.options.visible,linkedTo.options.visible,series.visible);// #3879\n}}});},/**\n         * Render series for the chart\n         */renderSeries:function(){each(this.series,function(serie){serie.translate();serie.render();});},/**\n         * Render labels for the chart\n         */renderLabels:function(){var chart=this,labels=chart.options.labels;if(labels.items){each(labels.items,function(label){var style=extend(labels.style,label.style),x=pInt(style.left)+chart.plotLeft,y=pInt(style.top)+chart.plotTop+12;// delete to prevent rewriting in IE\ndelete style.left;delete style.top;chart.renderer.text(label.html,x,y).attr({zIndex:2}).css(style).add();});}},/**\n         * Render all graphics for the chart\n         */render:function(){var chart=this,axes=chart.axes,renderer=chart.renderer,options=chart.options,tempWidth,tempHeight,redoHorizontal,redoVertical;// Title\nchart.setTitle();// Legend\nchart.legend=new Legend(chart,options.legend);// Get stacks\nif(chart.getStacks){chart.getStacks();}// Get chart margins\nchart.getMargins(true);chart.setChartSize();// Record preliminary dimensions for later comparison\ntempWidth=chart.plotWidth;tempHeight=chart.plotHeight=chart.plotHeight-21;// 21 is the most common correction for X axis labels\n// Get margins by pre-rendering axes\neach(axes,function(axis){axis.setScale();});chart.getAxisMargins();// If the plot area size has changed significantly, calculate tick positions again\nredoHorizontal=tempWidth/chart.plotWidth>1.1;redoVertical=tempHeight/chart.plotHeight>1.05;// Height is more sensitive\nif(redoHorizontal||redoVertical){chart.maxTicks=null;// reset for second pass\neach(axes,function(axis){if(axis.horiz&&redoHorizontal||!axis.horiz&&redoVertical){axis.setTickInterval(true);// update to reflect the new margins\n}});chart.getMargins();// second pass to check for new labels\n}// Draw the borders and backgrounds\nchart.drawChartBox();// Axes\nif(chart.hasCartesianSeries){each(axes,function(axis){if(axis.visible){axis.render();}});}// The series\nif(!chart.seriesGroup){chart.seriesGroup=renderer.g('series-group').attr({zIndex:3}).add();}chart.renderSeries();// Labels\nchart.renderLabels();// Credits\nchart.showCredits(options.credits);// Set flag\nchart.hasRendered=true;},/**\n         * Show chart credits based on config options\n         */showCredits:function(credits){if(credits.enabled&&!this.credits){this.credits=this.renderer.text(credits.text,0,0).on('click',function(){if(credits.href){win.location.href=credits.href;}}).attr({align:credits.position.align,zIndex:8}).css(credits.style).add().align(credits.position);}},/**\n         * Clean up memory usage\n         */destroy:function(){var chart=this,axes=chart.axes,series=chart.series,container=chart.container,i,parentNode=container&&container.parentNode;// fire the chart.destoy event\nfireEvent(chart,'destroy');// Delete the chart from charts lookup array\ncharts[chart.index]=UNDEFINED;chartCount--;chart.renderTo.removeAttribute('data-highcharts-chart');// remove events\nremoveEvent(chart);// ==== Destroy collections:\n// Destroy axes\ni=axes.length;while(i--){axes[i]=axes[i].destroy();}// Destroy each series\ni=series.length;while(i--){series[i]=series[i].destroy();}// ==== Destroy chart properties:\neach(['title','subtitle','chartBackground','plotBackground','plotBGImage','plotBorder','seriesGroup','clipRect','credits','pointer','scroller','rangeSelector','legend','resetZoomButton','tooltip','renderer'],function(name){var prop=chart[name];if(prop&&prop.destroy){chart[name]=prop.destroy();}});// remove container and all SVG\nif(container){// can break in IE when destroyed before finished loading\ncontainer.innerHTML='';removeEvent(container);if(parentNode){discardElement(container);}}// clean it all up\nfor(i in chart){delete chart[i];}},/**\n         * VML namespaces can't be added until after complete. Listening\n         * for Perini's doScroll hack is not enough.\n         */isReadyToRender:function(){var chart=this;// Note: win == win.top is required\nif(!hasSVG&&win==win.top&&doc.readyState!=='complete'||useCanVG&&!win.canvg){// eslint-disable-line eqeqeq\nif(useCanVG){// Delay rendering until canvg library is downloaded and ready\nCanVGController.push(function(){chart.firstRender();},chart.options.global.canvasToolsURL);}else{doc.attachEvent('onreadystatechange',function(){doc.detachEvent('onreadystatechange',chart.firstRender);if(doc.readyState==='complete'){chart.firstRender();}});}return false;}return true;},/**\n         * Prepare for first rendering after all data are loaded\n         */firstRender:function(){var chart=this,options=chart.options;// Check whether the chart is ready to render\nif(!chart.isReadyToRender()){return;}// Create the container\nchart.getContainer();// Run an early event after the container and renderer are established\nfireEvent(chart,'init');chart.resetMargins();chart.setChartSize();// Set the common chart properties (mainly invert) from the given series\nchart.propFromSeries();// get axes\nchart.getAxes();// Initialize the series\neach(options.series||[],function(serieOptions){chart.initSeries(serieOptions);});chart.linkSeries();// Run an event after axes and series are initialized, but before render. At this stage,\n// the series data is indexed and cached in the xData and yData arrays, so we can access\n// those before rendering. Used in Highstock.\nfireEvent(chart,'beforeRender');// depends on inverted and on margins being set\nif(Highcharts.Pointer){chart.pointer=new Pointer(chart,options);}chart.render();// add canvas\nchart.renderer.draw();// Fire the load event if there are no external images\nif(!chart.renderer.imgCount&&chart.onload){chart.onload();}// If the chart was rendered outside the top container, put it back in (#3679)\nchart.cloneRenderTo(true);},/** \n         * On chart load\n         */onload:function(){var chart=this;// Run callbacks\neach([this.callback].concat(this.callbacks),function(fn){if(fn&&chart.index!==undefined){// Chart destroyed in its own callback (#3600)\nfn.apply(chart,[chart]);}});fireEvent(chart,'load');// Don't run again\nthis.onload=null;},/**\n        * Creates arrays for spacing and margin from given options.\n        */splashArray:function(target,options){var oVar=options[target],tArray=isObject(oVar)?oVar:[oVar,oVar,oVar,oVar];return[pick(options[target+'Top'],tArray[0]),pick(options[target+'Right'],tArray[1]),pick(options[target+'Bottom'],tArray[2]),pick(options[target+'Left'],tArray[3])];}};// end Chart\nvar CenteredSeriesMixin=Highcharts.CenteredSeriesMixin={/**\n         * Get the center of the pie based on the size and center options relative to the\n         * plot area. Borrowed by the polar and gauge series types.\n         */getCenter:function(){var options=this.options,chart=this.chart,slicingRoom=2*(options.slicedOffset||0),handleSlicingRoom,plotWidth=chart.plotWidth-2*slicingRoom,plotHeight=chart.plotHeight-2*slicingRoom,centerOption=options.center,positions=[pick(centerOption[0],'50%'),pick(centerOption[1],'50%'),options.size||'100%',options.innerSize||0],smallestSize=mathMin(plotWidth,plotHeight),i,value;for(i=0;i<4;++i){value=positions[i];handleSlicingRoom=i<2||i===2&&/%$/.test(value);// i == 0: centerX, relative to width\n// i == 1: centerY, relative to height\n// i == 2: size, relative to smallestSize\n// i == 3: innerSize, relative to size\npositions[i]=relativeLength(value,[plotWidth,plotHeight,smallestSize,positions[2]][i])+(handleSlicingRoom?slicingRoom:0);}// innerSize cannot be larger than size (#3632)\nif(positions[3]>positions[2]){positions[3]=positions[2];}return positions;}};/**\n     * The Point object and prototype. Inheritable and used as base for PiePoint\n     */var Point=function(){};Point.prototype={/**\n         * Initialize the point\n         * @param {Object} series The series object containing this point\n         * @param {Object} options The data in either number, array or object format\n         */init:function(series,options,x){var point=this,colors;point.series=series;point.color=series.color;// #3445\npoint.applyOptions(options,x);point.pointAttr={};if(series.options.colorByPoint){colors=series.options.colors||series.chart.options.colors;point.color=point.color||colors[series.colorCounter++];// loop back to zero\nif(series.colorCounter===colors.length){series.colorCounter=0;}}series.chart.pointCount++;return point;},/**\n         * Apply the options containing the x and y data and possible some extra properties.\n         * This is called on point init or from point.update.\n         *\n         * @param {Object} options\n         */applyOptions:function(options,x){var point=this,series=point.series,pointValKey=series.options.pointValKey||series.pointValKey;options=Point.prototype.optionsToObject.call(this,options);// copy options directly to point\nextend(point,options);point.options=point.options?extend(point.options,options):options;// For higher dimension series types. For instance, for ranges, point.y is mapped to point.low.\nif(pointValKey){point.y=point[pointValKey];}point.isNull=point.x===null||point.y===null;// If no x is set by now, get auto incremented value. All points must have an\n// x value, however the y value can be null to create a gap in the series\nif(point.x===undefined&&series){point.x=x===undefined?series.autoIncrement():x;}return point;},/**\n         * Transform number or array configs into objects\n         */optionsToObject:function(options){var ret={},series=this.series,keys=series.options.keys,pointArrayMap=keys||series.pointArrayMap||['y'],valueCount=pointArrayMap.length,firstItemType,i=0,j=0;if(isNumber(options)||options===null){ret[pointArrayMap[0]]=options;}else if(isArray(options)){// with leading x value\nif(!keys&&options.length>valueCount){firstItemType=typeof options[0];if(firstItemType==='string'){ret.name=options[0];}else if(firstItemType==='number'){ret.x=options[0];}i++;}while(j<valueCount){if(!keys||options[i]!==undefined){// Skip undefined positions for keys\nret[pointArrayMap[j]]=options[i];}i++;j++;}}else if(typeof options==='object'){ret=options;// This is the fastest way to detect if there are individual point dataLabels that need\n// to be considered in drawDataLabels. These can only occur in object configs.\nif(options.dataLabels){series._hasPointLabels=true;}// Same approach as above for markers\nif(options.marker){series._hasPointMarkers=true;}}return ret;},/**\n         * Destroy a point to clear memory. Its reference still stays in series.data.\n         */destroy:function(){var point=this,series=point.series,chart=series.chart,hoverPoints=chart.hoverPoints,prop;chart.pointCount--;if(hoverPoints){point.setState();erase(hoverPoints,point);if(!hoverPoints.length){chart.hoverPoints=null;}}if(point===chart.hoverPoint){point.onMouseOut();}// remove all events\nif(point.graphic||point.dataLabel){// removeEvent and destroyElements are performance expensive\nremoveEvent(point);point.destroyElements();}if(point.legendItem){// pies have legend items\nchart.legend.destroyItem(point);}for(prop in point){point[prop]=null;}},/**\n         * Destroy SVG elements associated with the point\n         */destroyElements:function(){var point=this,props=['graphic','dataLabel','dataLabelUpper','connector','shadowGroup'],prop,i=6;while(i--){prop=props[i];if(point[prop]){point[prop]=point[prop].destroy();}}},/**\n         * Return the configuration hash needed for the data label and tooltip formatters\n         */getLabelConfig:function(){return{x:this.category,y:this.y,color:this.color,key:this.name||this.category,series:this.series,point:this,percentage:this.percentage,total:this.total||this.stackTotal};},/**\n         * Extendable method for formatting each point's tooltip line\n         *\n         * @return {String} A string to be concatenated in to the common tooltip text\n         */tooltipFormatter:function(pointFormat){// Insert options for valueDecimals, valuePrefix, and valueSuffix\nvar series=this.series,seriesTooltipOptions=series.tooltipOptions,valueDecimals=pick(seriesTooltipOptions.valueDecimals,''),valuePrefix=seriesTooltipOptions.valuePrefix||'',valueSuffix=seriesTooltipOptions.valueSuffix||'';// Loop over the point array map and replace unformatted values with sprintf formatting markup\neach(series.pointArrayMap||['y'],function(key){key='{point.'+key;// without the closing bracket\nif(valuePrefix||valueSuffix){pointFormat=pointFormat.replace(key+'}',valuePrefix+key+'}'+valueSuffix);}pointFormat=pointFormat.replace(key+'}',key+':,.'+valueDecimals+'f}');});return format(pointFormat,{point:this,series:this.series});},/**\n         * Fire an event on the Point object.\n         * @param {String} eventType\n         * @param {Object} eventArgs Additional event arguments\n         * @param {Function} defaultFunction Default event handler\n         */firePointEvent:function(eventType,eventArgs,defaultFunction){var point=this,series=this.series,seriesOptions=series.options;// load event handlers on demand to save time on mouseover/out\nif(seriesOptions.point.events[eventType]||point.options&&point.options.events&&point.options.events[eventType]){this.importEvents();}// add default handler if in selection mode\nif(eventType==='click'&&seriesOptions.allowPointSelect){defaultFunction=function(event){// Control key is for Windows, meta (= Cmd key) for Mac, Shift for Opera\nif(point.select){// Could be destroyed by prior event handlers (#2911)\npoint.select(null,event.ctrlKey||event.metaKey||event.shiftKey);}};}fireEvent(this,eventType,eventArgs,defaultFunction);},visible:true};/**\n     * @classDescription The base function which all other series types inherit from. The data in the series is stored\n     * in various arrays.\n     *\n     * - First, series.options.data contains all the original config options for\n     * each point whether added by options or methods like series.addPoint.\n     * - Next, series.data contains those values converted to points, but in case the series data length\n     * exceeds the cropThreshold, or if the data is grouped, series.data doesn't contain all the points. It\n     * only contains the points that have been created on demand.\n     * - Then there's series.points that contains all currently visible point objects. In case of cropping,\n     * the cropped-away points are not part of this array. The series.points array starts at series.cropStart\n     * compared to series.data and series.options.data. If however the series data is grouped, these can't\n     * be correlated one to one.\n     * - series.xData and series.processedXData contain clean x values, equivalent to series.data and series.points.\n     * - series.yData and series.processedYData contain clean x values, equivalent to series.data and series.points.\n     *\n     * @param {Object} chart\n     * @param {Object} options\n     */var Series=Highcharts.Series=function(){};Series.prototype={isCartesian:true,type:'line',pointClass:Point,sorted:true,// requires the data to be sorted\nrequireSorting:true,pointAttrToOptions:{// mapping between SVG attributes and the corresponding options\nstroke:'lineColor','stroke-width':'lineWidth',fill:'fillColor',r:'radius'},directTouch:false,axisTypes:['xAxis','yAxis'],colorCounter:0,parallelArrays:['x','y'],// each point's x and y values are stored in this.xData and this.yData\ninit:function(chart,options){var series=this,eventType,events,chartSeries=chart.series,sortByIndex=function(a,b){return pick(a.options.index,a._i)-pick(b.options.index,b._i);};series.chart=chart;series.options=options=series.setOptions(options);// merge with plotOptions\nseries.linkedSeries=[];// bind the axes\nseries.bindAxes();// set some variables\nextend(series,{name:options.name,state:NORMAL_STATE,pointAttr:{},visible:options.visible!==false,// true by default\nselected:options.selected===true// false by default\n});// special\nif(useCanVG){options.animation=false;}// register event listeners\nevents=options.events;for(eventType in events){addEvent(series,eventType,events[eventType]);}if(events&&events.click||options.point&&options.point.events&&options.point.events.click||options.allowPointSelect){chart.runTrackerClick=true;}series.getColor();series.getSymbol();// Set the data\neach(series.parallelArrays,function(key){series[key+'Data']=[];});series.setData(options.data,false);// Mark cartesian\nif(series.isCartesian){chart.hasCartesianSeries=true;}// Register it in the chart\nchartSeries.push(series);series._i=chartSeries.length-1;// Sort series according to index option (#248, #1123, #2456)\nstableSort(chartSeries,sortByIndex);if(this.yAxis){stableSort(this.yAxis.series,sortByIndex);}each(chartSeries,function(series,i){series.index=i;series.name=series.name||'Series '+(i+1);});},/**\n         * Set the xAxis and yAxis properties of cartesian series, and register the series\n         * in the axis.series array\n         */bindAxes:function(){var series=this,seriesOptions=series.options,chart=series.chart,axisOptions;each(series.axisTypes||[],function(AXIS){// repeat for xAxis and yAxis\neach(chart[AXIS],function(axis){// loop through the chart's axis objects\naxisOptions=axis.options;// apply if the series xAxis or yAxis option mathches the number of the\n// axis, or if undefined, use the first axis\nif(seriesOptions[AXIS]===axisOptions.index||seriesOptions[AXIS]!==UNDEFINED&&seriesOptions[AXIS]===axisOptions.id||seriesOptions[AXIS]===UNDEFINED&&axisOptions.index===0){// register this series in the axis.series lookup\naxis.series.push(series);// set this series.xAxis or series.yAxis reference\nseries[AXIS]=axis;// mark dirty for redraw\naxis.isDirty=true;}});// The series needs an X and an Y axis\nif(!series[AXIS]&&series.optionalAxis!==AXIS){error(18,true);}});},/**\n         * For simple series types like line and column, the data values are held in arrays like\n         * xData and yData for quick lookup to find extremes and more. For multidimensional series\n         * like bubble and map, this can be extended with arrays like zData and valueData by\n         * adding to the series.parallelArrays array.\n         */updateParallelArrays:function(point,i){var series=point.series,args=arguments,fn=isNumber(i)?// Insert the value in the given position\nfunction(key){var val=key==='y'&&series.toYData?series.toYData(point):point[key];series[key+'Data'][i]=val;}:// Apply the method specified in i with the following arguments as arguments\nfunction(key){Array.prototype[i].apply(series[key+'Data'],Array.prototype.slice.call(args,2));};each(series.parallelArrays,fn);},/**\n         * Return an auto incremented x value based on the pointStart and pointInterval options.\n         * This is only used if an x value is not given for the point that calls autoIncrement.\n         */autoIncrement:function(){var options=this.options,xIncrement=this.xIncrement,date,pointInterval,pointIntervalUnit=options.pointIntervalUnit;xIncrement=pick(xIncrement,options.pointStart,0);this.pointInterval=pointInterval=pick(this.pointInterval,options.pointInterval,1);// Added code for pointInterval strings\nif(pointIntervalUnit){date=new Date(xIncrement);if(pointIntervalUnit==='day'){date=+date[setDate](date[getDate]()+pointInterval);}else if(pointIntervalUnit==='month'){date=+date[setMonth](date[getMonth]()+pointInterval);}else if(pointIntervalUnit==='year'){date=+date[setFullYear](date[getFullYear]()+pointInterval);}pointInterval=date-xIncrement;}this.xIncrement=xIncrement+pointInterval;return xIncrement;},/**\n         * Set the series options by merging from the options tree\n         * @param {Object} itemOptions\n         */setOptions:function(itemOptions){var chart=this.chart,chartOptions=chart.options,plotOptions=chartOptions.plotOptions,userOptions=chart.userOptions||{},userPlotOptions=userOptions.plotOptions||{},typeOptions=plotOptions[this.type],options,zones;this.userOptions=itemOptions;// General series options take precedence over type options because otherwise, default\n// type options like column.animation would be overwritten by the general option.\n// But issues have been raised here (#3881), and the solution may be to distinguish\n// between default option and userOptions like in the tooltip below.\noptions=merge(typeOptions,plotOptions.series,itemOptions);// The tooltip options are merged between global and series specific options\nthis.tooltipOptions=merge(defaultOptions.tooltip,defaultOptions.plotOptions[this.type].tooltip,userOptions.tooltip,userPlotOptions.series&&userPlotOptions.series.tooltip,userPlotOptions[this.type]&&userPlotOptions[this.type].tooltip,itemOptions.tooltip);// Delete marker object if not allowed (#1125)\nif(typeOptions.marker===null){delete options.marker;}// Handle color zones\nthis.zoneAxis=options.zoneAxis;zones=this.zones=(options.zones||[]).slice();if((options.negativeColor||options.negativeFillColor)&&!options.zones){zones.push({value:options[this.zoneAxis+'Threshold']||options.threshold||0,color:options.negativeColor,fillColor:options.negativeFillColor});}if(zones.length){// Push one extra zone for the rest\nif(defined(zones[zones.length-1].value)){zones.push({color:this.color,fillColor:this.fillColor});}}return options;},getCyclic:function(prop,value,defaults){var i,userOptions=this.userOptions,indexName='_'+prop+'Index',counterName=prop+'Counter';if(!value){if(defined(userOptions[indexName])){// after Series.update()\ni=userOptions[indexName];}else{userOptions[indexName]=i=this.chart[counterName]%defaults.length;this.chart[counterName]+=1;}value=defaults[i];}this[prop]=value;},/**\n         * Get the series' color\n         */getColor:function(){if(this.options.colorByPoint){this.options.color=null;// #4359, selected slice got series.color even when colorByPoint was set.\n}else{this.getCyclic('color',this.options.color||defaultPlotOptions[this.type].color,this.chart.options.colors);}},/**\n         * Get the series' symbol\n         */getSymbol:function(){var seriesMarkerOption=this.options.marker;this.getCyclic('symbol',seriesMarkerOption.symbol,this.chart.options.symbols);// don't substract radius in image symbols (#604)\nif(/^url/.test(this.symbol)){seriesMarkerOption.radius=0;}},drawLegendSymbol:LegendSymbolMixin.drawLineMarker,/**\n         * Replace the series data with a new set of data\n         * @param {Object} data\n         * @param {Object} redraw\n         */setData:function(data,redraw,animation,updatePoints){var series=this,oldData=series.points,oldDataLength=oldData&&oldData.length||0,dataLength,options=series.options,chart=series.chart,firstPoint=null,xAxis=series.xAxis,hasCategories=xAxis&&!!xAxis.categories,i,turboThreshold=options.turboThreshold,pt,xData=this.xData,yData=this.yData,pointArrayMap=series.pointArrayMap,valueCount=pointArrayMap&&pointArrayMap.length;data=data||[];dataLength=data.length;redraw=pick(redraw,true);// If the point count is the same as is was, just run Point.update which is\n// cheaper, allows animation, and keeps references to points.\nif(updatePoints!==false&&dataLength&&oldDataLength===dataLength&&!series.cropped&&!series.hasGroupedData&&series.visible){each(data,function(point,i){// .update doesn't exist on a linked, hidden series (#3709)\nif(oldData[i].update&&point!==options.data[i]){oldData[i].update(point,false,null,false);}});}else{// Reset properties\nseries.xIncrement=null;series.colorCounter=0;// for series with colorByPoint (#1547)\n// Update parallel arrays\neach(this.parallelArrays,function(key){series[key+'Data'].length=0;});// In turbo mode, only one- or twodimensional arrays of numbers are allowed. The\n// first value is tested, and we assume that all the rest are defined the same\n// way. Although the 'for' loops are similar, they are repeated inside each\n// if-else conditional for max performance.\nif(turboThreshold&&dataLength>turboThreshold){// find the first non-null point\ni=0;while(firstPoint===null&&i<dataLength){firstPoint=data[i];i++;}if(isNumber(firstPoint)){// assume all points are numbers\nvar x=pick(options.pointStart,0),pointInterval=pick(options.pointInterval,1);for(i=0;i<dataLength;i++){xData[i]=x;yData[i]=data[i];x+=pointInterval;}series.xIncrement=x;}else if(isArray(firstPoint)){// assume all points are arrays\nif(valueCount){// [x, low, high] or [x, o, h, l, c]\nfor(i=0;i<dataLength;i++){pt=data[i];xData[i]=pt[0];yData[i]=pt.slice(1,valueCount+1);}}else{// [x, y]\nfor(i=0;i<dataLength;i++){pt=data[i];xData[i]=pt[0];yData[i]=pt[1];}}}else{error(12);// Highcharts expects configs to be numbers or arrays in turbo mode\n}}else{for(i=0;i<dataLength;i++){if(data[i]!==UNDEFINED){// stray commas in oldIE\npt={series:series};series.pointClass.prototype.applyOptions.apply(pt,[data[i]]);series.updateParallelArrays(pt,i);if(hasCategories&&defined(pt.name)){// #4401\nxAxis.names[pt.x]=pt.name;// #2046\n}}}}// Forgetting to cast strings to numbers is a common caveat when handling CSV or JSON\nif(isString(yData[0])){error(14,true);}series.data=[];series.options.data=series.userOptions.data=data;// destroy old points\ni=oldDataLength;while(i--){if(oldData[i]&&oldData[i].destroy){oldData[i].destroy();}}// reset minRange (#878)\nif(xAxis){xAxis.minRange=xAxis.userMinRange;}// redraw\nseries.isDirty=series.isDirtyData=chart.isDirtyBox=true;animation=false;}// Typically for pie series, points need to be processed and generated\n// prior to rendering the legend\nif(options.legendType==='point'){this.processData();this.generatePoints();}if(redraw){chart.redraw(animation);}},/**\n         * Process the data by cropping away unused data points if the series is longer\n         * than the crop threshold. This saves computing time for lage series.\n         */processData:function(force){var series=this,processedXData=series.xData,// copied during slice operation below\nprocessedYData=series.yData,dataLength=processedXData.length,croppedData,cropStart=0,cropped,distance,closestPointRange,xAxis=series.xAxis,i,// loop variable\noptions=series.options,cropThreshold=options.cropThreshold,getExtremesFromAll=series.getExtremesFromAll||options.getExtremesFromAll,// #4599\nisCartesian=series.isCartesian,xExtremes,val2lin=xAxis&&xAxis.val2lin,isLog=xAxis&&xAxis.isLog,min,max;// If the series data or axes haven't changed, don't go through this. Return false to pass\n// the message on to override methods like in data grouping.\nif(isCartesian&&!series.isDirty&&!xAxis.isDirty&&!series.yAxis.isDirty&&!force){return false;}if(xAxis){xExtremes=xAxis.getExtremes();// corrected for log axis (#3053)\nmin=xExtremes.min;max=xExtremes.max;}// optionally filter out points outside the plot area\nif(isCartesian&&series.sorted&&!getExtremesFromAll&&(!cropThreshold||dataLength>cropThreshold||series.forceCrop)){// it's outside current extremes\nif(processedXData[dataLength-1]<min||processedXData[0]>max){processedXData=[];processedYData=[];// only crop if it's actually spilling out\n}else if(processedXData[0]<min||processedXData[dataLength-1]>max){croppedData=this.cropData(series.xData,series.yData,min,max);processedXData=croppedData.xData;processedYData=croppedData.yData;cropStart=croppedData.start;cropped=true;}}// Find the closest distance between processed points\ni=processedXData.length||1;while(--i){distance=isLog?val2lin(processedXData[i])-val2lin(processedXData[i-1]):processedXData[i]-processedXData[i-1];if(distance>0&&(closestPointRange===UNDEFINED||distance<closestPointRange)){closestPointRange=distance;// Unsorted data is not supported by the line tooltip, as well as data grouping and\n// navigation in Stock charts (#725) and width calculation of columns (#1900)\n}else if(distance<0&&series.requireSorting){error(15);}}// Record the properties\nseries.cropped=cropped;// undefined or true\nseries.cropStart=cropStart;series.processedXData=processedXData;series.processedYData=processedYData;series.closestPointRange=closestPointRange;},/**\n         * Iterate over xData and crop values between min and max. Returns object containing crop start/end\n         * cropped xData with corresponding part of yData, dataMin and dataMax within the cropped range\n         */cropData:function(xData,yData,min,max){var dataLength=xData.length,cropStart=0,cropEnd=dataLength,cropShoulder=pick(this.cropShoulder,1),// line-type series need one point outside\ni,j;// iterate up to find slice start\nfor(i=0;i<dataLength;i++){if(xData[i]>=min){cropStart=mathMax(0,i-cropShoulder);break;}}// proceed to find slice end\nfor(j=i;j<dataLength;j++){if(xData[j]>max){cropEnd=j+cropShoulder;break;}}return{xData:xData.slice(cropStart,cropEnd),yData:yData.slice(cropStart,cropEnd),start:cropStart,end:cropEnd};},/**\n         * Generate the data point after the data has been processed by cropping away\n         * unused points and optionally grouped in Highcharts Stock.\n         */generatePoints:function(){var series=this,options=series.options,dataOptions=options.data,data=series.data,dataLength,processedXData=series.processedXData,processedYData=series.processedYData,pointClass=series.pointClass,processedDataLength=processedXData.length,cropStart=series.cropStart||0,cursor,hasGroupedData=series.hasGroupedData,point,points=[],i;if(!data&&!hasGroupedData){var arr=[];arr.length=dataOptions.length;data=series.data=arr;}for(i=0;i<processedDataLength;i++){cursor=cropStart+i;if(!hasGroupedData){if(data[cursor]){point=data[cursor];}else if(dataOptions[cursor]!==UNDEFINED){// #970\ndata[cursor]=point=new pointClass().init(series,dataOptions[cursor],processedXData[i]);}points[i]=point;}else{// splat the y data in case of ohlc data array\npoints[i]=new pointClass().init(series,[processedXData[i]].concat(splat(processedYData[i])));points[i].dataGroup=series.groupMap[i];}points[i].index=cursor;// For faster access in Point.update\n}// Hide cropped-away points - this only runs when the number of points is above cropThreshold, or when\n// swithching view from non-grouped data to grouped data (#637)\nif(data&&(processedDataLength!==(dataLength=data.length)||hasGroupedData)){for(i=0;i<dataLength;i++){if(i===cropStart&&!hasGroupedData){// when has grouped data, clear all points\ni+=processedDataLength;}if(data[i]){data[i].destroyElements();data[i].plotX=UNDEFINED;// #1003\n}}}series.data=data;series.points=points;},/**\n         * Calculate Y extremes for visible data\n         */getExtremes:function(yData){var xAxis=this.xAxis,yAxis=this.yAxis,xData=this.processedXData,yDataLength,activeYData=[],activeCounter=0,xExtremes=xAxis.getExtremes(),// #2117, need to compensate for log X axis\nxMin=xExtremes.min,xMax=xExtremes.max,validValue,withinRange,x,y,i,j;yData=yData||this.stackedYData||this.processedYData||[];yDataLength=yData.length;for(i=0;i<yDataLength;i++){x=xData[i];y=yData[i];// For points within the visible range, including the first point outside the\n// visible range, consider y extremes\nvalidValue=y!==null&&y!==UNDEFINED&&(!yAxis.isLog||y.length||y>0);withinRange=this.getExtremesFromAll||this.options.getExtremesFromAll||this.cropped||(xData[i+1]||x)>=xMin&&(xData[i-1]||x)<=xMax;if(validValue&&withinRange){j=y.length;if(j){// array, like ohlc or range data\nwhile(j--){if(y[j]!==null){activeYData[activeCounter++]=y[j];}}}else{activeYData[activeCounter++]=y;}}}this.dataMin=arrayMin(activeYData);this.dataMax=arrayMax(activeYData);},/**\n         * Translate data points from raw data values to chart specific positioning data\n         * needed later in drawPoints, drawGraph and drawTracker.\n         */translate:function(){if(!this.processedXData){// hidden series\nthis.processData();}this.generatePoints();var series=this,options=series.options,stacking=options.stacking,xAxis=series.xAxis,categories=xAxis.categories,yAxis=series.yAxis,points=series.points,dataLength=points.length,hasModifyValue=!!series.modifyValue,i,pointPlacement=options.pointPlacement,dynamicallyPlaced=pointPlacement==='between'||isNumber(pointPlacement),threshold=options.threshold,stackThreshold=options.startFromThreshold?threshold:0,plotX,plotY,lastPlotX,stackIndicator,closestPointRangePx=Number.MAX_VALUE;// Translate each point\nfor(i=0;i<dataLength;i++){var point=points[i],xValue=point.x,yValue=point.y,yBottom=point.low,stack=stacking&&yAxis.stacks[(series.negStacks&&yValue<(stackThreshold?0:threshold)?'-':'')+series.stackKey],pointStack,stackValues;// Discard disallowed y values for log axes (#3434)\nif(yAxis.isLog&&yValue!==null&&yValue<=0){point.y=yValue=null;error(10);}// Get the plotX translation\npoint.plotX=plotX=correctFloat(// #5236\nmathMin(mathMax(-1e5,xAxis.translate(xValue,0,0,0,1,pointPlacement,this.type==='flags')),1e5)// #3923\n);// Calculate the bottom y value for stacked series\nif(stacking&&series.visible&&!point.isNull&&stack&&stack[xValue]){stackIndicator=series.getStackIndicator(stackIndicator,xValue,series.index);pointStack=stack[xValue];stackValues=pointStack.points[stackIndicator.key];yBottom=stackValues[0];yValue=stackValues[1];if(yBottom===stackThreshold){yBottom=pick(threshold,yAxis.min);}if(yAxis.isLog&&yBottom<=0){// #1200, #1232\nyBottom=null;}point.total=point.stackTotal=pointStack.total;point.percentage=pointStack.total&&point.y/pointStack.total*100;point.stackY=yValue;// Place the stack label\npointStack.setOffset(series.pointXOffset||0,series.barW||0);}// Set translated yBottom or remove it\npoint.yBottom=defined(yBottom)?yAxis.translate(yBottom,0,1,0,1):null;// general hook, used for Highstock compare mode\nif(hasModifyValue){yValue=series.modifyValue(yValue,point);}// Set the the plotY value, reset it for redraws\npoint.plotY=plotY=typeof yValue==='number'&&yValue!==Infinity?mathMin(mathMax(-1e5,yAxis.translate(yValue,0,1,0,1)),1e5):// #3201\nUNDEFINED;point.isInside=plotY!==UNDEFINED&&plotY>=0&&plotY<=yAxis.len&&// #3519\nplotX>=0&&plotX<=xAxis.len;// Set client related positions for mouse tracking\npoint.clientX=dynamicallyPlaced?xAxis.translate(xValue,0,0,0,1):plotX;// #1514\npoint.negative=point.y<(threshold||0);// some API data\npoint.category=categories&&categories[point.x]!==UNDEFINED?categories[point.x]:point.x;// Determine auto enabling of markers (#3635, #5099)\nif(!point.isNull){if(lastPlotX!==undefined){closestPointRangePx=mathMin(closestPointRangePx,mathAbs(plotX-lastPlotX));}lastPlotX=plotX;}}series.closestPointRangePx=closestPointRangePx;},/**\n         * Return the series points with null points filtered out\n         */getValidPoints:function(points,insideOnly){var chart=this.chart;return grep(points||this.points||[],function isValidPoint(point){// #3916, #5029\nif(insideOnly&&!chart.isInsidePlot(point.plotX,point.plotY,chart.inverted)){// #5085\nreturn false;}return!point.isNull;});},/**\n         * Set the clipping for the series. For animated series it is called twice, first to initiate\n         * animating the clip then the second time without the animation to set the final clip.\n         */setClip:function(animation){var chart=this.chart,options=this.options,renderer=chart.renderer,inverted=chart.inverted,seriesClipBox=this.clipBox,clipBox=seriesClipBox||chart.clipBox,sharedClipKey=this.sharedClipKey||['_sharedClip',animation&&animation.duration,animation&&animation.easing,clipBox.height,options.xAxis,options.yAxis].join(','),// #4526\nclipRect=chart[sharedClipKey],markerClipRect=chart[sharedClipKey+'m'];// If a clipping rectangle with the same properties is currently present in the chart, use that.\nif(!clipRect){// When animation is set, prepare the initial positions\nif(animation){clipBox.width=0;chart[sharedClipKey+'m']=markerClipRect=renderer.clipRect(-99,// include the width of the first marker\ninverted?-chart.plotLeft:-chart.plotTop,99,inverted?chart.chartWidth:chart.chartHeight);}chart[sharedClipKey]=clipRect=renderer.clipRect(clipBox);}if(animation){clipRect.count+=1;}if(options.clip!==false){this.group.clip(animation||seriesClipBox?clipRect:chart.clipRect);this.markerGroup.clip(markerClipRect);this.sharedClipKey=sharedClipKey;}// Remove the shared clipping rectangle when all series are shown\nif(!animation){clipRect.count-=1;if(clipRect.count<=0&&sharedClipKey&&chart[sharedClipKey]){if(!seriesClipBox){chart[sharedClipKey]=chart[sharedClipKey].destroy();}if(chart[sharedClipKey+'m']){chart[sharedClipKey+'m']=chart[sharedClipKey+'m'].destroy();}}}},/**\n         * Animate in the series\n         */animate:function(init){var series=this,chart=series.chart,clipRect,animation=series.options.animation,sharedClipKey;// Animation option is set to true\nif(animation&&!isObject(animation)){animation=defaultPlotOptions[series.type].animation;}// Initialize the animation. Set up the clipping rectangle.\nif(init){series.setClip(animation);// Run the animation\n}else{sharedClipKey=this.sharedClipKey;clipRect=chart[sharedClipKey];if(clipRect){clipRect.animate({width:chart.plotSizeX},animation);}if(chart[sharedClipKey+'m']){chart[sharedClipKey+'m'].animate({width:chart.plotSizeX+99},animation);}// Delete this function to allow it only once\nseries.animate=null;}},/**\n         * This runs after animation to land on the final plot clipping\n         */afterAnimate:function(){this.setClip();fireEvent(this,'afterAnimate');},/**\n         * Draw the markers\n         */drawPoints:function(){var series=this,pointAttr,points=series.points,chart=series.chart,plotX,plotY,i,point,radius,symbol,isImage,graphic,options=series.options,seriesMarkerOptions=options.marker,seriesPointAttr=series.pointAttr[''],pointMarkerOptions,hasPointMarker,enabled,isInside,markerGroup=series.markerGroup,xAxis=series.xAxis,globallyEnabled=pick(seriesMarkerOptions.enabled,xAxis.isRadial,series.closestPointRangePx>2*seriesMarkerOptions.radius);if(seriesMarkerOptions.enabled!==false||series._hasPointMarkers){i=points.length;while(i--){point=points[i];plotX=mathFloor(point.plotX);// #1843\nplotY=point.plotY;graphic=point.graphic;pointMarkerOptions=point.marker||{};hasPointMarker=!!point.marker;enabled=globallyEnabled&&pointMarkerOptions.enabled===UNDEFINED||pointMarkerOptions.enabled;isInside=point.isInside;// only draw the point if y is defined\nif(enabled&&isNumber(plotY)&&point.y!==null){// shortcuts\npointAttr=point.pointAttr[point.selected?SELECT_STATE:NORMAL_STATE]||seriesPointAttr;radius=pointAttr.r;symbol=pick(pointMarkerOptions.symbol,series.symbol);isImage=symbol.indexOf('url')===0;if(graphic){// update\ngraphic[isInside?'show':'hide'](true)// Since the marker group isn't clipped, each individual marker must be toggled\n.attr(pointAttr)// #4759\n.animate(extend({x:plotX-radius,y:plotY-radius},graphic.symbolName?{// don't apply to image symbols #507\nwidth:2*radius,height:2*radius}:{}));}else if(isInside&&(radius>0||isImage)){point.graphic=graphic=chart.renderer.symbol(symbol,plotX-radius,plotY-radius,2*radius,2*radius,hasPointMarker?pointMarkerOptions:seriesMarkerOptions).attr(pointAttr).add(markerGroup);}}else if(graphic){point.graphic=graphic.destroy();// #1269\n}}}},/**\n         * Convert state properties from API naming conventions to SVG attributes\n         *\n         * @param {Object} options API options object\n         * @param {Object} base1 SVG attribute object to inherit from\n         * @param {Object} base2 Second level SVG attribute object to inherit from\n         */convertAttribs:function(options,base1,base2,base3){var conversion=this.pointAttrToOptions,attr,option,obj={};options=options||{};base1=base1||{};base2=base2||{};base3=base3||{};for(attr in conversion){option=conversion[attr];obj[attr]=pick(options[option],base1[attr],base2[attr],base3[attr]);}return obj;},/**\n         * Get the state attributes. Each series type has its own set of attributes\n         * that are allowed to change on a point's state change. Series wide attributes are stored for\n         * all series, and additionally point specific attributes are stored for all\n         * points with individual marker options. If such options are not defined for the point,\n         * a reference to the series wide attributes is stored in point.pointAttr.\n         */getAttribs:function(){var series=this,seriesOptions=series.options,normalOptions=defaultPlotOptions[series.type].marker?seriesOptions.marker:seriesOptions,stateOptions=normalOptions.states,stateOptionsHover=stateOptions[HOVER_STATE],pointStateOptionsHover,seriesColor=series.color,seriesNegativeColor=series.options.negativeColor,normalDefaults={stroke:seriesColor,fill:seriesColor},points=series.points||[],// #927\ni,j,threshold,point,seriesPointAttr=[],pointAttr,pointAttrToOptions=series.pointAttrToOptions,hasPointSpecificOptions=series.hasPointSpecificOptions,defaultLineColor=normalOptions.lineColor,defaultFillColor=normalOptions.fillColor,turboThreshold=seriesOptions.turboThreshold,zones=series.zones,zoneAxis=series.zoneAxis||'y',zoneColor,attr,key;// series type specific modifications\nif(seriesOptions.marker){// line, spline, area, areaspline, scatter\n// if no hover radius is given, default to normal radius + 2\nstateOptionsHover.radius=stateOptionsHover.radius||normalOptions.radius+stateOptionsHover.radiusPlus;stateOptionsHover.lineWidth=stateOptionsHover.lineWidth||normalOptions.lineWidth+stateOptionsHover.lineWidthPlus;}else{// column, bar, pie\n// if no hover color is given, brighten the normal color\nstateOptionsHover.color=stateOptionsHover.color||Color(stateOptionsHover.color||seriesColor).brighten(stateOptionsHover.brightness).get();// if no hover negativeColor is given, brighten the normal negativeColor\nstateOptionsHover.negativeColor=stateOptionsHover.negativeColor||Color(stateOptionsHover.negativeColor||seriesNegativeColor).brighten(stateOptionsHover.brightness).get();}// general point attributes for the series normal state\nseriesPointAttr[NORMAL_STATE]=series.convertAttribs(normalOptions,normalDefaults);// HOVER_STATE and SELECT_STATE states inherit from normal state except the default radius\neach([HOVER_STATE,SELECT_STATE],function(state){seriesPointAttr[state]=series.convertAttribs(stateOptions[state],seriesPointAttr[NORMAL_STATE]);});// set it\nseries.pointAttr=seriesPointAttr;// Generate the point-specific attribute collections if specific point\n// options are given. If not, create a referance to the series wide point\n// attributes\ni=points.length;if(!turboThreshold||i<turboThreshold||hasPointSpecificOptions){while(i--){point=points[i];normalOptions=point.options&&point.options.marker||point.options;if(normalOptions&&normalOptions.enabled===false){normalOptions.radius=0;}zoneColor=null;if(zones.length){j=0;threshold=zones[j];while(point[zoneAxis]>=threshold.value){threshold=zones[++j];}point.color=point.fillColor=zoneColor=pick(threshold.color,series.color);// #3636, #4267, #4430 - inherit color from series, when color is undefined\n}hasPointSpecificOptions=seriesOptions.colorByPoint||point.color;// #868\n// check if the point has specific visual options\nif(point.options){for(key in pointAttrToOptions){if(defined(normalOptions[pointAttrToOptions[key]])){hasPointSpecificOptions=true;}}}// a specific marker config object is defined for the individual point:\n// create it's own attribute collection\nif(hasPointSpecificOptions){normalOptions=normalOptions||{};pointAttr=[];stateOptions=normalOptions.states||{};// reassign for individual point\npointStateOptionsHover=stateOptions[HOVER_STATE]=stateOptions[HOVER_STATE]||{};// Handle colors for column and pies\nif(!seriesOptions.marker||point.negative&&!pointStateOptionsHover.fillColor&&!stateOptionsHover.fillColor){// column, bar, point or negative threshold for series with markers (#3636)\n// If no hover color is given, brighten the normal color. #1619, #2579\npointStateOptionsHover[series.pointAttrToOptions.fill]=pointStateOptionsHover.color||!point.options.color&&stateOptionsHover[point.negative&&seriesNegativeColor?'negativeColor':'color']||Color(point.color).brighten(pointStateOptionsHover.brightness||stateOptionsHover.brightness).get();}// normal point state inherits series wide normal state\nattr={color:point.color};// #868\nif(!defaultFillColor){// Individual point color or negative color markers (#2219)\nattr.fillColor=point.color;}if(!defaultLineColor){attr.lineColor=point.color;// Bubbles take point color, line markers use white\n}// Color is explicitly set to null or undefined (#1288, #4068)\nif(normalOptions.hasOwnProperty('color')&&!normalOptions.color){delete normalOptions.color;}// When zone is set, but series.states.hover.color is not set, apply zone color on hover, #4670: \nif(zoneColor&&!stateOptionsHover.fillColor){pointStateOptionsHover.fillColor=zoneColor;}pointAttr[NORMAL_STATE]=series.convertAttribs(extend(attr,normalOptions),seriesPointAttr[NORMAL_STATE]);// inherit from point normal and series hover\npointAttr[HOVER_STATE]=series.convertAttribs(stateOptions[HOVER_STATE],seriesPointAttr[HOVER_STATE],pointAttr[NORMAL_STATE]);// inherit from point normal and series hover\npointAttr[SELECT_STATE]=series.convertAttribs(stateOptions[SELECT_STATE],seriesPointAttr[SELECT_STATE],pointAttr[NORMAL_STATE]);// no marker config object is created: copy a reference to the series-wide\n// attribute collection\n}else{pointAttr=seriesPointAttr;}point.pointAttr=pointAttr;}}},/**\n         * Clear DOM objects and free up memory\n         */destroy:function(){var series=this,chart=series.chart,issue134=/AppleWebKit\\/533/.test(userAgent),destroy,i,data=series.data||[],point,prop,axis;// add event hook\nfireEvent(series,'destroy');// remove all events\nremoveEvent(series);// erase from axes\neach(series.axisTypes||[],function(AXIS){axis=series[AXIS];if(axis){erase(axis.series,series);axis.isDirty=axis.forceRedraw=true;}});// remove legend items\nif(series.legendItem){series.chart.legend.destroyItem(series);}// destroy all points with their elements\ni=data.length;while(i--){point=data[i];if(point&&point.destroy){point.destroy();}}series.points=null;// Clear the animation timeout if we are destroying the series during initial animation\nclearTimeout(series.animationTimeout);// Destroy all SVGElements associated to the series\nfor(prop in series){if(series[prop]instanceof SVGElement&&!series[prop].survive){// Survive provides a hook for not destroying\n// issue 134 workaround\ndestroy=issue134&&prop==='group'?'hide':'destroy';series[prop][destroy]();}}// remove from hoverSeries\nif(chart.hoverSeries===series){chart.hoverSeries=null;}erase(chart.series,series);// clear all members\nfor(prop in series){delete series[prop];}},/**\n         * Get the graph path\n         */getGraphPath:function(points,nullsAsZeroes,connectCliffs){var series=this,options=series.options,step=options.step,reversed,graphPath=[],gap;points=points||series.points;// Bottom of a stack is reversed\nreversed=points.reversed;if(reversed){points.reverse();}// Reverse the steps (#5004)\nstep={right:1,center:2}[step]||step&&3;if(step&&reversed){step=4-step;}// Remove invalid points, especially in spline (#5015)\nif(options.connectNulls&&!nullsAsZeroes&&!connectCliffs){points=this.getValidPoints(points);}// Build the line\neach(points,function(point,i){var plotX=point.plotX,plotY=point.plotY,lastPoint=points[i-1],pathToPoint;// the path to this point from the previous\nif((point.leftCliff||lastPoint&&lastPoint.rightCliff)&&!connectCliffs){gap=true;// ... and continue\n}// Line series, nullsAsZeroes is not handled\nif(point.isNull&&!defined(nullsAsZeroes)&&i>0){gap=!options.connectNulls;// Area series, nullsAsZeroes is set\n}else if(point.isNull&&!nullsAsZeroes){gap=true;}else{if(i===0||gap){pathToPoint=[M,point.plotX,point.plotY];}else if(series.getPointSpline){// generate the spline as defined in the SplineSeries object\npathToPoint=series.getPointSpline(points,point,i);}else if(step){if(step===1){// right\npathToPoint=[L,lastPoint.plotX,plotY];}else if(step===2){// center\npathToPoint=[L,(lastPoint.plotX+plotX)/2,lastPoint.plotY,L,(lastPoint.plotX+plotX)/2,plotY];}else{pathToPoint=[L,plotX,lastPoint.plotY];}pathToPoint.push(L,plotX,plotY);}else{// normal line to next point\npathToPoint=[L,plotX,plotY];}graphPath.push.apply(graphPath,pathToPoint);gap=false;}});series.graphPath=graphPath;return graphPath;},/**\n         * Draw the actual graph\n         */drawGraph:function(){var series=this,options=this.options,props=[['graph',options.lineColor||this.color,options.dashStyle]],lineWidth=options.lineWidth,roundCap=options.linecap!=='square',graphPath=(this.gappedPath||this.getGraphPath).call(this),fillColor=this.fillGraph&&this.color||NONE,// polygon series use filled graph\nzones=this.zones;each(zones,function(threshold,i){props.push(['zoneGraph'+i,threshold.color||series.color,threshold.dashStyle||options.dashStyle]);});// Draw the graph\neach(props,function(prop,i){var graphKey=prop[0],graph=series[graphKey],attribs;if(graph){graph.animate({d:graphPath});}else if((lineWidth||fillColor)&&graphPath.length){// #1487\nattribs={stroke:prop[1],'stroke-width':lineWidth,fill:fillColor,zIndex:1// #1069\n};if(prop[2]){attribs.dashstyle=prop[2];}else if(roundCap){attribs['stroke-linecap']=attribs['stroke-linejoin']='round';}series[graphKey]=series.chart.renderer.path(graphPath).attr(attribs).add(series.group).shadow(i<2&&options.shadow);// add shadow to normal series (0) or to first zone (1) #3932\n}});},/**\n         * Clip the graphs into the positive and negative coloured graphs\n         */applyZones:function(){var series=this,chart=this.chart,renderer=chart.renderer,zones=this.zones,translatedFrom,translatedTo,clips=this.clips||[],clipAttr,graph=this.graph,area=this.area,chartSizeMax=mathMax(chart.chartWidth,chart.chartHeight),axis=this[(this.zoneAxis||'y')+'Axis'],extremes,reversed=axis.reversed,inverted=chart.inverted,horiz=axis.horiz,pxRange,pxPosMin,pxPosMax,ignoreZones=false;if(zones.length&&(graph||area)&&axis.min!==UNDEFINED){// The use of the Color Threshold assumes there are no gaps\n// so it is safe to hide the original graph and area\nif(graph){graph.hide();}if(area){area.hide();}// Create the clips\nextremes=axis.getExtremes();each(zones,function(threshold,i){translatedFrom=reversed?horiz?chart.plotWidth:0:horiz?0:axis.toPixels(extremes.min);translatedFrom=mathMin(mathMax(pick(translatedTo,translatedFrom),0),chartSizeMax);translatedTo=mathMin(mathMax(mathRound(axis.toPixels(pick(threshold.value,extremes.max),true)),0),chartSizeMax);if(ignoreZones){translatedFrom=translatedTo=axis.toPixels(extremes.max);}pxRange=Math.abs(translatedFrom-translatedTo);pxPosMin=mathMin(translatedFrom,translatedTo);pxPosMax=mathMax(translatedFrom,translatedTo);if(axis.isXAxis){clipAttr={x:inverted?pxPosMax:pxPosMin,y:0,width:pxRange,height:chartSizeMax};if(!horiz){clipAttr.x=chart.plotHeight-clipAttr.x;}}else{clipAttr={x:0,y:inverted?pxPosMax:pxPosMin,width:chartSizeMax,height:pxRange};if(horiz){clipAttr.y=chart.plotWidth-clipAttr.y;}}/// VML SUPPPORT\nif(chart.inverted&&renderer.isVML){if(axis.isXAxis){clipAttr={x:0,y:reversed?pxPosMin:pxPosMax,height:clipAttr.width,width:chart.chartWidth};}else{clipAttr={x:clipAttr.y-chart.plotLeft-chart.spacingBox.x,y:0,width:clipAttr.height,height:chart.chartHeight};}}/// END OF VML SUPPORT\nif(clips[i]){clips[i].animate(clipAttr);}else{clips[i]=renderer.clipRect(clipAttr);if(graph){series['zoneGraph'+i].clip(clips[i]);}if(area){series['zoneArea'+i].clip(clips[i]);}}// if this zone extends out of the axis, ignore the others\nignoreZones=threshold.value>extremes.max;});this.clips=clips;}},/**\n         * Initialize and perform group inversion on series.group and series.markerGroup\n         */invertGroups:function(){var series=this,chart=series.chart;// Pie, go away (#1736)\nif(!series.xAxis){return;}// A fixed size is needed for inversion to work\nfunction setInvert(){var size={width:series.yAxis.len,height:series.xAxis.len};each(['group','markerGroup'],function(groupName){if(series[groupName]){series[groupName].attr(size).invert();}});}addEvent(chart,'resize',setInvert);// do it on resize\naddEvent(series,'destroy',function(){removeEvent(chart,'resize',setInvert);});// Do it now\nsetInvert();// do it now\n// On subsequent render and redraw, just do setInvert without setting up events again\nseries.invertGroups=setInvert;},/**\n         * General abstraction for creating plot groups like series.group, series.dataLabelsGroup and\n         * series.markerGroup. On subsequent calls, the group will only be adjusted to the updated plot size.\n         */plotGroup:function(prop,name,visibility,zIndex,parent){var group=this[prop],isNew=!group;// Generate it on first call\nif(isNew){this[prop]=group=this.chart.renderer.g(name).attr({zIndex:zIndex||0.1// IE8 and pointer logic use this\n}).add(parent);group.addClass('highcharts-series-'+this.index);}// Place it on first and subsequent (redraw) calls\ngroup.attr({visibility:visibility})[isNew?'attr':'animate'](this.getPlotBox());return group;},/**\n         * Get the translation and scale for the plot area of this series\n         */getPlotBox:function(){var chart=this.chart,xAxis=this.xAxis,yAxis=this.yAxis;// Swap axes for inverted (#2339)\nif(chart.inverted){xAxis=yAxis;yAxis=this.xAxis;}return{translateX:xAxis?xAxis.left:chart.plotLeft,translateY:yAxis?yAxis.top:chart.plotTop,scaleX:1,// #1623\nscaleY:1};},/**\n         * Render the graph and markers\n         */render:function(){var series=this,chart=series.chart,group,options=series.options,// Animation doesn't work in IE8 quirks when the group div is hidden,\n// and looks bad in other oldIE\nanimDuration=!!series.animate&&chart.renderer.isSVG&&animObject(options.animation).duration,visibility=series.visible?'inherit':'hidden',// #2597\nzIndex=options.zIndex,hasRendered=series.hasRendered,chartSeriesGroup=chart.seriesGroup;// the group\ngroup=series.plotGroup('group','series',visibility,zIndex,chartSeriesGroup);series.markerGroup=series.plotGroup('markerGroup','markers',visibility,zIndex,chartSeriesGroup);// initiate the animation\nif(animDuration){series.animate(true);}// cache attributes for shapes\nseries.getAttribs();// SVGRenderer needs to know this before drawing elements (#1089, #1795)\ngroup.inverted=series.isCartesian?chart.inverted:false;// draw the graph if any\nif(series.drawGraph){series.drawGraph();series.applyZones();}each(series.points,function(point){if(point.redraw){point.redraw();}});// draw the data labels (inn pies they go before the points)\nif(series.drawDataLabels){series.drawDataLabels();}// draw the points\nif(series.visible){series.drawPoints();}// draw the mouse tracking area\nif(series.drawTracker&&series.options.enableMouseTracking!==false){series.drawTracker();}// Handle inverted series and tracker groups\nif(chart.inverted){series.invertGroups();}// Initial clipping, must be defined after inverting groups for VML. Applies to columns etc. (#3839).\nif(options.clip!==false&&!series.sharedClipKey&&!hasRendered){group.clip(chart.clipRect);}// Run the animation\nif(animDuration){series.animate();}// Call the afterAnimate function on animation complete (but don't overwrite the animation.complete option\n// which should be available to the user).\nif(!hasRendered){series.animationTimeout=syncTimeout(function(){series.afterAnimate();},animDuration);}series.isDirty=series.isDirtyData=false;// means data is in accordance with what you see\n// (See #322) series.isDirty = series.isDirtyData = false; // means data is in accordance with what you see\nseries.hasRendered=true;},/**\n         * Redraw the series after an update in the axes.\n         */redraw:function(){var series=this,chart=series.chart,wasDirty=series.isDirty||series.isDirtyData,// cache it here as it is set to false in render, but used after\ngroup=series.group,xAxis=series.xAxis,yAxis=series.yAxis;// reposition on resize\nif(group){if(chart.inverted){group.attr({width:chart.plotWidth,height:chart.plotHeight});}group.animate({translateX:pick(xAxis&&xAxis.left,chart.plotLeft),translateY:pick(yAxis&&yAxis.top,chart.plotTop)});}series.translate();series.render();if(wasDirty){// #3868, #3945\ndelete this.kdTree;}},/**\n         * KD Tree && PointSearching Implementation\n         */kdDimensions:1,kdAxisArray:['clientX','plotY'],searchPoint:function(e,compareX){var series=this,xAxis=series.xAxis,yAxis=series.yAxis,inverted=series.chart.inverted;return this.searchKDTree({clientX:inverted?xAxis.len-e.chartY+xAxis.pos:e.chartX-xAxis.pos,plotY:inverted?yAxis.len-e.chartX+yAxis.pos:e.chartY-yAxis.pos},compareX);},buildKDTree:function(){var series=this,dimensions=series.kdDimensions;// Internal function\nfunction _kdtree(points,depth,dimensions){var axis,median,length=points&&points.length;if(length){// alternate between the axis\naxis=series.kdAxisArray[depth%dimensions];// sort point array\npoints.sort(function(a,b){return a[axis]-b[axis];});median=Math.floor(length/2);// build and return nod\nreturn{point:points[median],left:_kdtree(points.slice(0,median),depth+1,dimensions),right:_kdtree(points.slice(median+1),depth+1,dimensions)};}}// Start the recursive build process with a clone of the points array and null points filtered out (#3873)\nfunction startRecursive(){series.kdTree=_kdtree(series.getValidPoints(null,!series.directTouch// For line-type series restrict to plot area, but column-type series not (#3916, #4511)\n),dimensions,dimensions);}delete series.kdTree;// For testing tooltips, don't build async\nsyncTimeout(startRecursive,series.options.kdNow?0:1);},searchKDTree:function(point,compareX){var series=this,kdX=this.kdAxisArray[0],kdY=this.kdAxisArray[1],kdComparer=compareX?'distX':'dist';// Set the one and two dimensional distance on the point object\nfunction setDistance(p1,p2){var x=defined(p1[kdX])&&defined(p2[kdX])?Math.pow(p1[kdX]-p2[kdX],2):null,y=defined(p1[kdY])&&defined(p2[kdY])?Math.pow(p1[kdY]-p2[kdY],2):null,r=(x||0)+(y||0);p2.dist=defined(r)?Math.sqrt(r):Number.MAX_VALUE;p2.distX=defined(x)?Math.sqrt(x):Number.MAX_VALUE;}function _search(search,tree,depth,dimensions){var point=tree.point,axis=series.kdAxisArray[depth%dimensions],tdist,sideA,sideB,ret=point,nPoint1,nPoint2;setDistance(search,point);// Pick side based on distance to splitting point\ntdist=search[axis]-point[axis];sideA=tdist<0?'left':'right';sideB=tdist<0?'right':'left';// End of tree\nif(tree[sideA]){nPoint1=_search(search,tree[sideA],depth+1,dimensions);ret=nPoint1[kdComparer]<ret[kdComparer]?nPoint1:point;}if(tree[sideB]){// compare distance to current best to splitting point to decide wether to check side B or not\nif(Math.sqrt(tdist*tdist)<ret[kdComparer]){nPoint2=_search(search,tree[sideB],depth+1,dimensions);ret=nPoint2[kdComparer]<ret[kdComparer]?nPoint2:ret;}}return ret;}if(!this.kdTree){this.buildKDTree();}if(this.kdTree){return _search(point,this.kdTree,this.kdDimensions,this.kdDimensions);}}};// end Series prototype\n/**\n     * The class for stack items\n     */function StackItem(axis,options,isNegative,x,stackOption){var inverted=axis.chart.inverted;this.axis=axis;// Tells if the stack is negative\nthis.isNegative=isNegative;// Save the options to be able to style the label\nthis.options=options;// Save the x value to be able to position the label later\nthis.x=x;// Initialize total value\nthis.total=null;// This will keep each points' extremes stored by series.index and point index\nthis.points={};// Save the stack option on the series configuration object, and whether to treat it as percent\nthis.stack=stackOption;this.leftCliff=0;this.rightCliff=0;// The align options and text align varies on whether the stack is negative and\n// if the chart is inverted or not.\n// First test the user supplied value, then use the dynamic.\nthis.alignOptions={align:options.align||(inverted?isNegative?'left':'right':'center'),verticalAlign:options.verticalAlign||(inverted?'middle':isNegative?'bottom':'top'),y:pick(options.y,inverted?4:isNegative?14:-6),x:pick(options.x,inverted?isNegative?-6:6:0)};this.textAlign=options.textAlign||(inverted?isNegative?'right':'left':'center');}StackItem.prototype={destroy:function(){destroyObjectProperties(this,this.axis);},/**\n         * Renders the stack total label and adds it to the stack label group.\n         */render:function(group){var options=this.options,formatOption=options.format,str=formatOption?format(formatOption,this):options.formatter.call(this);// format the text in the label\n// Change the text to reflect the new total and set visibility to hidden in case the serie is hidden\nif(this.label){this.label.attr({text:str,visibility:'hidden'});// Create new label\n}else{this.label=this.axis.chart.renderer.text(str,null,null,options.useHTML)// dummy positions, actual position updated with setOffset method in columnseries\n.css(options.style)// apply style\n.attr({align:this.textAlign,// fix the text-anchor\nrotation:options.rotation,// rotation\nvisibility:HIDDEN// hidden until setOffset is called\n}).add(group);// add to the labels-group\n}},/**\n         * Sets the offset that the stack has from the x value and repositions the label.\n         */setOffset:function(xOffset,xWidth){var stackItem=this,axis=stackItem.axis,chart=axis.chart,inverted=chart.inverted,reversed=axis.reversed,neg=this.isNegative&&!reversed||!this.isNegative&&reversed,// #4056\ny=axis.translate(axis.usePercentage?100:this.total,0,0,0,1),// stack value translated mapped to chart coordinates\nyZero=axis.translate(0),// stack origin\nh=mathAbs(y-yZero),// stack height\nx=chart.xAxis[0].translate(this.x)+xOffset,// stack x position\nplotHeight=chart.plotHeight,stackBox={// this is the box for the complete stack\nx:inverted?neg?y:y-h:x,y:inverted?plotHeight-x-xWidth:neg?plotHeight-y-h:plotHeight-y,width:inverted?h:xWidth,height:inverted?xWidth:h},label=this.label,alignAttr;if(label){label.align(this.alignOptions,null,stackBox);// align the label to the box\n// Set visibility (#678)\nalignAttr=label.alignAttr;label[this.options.crop===false||chart.isInsidePlot(alignAttr.x,alignAttr.y)?'show':'hide'](true);}}};/**\n     * Generate stacks for each series and calculate stacks total values\n     */Chart.prototype.getStacks=function(){var chart=this;// reset stacks for each yAxis\neach(chart.yAxis,function(axis){if(axis.stacks&&axis.hasVisibleSeries){axis.oldStacks=axis.stacks;}});each(chart.series,function(series){if(series.options.stacking&&(series.visible===true||chart.options.chart.ignoreHiddenSeries===false)){series.stackKey=series.type+pick(series.options.stack,'');}});};// Stacking methods defined on the Axis prototype\n/**\n     * Build the stacks from top down\n     */Axis.prototype.buildStacks=function(){var axisSeries=this.series,series,reversedStacks=pick(this.options.reversedStacks,true),len=axisSeries.length,i;if(!this.isXAxis){this.usePercentage=false;i=len;while(i--){axisSeries[reversedStacks?i:len-i-1].setStackedPoints();}i=len;while(i--){series=axisSeries[reversedStacks?i:len-i-1];if(series.setStackCliffs){series.setStackCliffs();}}// Loop up again to compute percent stack\nif(this.usePercentage){for(i=0;i<len;i++){axisSeries[i].setPercentStacks();}}}};Axis.prototype.renderStackTotals=function(){var axis=this,chart=axis.chart,renderer=chart.renderer,stacks=axis.stacks,stackKey,oneStack,stackCategory,stackTotalGroup=axis.stackTotalGroup;// Create a separate group for the stack total labels\nif(!stackTotalGroup){axis.stackTotalGroup=stackTotalGroup=renderer.g('stack-labels').attr({visibility:VISIBLE,zIndex:6}).add();}// plotLeft/Top will change when y axis gets wider so we need to translate the\n// stackTotalGroup at every render call. See bug #506 and #516\nstackTotalGroup.translate(chart.plotLeft,chart.plotTop);// Render each stack total\nfor(stackKey in stacks){oneStack=stacks[stackKey];for(stackCategory in oneStack){oneStack[stackCategory].render(stackTotalGroup);}}};/**\n     * Set all the stacks to initial states and destroy unused ones.\n     */Axis.prototype.resetStacks=function(){var stacks=this.stacks,type,i;if(!this.isXAxis){for(type in stacks){for(i in stacks[type]){// Clean up memory after point deletion (#1044, #4320)\nif(stacks[type][i].touched<this.stacksTouched){stacks[type][i].destroy();delete stacks[type][i];// Reset stacks\n}else{stacks[type][i].total=null;stacks[type][i].cum=0;}}}}};Axis.prototype.cleanStacks=function(){var stacks,type,i;if(!this.isXAxis){if(this.oldStacks){stacks=this.stacks=this.oldStacks;}// reset stacks\nfor(type in stacks){for(i in stacks[type]){stacks[type][i].cum=stacks[type][i].total;}}}};// Stacking methods defnied for Series prototype\n/**\n     * Adds series' points value to corresponding stack\n     */Series.prototype.setStackedPoints=function(){if(!this.options.stacking||this.visible!==true&&this.chart.options.chart.ignoreHiddenSeries!==false){return;}var series=this,xData=series.processedXData,yData=series.processedYData,stackedYData=[],yDataLength=yData.length,seriesOptions=series.options,threshold=seriesOptions.threshold,stackThreshold=seriesOptions.startFromThreshold?threshold:0,stackOption=seriesOptions.stack,stacking=seriesOptions.stacking,stackKey=series.stackKey,negKey='-'+stackKey,negStacks=series.negStacks,yAxis=series.yAxis,stacks=yAxis.stacks,oldStacks=yAxis.oldStacks,stackIndicator,isNegative,stack,other,key,pointKey,i,x,y;yAxis.stacksTouched+=1;// loop over the non-null y values and read them into a local array\nfor(i=0;i<yDataLength;i++){x=xData[i];y=yData[i];stackIndicator=series.getStackIndicator(stackIndicator,x,series.index);pointKey=stackIndicator.key;// Read stacked values into a stack based on the x value,\n// the sign of y and the stack key. Stacking is also handled for null values (#739)\nisNegative=negStacks&&y<(stackThreshold?0:threshold);key=isNegative?negKey:stackKey;// Create empty object for this stack if it doesn't exist yet\nif(!stacks[key]){stacks[key]={};}// Initialize StackItem for this x\nif(!stacks[key][x]){if(oldStacks[key]&&oldStacks[key][x]){stacks[key][x]=oldStacks[key][x];stacks[key][x].total=null;}else{stacks[key][x]=new StackItem(yAxis,yAxis.options.stackLabels,isNegative,x,stackOption);}}// If the StackItem doesn't exist, create it first\nstack=stacks[key][x];if(y!==null){stack.points[pointKey]=stack.points[series.index]=[pick(stack.cum,stackThreshold)];stack.touched=yAxis.stacksTouched;// In area charts, if there are multiple points on the same X value, let the \n// area fill the full span of those points\nif(stackIndicator.index>0&&series.singleStacks===false){stack.points[pointKey][0]=stack.points[series.index+','+x+',0'][0];}}// Add value to the stack total\nif(stacking==='percent'){// Percent stacked column, totals are the same for the positive and negative stacks\nother=isNegative?stackKey:negKey;if(negStacks&&stacks[other]&&stacks[other][x]){other=stacks[other][x];stack.total=other.total=mathMax(other.total,stack.total)+mathAbs(y)||0;// Percent stacked areas\n}else{stack.total=correctFloat(stack.total+(mathAbs(y)||0));}}else{stack.total=correctFloat(stack.total+(y||0));}stack.cum=pick(stack.cum,stackThreshold)+(y||0);if(y!==null){stack.points[pointKey].push(stack.cum);stackedYData[i]=stack.cum;}}if(stacking==='percent'){yAxis.usePercentage=true;}this.stackedYData=stackedYData;// To be used in getExtremes\n// Reset old stacks\nyAxis.oldStacks={};};/**\n     * Iterate over all stacks and compute the absolute values to percent\n     */Series.prototype.setPercentStacks=function(){var series=this,stackKey=series.stackKey,stacks=series.yAxis.stacks,processedXData=series.processedXData,stackIndicator;each([stackKey,'-'+stackKey],function(key){var i=processedXData.length,x,stack,pointExtremes,totalFactor;while(i--){x=processedXData[i];stackIndicator=series.getStackIndicator(stackIndicator,x,series.index);stack=stacks[key]&&stacks[key][x];pointExtremes=stack&&stack.points[stackIndicator.key];if(pointExtremes){totalFactor=stack.total?100/stack.total:0;pointExtremes[0]=correctFloat(pointExtremes[0]*totalFactor);// Y bottom value\npointExtremes[1]=correctFloat(pointExtremes[1]*totalFactor);// Y value\nseries.stackedYData[i]=pointExtremes[1];}}});};/**\n    * Get stack indicator, according to it's x-value, to determine points with the same x-value\n    */Series.prototype.getStackIndicator=function(stackIndicator,x,index){if(!defined(stackIndicator)||stackIndicator.x!==x){stackIndicator={x:x,index:0};}else{stackIndicator.index++;}stackIndicator.key=[index,x,stackIndicator.index].join(',');return stackIndicator;};// Extend the Chart prototype for dynamic methods\nextend(Chart.prototype,{/**\n         * Add a series dynamically after  time\n         *\n         * @param {Object} options The config options\n         * @param {Boolean} redraw Whether to redraw the chart after adding. Defaults to true.\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         *\n         * @return {Object} series The newly created series object\n         */addSeries:function(options,redraw,animation){var series,chart=this;if(options){redraw=pick(redraw,true);// defaults to true\nfireEvent(chart,'addSeries',{options:options},function(){series=chart.initSeries(options);chart.isDirtyLegend=true;// the series array is out of sync with the display\nchart.linkSeries();if(redraw){chart.redraw(animation);}});}return series;},/**\n         * Add an axis to the chart\n         * @param {Object} options The axis option\n         * @param {Boolean} isX Whether it is an X axis or a value axis\n         */addAxis:function(options,isX,redraw,animation){var key=isX?'xAxis':'yAxis',chartOptions=this.options,userOptions=merge(options,{index:this[key].length,isX:isX});new Axis(this,userOptions);// eslint-disable-line no-new\n// Push the new axis options to the chart options\nchartOptions[key]=splat(chartOptions[key]||{});chartOptions[key].push(userOptions);if(pick(redraw,true)){this.redraw(animation);}},/**\n         * Dim the chart and show a loading text or symbol\n         * @param {String} str An optional text to show in the loading label instead of the default one\n         */showLoading:function(str){var chart=this,options=chart.options,loadingDiv=chart.loadingDiv,loadingOptions=options.loading,setLoadingSize=function(){if(loadingDiv){css(loadingDiv,{left:chart.plotLeft+PX,top:chart.plotTop+PX,width:chart.plotWidth+PX,height:chart.plotHeight+PX});}};// create the layer at the first call\nif(!loadingDiv){chart.loadingDiv=loadingDiv=createElement(DIV,{className:PREFIX+'loading'},extend(loadingOptions.style,{zIndex:10,display:NONE}),chart.container);chart.loadingSpan=createElement('span',null,loadingOptions.labelStyle,loadingDiv);addEvent(chart,'redraw',setLoadingSize);// #1080\n}// update text\nchart.loadingSpan.innerHTML=str||options.lang.loading;// show it\nif(!chart.loadingShown){css(loadingDiv,{opacity:0,display:''});animate(loadingDiv,{opacity:loadingOptions.style.opacity},{duration:loadingOptions.showDuration||0});chart.loadingShown=true;}setLoadingSize();},/**\n         * Hide the loading layer\n         */hideLoading:function(){var options=this.options,loadingDiv=this.loadingDiv;if(loadingDiv){animate(loadingDiv,{opacity:0},{duration:options.loading.hideDuration||100,complete:function(){css(loadingDiv,{display:NONE});}});}this.loadingShown=false;}});// extend the Point prototype for dynamic methods\nextend(Point.prototype,{/**\n         * Update the point with new options (typically x/y data) and optionally redraw the series.\n         *\n         * @param {Object} options Point options as defined in the series.data array\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         *\n         */update:function(options,redraw,animation,runEvent){var point=this,series=point.series,graphic=point.graphic,i,chart=series.chart,seriesOptions=series.options,names=series.xAxis&&series.xAxis.names;redraw=pick(redraw,true);function update(){point.applyOptions(options);// Update visuals\nif(point.y===null&&graphic){// #4146\npoint.graphic=graphic.destroy();}if(isObject(options)&&!isArray(options)){// Defer the actual redraw until getAttribs has been called (#3260)\npoint.redraw=function(){if(graphic&&graphic.element){if(options&&options.marker&&options.marker.symbol){point.graphic=graphic.destroy();}}if(options&&options.dataLabels&&point.dataLabel){// #2468\npoint.dataLabel=point.dataLabel.destroy();}point.redraw=null;};}// record changes in the parallel arrays\ni=point.index;series.updateParallelArrays(point,i);if(names&&point.name){names[point.x]=point.name;}// Record the options to options.data. If there is an object from before,\n// use point options, otherwise use raw options. (#4701)\nseriesOptions.data[i]=isObject(seriesOptions.data[i])&&!isArray(seriesOptions.data[i])?point.options:options;// redraw\nseries.isDirty=series.isDirtyData=true;if(!series.fixedBox&&series.hasCartesianSeries){// #1906, #2320\nchart.isDirtyBox=true;}if(seriesOptions.legendType==='point'){// #1831, #1885\nchart.isDirtyLegend=true;}if(redraw){chart.redraw(animation);}}// Fire the event with a default handler of doing the update\nif(runEvent===false){// When called from setData\nupdate();}else{point.firePointEvent('update',{options:options},update);}},/**\n         * Remove a point and optionally redraw the series and if necessary the axes\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */remove:function(redraw,animation){this.series.removePoint(inArray(this,this.series.data),redraw,animation);}});// Extend the series prototype for dynamic methods\nextend(Series.prototype,{/**\n         * Add a point dynamically after chart load time\n         * @param {Object} options Point options as given in series.data\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean} shift If shift is true, a point is shifted off the start\n         *    of the series as one is appended to the end.\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */addPoint:function(options,redraw,shift,animation){var series=this,seriesOptions=series.options,data=series.data,graph=series.graph,area=series.area,chart=series.chart,names=series.xAxis&&series.xAxis.names,currentShift=graph&&graph.shift||0,shiftShapes=['graph','area'],dataOptions=seriesOptions.data,point,isInTheMiddle,xData=series.xData,i,x;setAnimation(animation,chart);// Make graph animate sideways\nif(shift){i=series.zones.length;while(i--){shiftShapes.push('zoneGraph'+i,'zoneArea'+i);}each(shiftShapes,function(shape){if(series[shape]){series[shape].shift=currentShift+(seriesOptions.step?2:1);}});}if(area){area.isArea=true;// needed in animation, both with and without shift\n}// Optional redraw, defaults to true\nredraw=pick(redraw,true);// Get options and push the point to xData, yData and series.options. In series.generatePoints\n// the Point instance will be created on demand and pushed to the series.data array.\npoint={series:series};series.pointClass.prototype.applyOptions.apply(point,[options]);x=point.x;// Get the insertion point\ni=xData.length;if(series.requireSorting&&x<xData[i-1]){isInTheMiddle=true;while(i&&xData[i-1]>x){i--;}}series.updateParallelArrays(point,'splice',i,0,0);// insert undefined item\nseries.updateParallelArrays(point,i);// update it\nif(names&&point.name){names[x]=point.name;}dataOptions.splice(i,0,options);if(isInTheMiddle){series.data.splice(i,0,null);series.processData();}// Generate points to be added to the legend (#1329)\nif(seriesOptions.legendType==='point'){series.generatePoints();}// Shift the first point off the parallel arrays\nif(shift){if(data[0]&&data[0].remove){data[0].remove(false);}else{data.shift();series.updateParallelArrays(point,'shift');dataOptions.shift();}}// redraw\nseries.isDirty=true;series.isDirtyData=true;if(redraw){series.getAttribs();// #1937\nchart.redraw();}},/**\n         * Remove a point (rendered or not), by index\n         */removePoint:function(i,redraw,animation){var series=this,data=series.data,point=data[i],points=series.points,chart=series.chart,remove=function(){if(points&&points.length===data.length){// #4935\npoints.splice(i,1);}data.splice(i,1);series.options.data.splice(i,1);series.updateParallelArrays(point||{series:series},'splice',i,1);if(point){point.destroy();}// redraw\nseries.isDirty=true;series.isDirtyData=true;if(redraw){chart.redraw();}};setAnimation(animation,chart);redraw=pick(redraw,true);// Fire the event with a default handler of removing the point\nif(point){point.firePointEvent('remove',null,remove);}else{remove();}},/**\n         * Remove a series and optionally redraw the chart\n         *\n         * @param {Boolean} redraw Whether to redraw the chart or wait for an explicit call\n         * @param {Boolean|Object} animation Whether to apply animation, and optionally animation\n         *    configuration\n         */remove:function(redraw,animation){var series=this,chart=series.chart;// Fire the event with a default handler of removing the point\nfireEvent(series,'remove',null,function(){// Destroy elements\nseries.destroy();// Redraw\nchart.isDirtyLegend=chart.isDirtyBox=true;chart.linkSeries();if(pick(redraw,true)){chart.redraw(animation);}});},/**\n         * Update the series with a new set of options\n         */update:function(newOptions,redraw){var series=this,chart=this.chart,// must use user options when changing type because this.options is merged\n// in with type specific plotOptions\noldOptions=this.userOptions,oldType=this.type,proto=seriesTypes[oldType].prototype,preserve=['group','markerGroup','dataLabelsGroup'],n;// If we're changing type or zIndex, create new groups (#3380, #3404)\nif(newOptions.type&&newOptions.type!==oldType||newOptions.zIndex!==undefined){preserve.length=0;}// Make sure groups are not destroyed (#3094)\neach(preserve,function(prop){preserve[prop]=series[prop];delete series[prop];});// Do the merge, with some forced options\nnewOptions=merge(oldOptions,{animation:false,index:this.index,pointStart:this.xData[0]// when updating after addPoint\n},{data:this.options.data},newOptions);// Destroy the series and delete all properties. Reinsert all methods\n// and properties from the new type prototype (#2270, #3719)\nthis.remove(false);for(n in proto){this[n]=UNDEFINED;}extend(this,seriesTypes[newOptions.type||oldType].prototype);// Re-register groups (#3094)\neach(preserve,function(prop){series[prop]=preserve[prop];});this.init(chart,newOptions);chart.linkSeries();// Links are lost in this.remove (#3028)\nif(pick(redraw,true)){chart.redraw(false);}}});// Extend the Axis.prototype for dynamic methods\nextend(Axis.prototype,{/**\n         * Update the axis with a new options structure\n         */update:function(newOptions,redraw){var chart=this.chart;newOptions=chart.options[this.coll][this.options.index]=merge(this.userOptions,newOptions);this.destroy(true);this._addedPlotLB=this.chart._labelPanes=UNDEFINED;// #1611, #2887, #4314\nthis.init(chart,extend(newOptions,{events:UNDEFINED}));chart.isDirtyBox=true;if(pick(redraw,true)){chart.redraw();}},/**\n         * Remove the axis from the chart\n         */remove:function(redraw){var chart=this.chart,key=this.coll,// xAxis or yAxis\naxisSeries=this.series,i=axisSeries.length;// Remove associated series (#2687)\nwhile(i--){if(axisSeries[i]){axisSeries[i].remove(false);}}// Remove the axis\nerase(chart.axes,this);erase(chart[key],this);chart.options[key].splice(this.options.index,1);each(chart[key],function(axis,i){// Re-index, #1706\naxis.options.index=i;});this.destroy();chart.isDirtyBox=true;if(pick(redraw,true)){chart.redraw();}},/**\n         * Update the axis title by options\n         */setTitle:function(newTitleOptions,redraw){this.update({title:newTitleOptions},redraw);},/**\n         * Set new axis categories and optionally redraw\n         * @param {Array} categories\n         * @param {Boolean} redraw\n         */setCategories:function(categories,redraw){this.update({categories:categories},redraw);}});/**\n     * LineSeries object\n     */var LineSeries=extendClass(Series);seriesTypes.line=LineSeries;/**\n     * Set the default options for area\n     */defaultPlotOptions.area=merge(defaultSeriesOptions,{softThreshold:false,threshold:0// trackByArea: false,\n// lineColor: null, // overrides color, but lets fillColor be unaltered\n// fillOpacity: 0.75,\n// fillColor: null\n});/**\n     * AreaSeries object\n     */var AreaSeries=extendClass(Series,{type:'area',singleStacks:false,/** \n         * Return an array of stacked points, where null and missing points are replaced by \n         * dummy points in order for gaps to be drawn correctly in stacks.\n         */getStackPoints:function(){var series=this,segment=[],keys=[],xAxis=this.xAxis,yAxis=this.yAxis,stack=yAxis.stacks[this.stackKey],pointMap={},points=this.points,seriesIndex=series.index,yAxisSeries=yAxis.series,seriesLength=yAxisSeries.length,visibleSeries,upOrDown=pick(yAxis.options.reversedStacks,true)?1:-1,i,x;if(this.options.stacking){// Create a map where we can quickly look up the points by their X value.\nfor(i=0;i<points.length;i++){pointMap[points[i].x]=points[i];}// Sort the keys (#1651)\nfor(x in stack){if(stack[x].total!==null){// nulled after switching between grouping and not (#1651, #2336)\nkeys.push(x);}}keys.sort(function(a,b){return a-b;});visibleSeries=map(yAxisSeries,function(){return this.visible;});each(keys,function(x,idx){var y=0,stackPoint,stackedValues;if(pointMap[x]&&!pointMap[x].isNull){segment.push(pointMap[x]);// Find left and right cliff. -1 goes left, 1 goes right.\neach([-1,1],function(direction){var nullName=direction===1?'rightNull':'leftNull',cliffName=direction===1?'rightCliff':'leftCliff',cliff=0,otherStack=stack[keys[idx+direction]];// If there is a stack next to this one, to the left or to the right...\nif(otherStack){i=seriesIndex;while(i>=0&&i<seriesLength){// Can go either up or down, depending on reversedStacks\nstackPoint=otherStack.points[i];if(!stackPoint){// If the next point in this series is missing, mark the point\n// with point.leftNull or point.rightNull = true.\nif(i===seriesIndex){pointMap[x][nullName]=true;// If there are missing points in the next stack in any of the \n// series below this one, we need to substract the missing values\n// and add a hiatus to the left or right.\n}else if(visibleSeries[i]){stackedValues=stack[x].points[i];if(stackedValues){cliff-=stackedValues[1]-stackedValues[0];}}}// When reversedStacks is true, loop up, else loop down\ni+=upOrDown;}}pointMap[x][cliffName]=cliff;});// There is no point for this X value in this series, so we \n// insert a dummy point in order for the areas to be drawn\n// correctly.\n}else{// Loop down the stack to find the series below this one that has\n// a value (#1991)\ni=seriesIndex;while(i>=0&&i<seriesLength){stackPoint=stack[x].points[i];if(stackPoint){y=stackPoint[1];break;}// When reversedStacks is true, loop up, else loop down\ni+=upOrDown;}y=yAxis.toPixels(y,true);segment.push({isNull:true,plotX:xAxis.toPixels(x,true),plotY:y,yBottom:y});}});}return segment;},getGraphPath:function(points){var getGraphPath=Series.prototype.getGraphPath,graphPath,options=this.options,stacking=options.stacking,yAxis=this.yAxis,topPath,//topPoints = [],\nbottomPath,bottomPoints=[],graphPoints=[],seriesIndex=this.index,i,areaPath,plotX,stacks=yAxis.stacks[this.stackKey],threshold=options.threshold,translatedThreshold=yAxis.getThreshold(options.threshold),isNull,yBottom,connectNulls=options.connectNulls||stacking==='percent',/**\n                 * To display null points in underlying stacked series, this series graph must be \n                 * broken, and the area also fall down to fill the gap left by the null point. #2069\n                 */addDummyPoints=function(i,otherI,side){var point=points[i],stackedValues=stacking&&stacks[point.x].points[seriesIndex],nullVal=point[side+'Null']||0,cliffVal=point[side+'Cliff']||0,top,bottom,isNull=true;if(cliffVal||nullVal){top=(nullVal?stackedValues[0]:stackedValues[1])+cliffVal;bottom=stackedValues[0]+cliffVal;isNull=!!nullVal;}else if(!stacking&&points[otherI]&&points[otherI].isNull){top=bottom=threshold;}// Add to the top and bottom line of the area\nif(top!==undefined){graphPoints.push({plotX:plotX,plotY:top===null?translatedThreshold:yAxis.getThreshold(top),isNull:isNull});bottomPoints.push({plotX:plotX,plotY:bottom===null?translatedThreshold:yAxis.getThreshold(bottom)});}};// Find what points to use\npoints=points||this.points;// Fill in missing points\nif(stacking){points=this.getStackPoints();}for(i=0;i<points.length;i++){isNull=points[i].isNull;plotX=pick(points[i].rectPlotX,points[i].plotX);yBottom=pick(points[i].yBottom,translatedThreshold);if(!isNull||connectNulls){if(!connectNulls){addDummyPoints(i,i-1,'left');}if(!(isNull&&!stacking&&connectNulls)){// Skip null point when stacking is false and connectNulls true\ngraphPoints.push(points[i]);bottomPoints.push({x:i,plotX:plotX,plotY:yBottom});}if(!connectNulls){addDummyPoints(i,i+1,'right');}}}topPath=getGraphPath.call(this,graphPoints,true,true);bottomPoints.reversed=true;bottomPath=getGraphPath.call(this,bottomPoints,true,true);if(bottomPath.length){bottomPath[0]=L;}areaPath=topPath.concat(bottomPath);graphPath=getGraphPath.call(this,graphPoints,false,connectNulls);// TODO: don't set leftCliff and rightCliff when connectNulls?\nthis.areaPath=areaPath;return graphPath;},/**\n         * Draw the graph and the underlying area. This method calls the Series base\n         * function and adds the area. The areaPath is calculated in the getSegmentPath\n         * method called from Series.prototype.drawGraph.\n         */drawGraph:function(){// Define or reset areaPath\nthis.areaPath=[];// Call the base method\nSeries.prototype.drawGraph.apply(this);// Define local variables\nvar series=this,areaPath=this.areaPath,options=this.options,zones=this.zones,props=[['area',this.color,options.fillColor]];// area name, main color, fill color\neach(zones,function(threshold,i){props.push(['zoneArea'+i,threshold.color||series.color,threshold.fillColor||options.fillColor]);});each(props,function(prop){var areaKey=prop[0],area=series[areaKey],attr;// Create or update the area\nif(area){// update\narea.animate({d:areaPath});}else{// create\nattr={fill:prop[2]||prop[1],zIndex:0// #1069\n};if(!prop[2]){attr['fill-opacity']=pick(options.fillOpacity,0.75);}series[areaKey]=series.chart.renderer.path(areaPath).attr(attr).add(series.group);}});},drawLegendSymbol:LegendSymbolMixin.drawRectangle});seriesTypes.area=AreaSeries;/**\n     * Set the default options for spline\n     */defaultPlotOptions.spline=merge(defaultSeriesOptions);/**\n     * SplineSeries object\n     */var SplineSeries=extendClass(Series,{type:'spline',/**\n         * Get the spline segment from a given point's previous neighbour to the given point\n         */getPointSpline:function(points,point,i){var smoothing=1.5,// 1 means control points midway between points, 2 means 1/3 from the point, 3 is 1/4 etc\ndenom=smoothing+1,plotX=point.plotX,plotY=point.plotY,lastPoint=points[i-1],nextPoint=points[i+1],leftContX,leftContY,rightContX,rightContY,ret;// Find control points\nif(lastPoint&&!lastPoint.isNull&&nextPoint&&!nextPoint.isNull){var lastX=lastPoint.plotX,lastY=lastPoint.plotY,nextX=nextPoint.plotX,nextY=nextPoint.plotY,correction=0;leftContX=(smoothing*plotX+lastX)/denom;leftContY=(smoothing*plotY+lastY)/denom;rightContX=(smoothing*plotX+nextX)/denom;rightContY=(smoothing*plotY+nextY)/denom;// Have the two control points make a straight line through main point\nif(rightContX!==leftContX){// #5016, division by zero\ncorrection=(rightContY-leftContY)*(rightContX-plotX)/(rightContX-leftContX)+plotY-rightContY;}leftContY+=correction;rightContY+=correction;// to prevent false extremes, check that control points are between\n// neighbouring points' y values\nif(leftContY>lastY&&leftContY>plotY){leftContY=mathMax(lastY,plotY);rightContY=2*plotY-leftContY;// mirror of left control point\n}else if(leftContY<lastY&&leftContY<plotY){leftContY=mathMin(lastY,plotY);rightContY=2*plotY-leftContY;}if(rightContY>nextY&&rightContY>plotY){rightContY=mathMax(nextY,plotY);leftContY=2*plotY-rightContY;}else if(rightContY<nextY&&rightContY<plotY){rightContY=mathMin(nextY,plotY);leftContY=2*plotY-rightContY;}// record for drawing in next point\npoint.rightContX=rightContX;point.rightContY=rightContY;}// Visualize control points for debugging\n/*\n            if (leftContX) {\n                this.chart.renderer.circle(leftContX + this.chart.plotLeft, leftContY + this.chart.plotTop, 2)\n                    .attr({\n                        stroke: 'red',\n                        'stroke-width': 1,\n                        fill: 'none'\n                    })\n                    .add();\n                this.chart.renderer.path(['M', leftContX + this.chart.plotLeft, leftContY + this.chart.plotTop,\n                    'L', plotX + this.chart.plotLeft, plotY + this.chart.plotTop])\n                    .attr({\n                        stroke: 'red',\n                        'stroke-width': 1\n                    })\n                    .add();\n                this.chart.renderer.circle(rightContX + this.chart.plotLeft, rightContY + this.chart.plotTop, 2)\n                    .attr({\n                        stroke: 'green',\n                        'stroke-width': 1,\n                        fill: 'none'\n                    })\n                    .add();\n                this.chart.renderer.path(['M', rightContX + this.chart.plotLeft, rightContY + this.chart.plotTop,\n                    'L', plotX + this.chart.plotLeft, plotY + this.chart.plotTop])\n                    .attr({\n                        stroke: 'green',\n                        'stroke-width': 1\n                    })\n                    .add();\n            }\n            // */ret=['C',pick(lastPoint.rightContX,lastPoint.plotX),pick(lastPoint.rightContY,lastPoint.plotY),pick(leftContX,plotX),pick(leftContY,plotY),plotX,plotY];lastPoint.rightContX=lastPoint.rightContY=null;// reset for updating series later\nreturn ret;}});seriesTypes.spline=SplineSeries;/**\n     * Set the default options for areaspline\n     */defaultPlotOptions.areaspline=merge(defaultPlotOptions.area);/**\n     * AreaSplineSeries object\n     */var areaProto=AreaSeries.prototype,AreaSplineSeries=extendClass(SplineSeries,{type:'areaspline',getStackPoints:areaProto.getStackPoints,getGraphPath:areaProto.getGraphPath,setStackCliffs:areaProto.setStackCliffs,drawGraph:areaProto.drawGraph,drawLegendSymbol:LegendSymbolMixin.drawRectangle});seriesTypes.areaspline=AreaSplineSeries;/**\n     * Set the default options for column\n     */defaultPlotOptions.column=merge(defaultSeriesOptions,{borderColor:'#FFFFFF',//borderWidth: 1,\nborderRadius:0,//colorByPoint: undefined,\ngroupPadding:0.2,//grouping: true,\nmarker:null,// point options are specified in the base options\npointPadding:0.1,//pointWidth: null,\nminPointLength:0,cropThreshold:50,// when there are more points, they will not animate out of the chart on xAxis.setExtremes\npointRange:null,// null means auto, meaning 1 in a categorized axis and least distance between points if not categories\nstates:{hover:{brightness:0.1,shadow:false,halo:false},select:{color:'#C0C0C0',borderColor:'#000000',shadow:false}},dataLabels:{align:null,// auto\nverticalAlign:null,// auto\ny:null},softThreshold:false,startFromThreshold:true,// false doesn't work well: http://jsfiddle.net/highcharts/hz8fopan/14/\nstickyTracking:false,tooltip:{distance:6},threshold:0});/**\n     * ColumnSeries object\n     */var ColumnSeries=extendClass(Series,{type:'column',pointAttrToOptions:{// mapping between SVG attributes and the corresponding options\nstroke:'borderColor',fill:'color',r:'borderRadius'},cropShoulder:0,directTouch:true,// When tooltip is not shared, this series (and derivatives) requires direct touch/hover. KD-tree does not apply.\ntrackerGroups:['group','dataLabelsGroup'],negStacks:true,// use separate negative stacks, unlike area stacks where a negative\n// point is substracted from previous (#1910)\n/**\n         * Initialize the series\n         */init:function(){Series.prototype.init.apply(this,arguments);var series=this,chart=series.chart;// if the series is added dynamically, force redraw of other\n// series affected by a new column\nif(chart.hasRendered){each(chart.series,function(otherSeries){if(otherSeries.type===series.type){otherSeries.isDirty=true;}});}},/**\n         * Return the width and x offset of the columns adjusted for grouping, groupPadding, pointPadding,\n         * pointWidth etc.\n         */getColumnMetrics:function(){var series=this,options=series.options,xAxis=series.xAxis,yAxis=series.yAxis,reversedXAxis=xAxis.reversed,stackKey,stackGroups={},columnCount=0;// Get the total number of column type series.\n// This is called on every series. Consider moving this logic to a\n// chart.orderStacks() function and call it on init, addSeries and removeSeries\nif(options.grouping===false){columnCount=1;}else{each(series.chart.series,function(otherSeries){var otherOptions=otherSeries.options,otherYAxis=otherSeries.yAxis,columnIndex;if(otherSeries.type===series.type&&otherSeries.visible&&yAxis.len===otherYAxis.len&&yAxis.pos===otherYAxis.pos){// #642, #2086\nif(otherOptions.stacking){stackKey=otherSeries.stackKey;if(stackGroups[stackKey]===UNDEFINED){stackGroups[stackKey]=columnCount++;}columnIndex=stackGroups[stackKey];}else if(otherOptions.grouping!==false){// #1162\ncolumnIndex=columnCount++;}otherSeries.columnIndex=columnIndex;}});}var categoryWidth=mathMin(mathAbs(xAxis.transA)*(xAxis.ordinalSlope||options.pointRange||xAxis.closestPointRange||xAxis.tickInterval||1),// #2610\nxAxis.len// #1535\n),groupPadding=categoryWidth*options.groupPadding,groupWidth=categoryWidth-2*groupPadding,pointOffsetWidth=groupWidth/columnCount,pointWidth=mathMin(options.maxPointWidth||xAxis.len,pick(options.pointWidth,pointOffsetWidth*(1-2*options.pointPadding))),pointPadding=(pointOffsetWidth-pointWidth)/2,colIndex=(series.columnIndex||0)+(reversedXAxis?1:0),// #1251, #3737\npointXOffset=pointPadding+(groupPadding+colIndex*pointOffsetWidth-categoryWidth/2)*(reversedXAxis?-1:1);// Save it for reading in linked series (Error bars particularly)\nseries.columnMetrics={width:pointWidth,offset:pointXOffset};return series.columnMetrics;},/**\n         * Make the columns crisp. The edges are rounded to the nearest full pixel.\n         */crispCol:function(x,y,w,h){var chart=this.chart,borderWidth=this.borderWidth,xCrisp=-(borderWidth%2?0.5:0),yCrisp=borderWidth%2?0.5:1,right,bottom,fromTop;if(chart.inverted&&chart.renderer.isVML){yCrisp+=1;}// Horizontal. We need to first compute the exact right edge, then round it\n// and compute the width from there.\nright=Math.round(x+w)+xCrisp;x=Math.round(x)+xCrisp;w=right-x;// Vertical\nbottom=Math.round(y+h)+yCrisp;fromTop=mathAbs(y)<=0.5&&bottom>0.5;// #4504, #4656\ny=Math.round(y)+yCrisp;h=bottom-y;// Top edges are exceptions\nif(fromTop&&h){// #5146\ny-=1;h+=1;}return{x:x,y:y,width:w,height:h};},/**\n         * Translate each point to the plot area coordinate system and find shape positions\n         */translate:function(){var series=this,chart=series.chart,options=series.options,borderWidth=series.borderWidth=pick(options.borderWidth,series.closestPointRange*series.xAxis.transA<2?0:1// #3635\n),yAxis=series.yAxis,threshold=options.threshold,translatedThreshold=series.translatedThreshold=yAxis.getThreshold(threshold),minPointLength=pick(options.minPointLength,5),metrics=series.getColumnMetrics(),pointWidth=metrics.width,seriesBarW=series.barW=mathMax(pointWidth,1+2*borderWidth),// postprocessed for border width\npointXOffset=series.pointXOffset=metrics.offset;if(chart.inverted){translatedThreshold-=0.5;// #3355\n}// When the pointPadding is 0, we want the columns to be packed tightly, so we allow individual\n// columns to have individual sizes. When pointPadding is greater, we strive for equal-width\n// columns (#2694).\nif(options.pointPadding){seriesBarW=mathCeil(seriesBarW);}Series.prototype.translate.apply(series);// Record the new values\neach(series.points,function(point){var yBottom=mathMin(pick(point.yBottom,translatedThreshold),9e4),// #3575\nsafeDistance=999+mathAbs(yBottom),plotY=mathMin(mathMax(-safeDistance,point.plotY),yAxis.len+safeDistance),// Don't draw too far outside plot area (#1303, #2241, #4264)\nbarX=point.plotX+pointXOffset,barW=seriesBarW,barY=mathMin(plotY,yBottom),up,barH=mathMax(plotY,yBottom)-barY;// Handle options.minPointLength\nif(mathAbs(barH)<minPointLength){if(minPointLength){barH=minPointLength;up=!yAxis.reversed&&!point.negative||yAxis.reversed&&point.negative;barY=mathAbs(barY-translatedThreshold)>minPointLength?// stacked\nyBottom-minPointLength:// keep position\ntranslatedThreshold-(up?minPointLength:0);// #1485, #4051\n}}// Cache for access in polar\npoint.barX=barX;point.pointWidth=pointWidth;// Fix the tooltip on center of grouped columns (#1216, #424, #3648)\npoint.tooltipPos=chart.inverted?[yAxis.len+yAxis.pos-chart.plotLeft-plotY,series.xAxis.len-barX-barW/2,barH]:[barX+barW/2,plotY+yAxis.pos-chart.plotTop,barH];// Register shape type and arguments to be used in drawPoints\npoint.shapeType='rect';point.shapeArgs=series.crispCol(barX,barY,barW,barH);});},getSymbol:noop,/**\n         * Use a solid rectangle like the area series types\n         */drawLegendSymbol:LegendSymbolMixin.drawRectangle,/**\n         * Columns have no graph\n         */drawGraph:noop,/**\n         * Draw the columns. For bars, the series.group is rotated, so the same coordinates\n         * apply for columns and bars. This method is inherited by scatter series.\n         *\n         */drawPoints:function(){var series=this,chart=this.chart,options=series.options,renderer=chart.renderer,animationLimit=options.animationLimit||250,shapeArgs,pointAttr;// draw the columns\neach(series.points,function(point){var plotY=point.plotY,graphic=point.graphic,borderAttr;if(isNumber(plotY)&&point.y!==null){shapeArgs=point.shapeArgs;borderAttr=defined(series.borderWidth)?{'stroke-width':series.borderWidth}:{};pointAttr=point.pointAttr[point.selected?SELECT_STATE:NORMAL_STATE]||series.pointAttr[NORMAL_STATE];if(graphic){// update\nstop(graphic);graphic.attr(borderAttr).attr(pointAttr)[chart.pointCount<animationLimit?'animate':'attr'](merge(shapeArgs));// #4267\n}else{point.graphic=graphic=renderer[point.shapeType](shapeArgs).attr(borderAttr).attr(pointAttr).add(point.group||series.group).shadow(options.shadow,null,options.stacking&&!options.borderRadius);}}else if(graphic){point.graphic=graphic.destroy();// #1269\n}});},/**\n         * Animate the column heights one by one from zero\n         * @param {Boolean} init Whether to initialize the animation or run it\n         */animate:function(init){var series=this,yAxis=this.yAxis,options=series.options,inverted=this.chart.inverted,attr={},translatedThreshold;if(hasSVG){// VML is too slow anyway\nif(init){attr.scaleY=0.001;translatedThreshold=mathMin(yAxis.pos+yAxis.len,mathMax(yAxis.pos,yAxis.toPixels(options.threshold)));if(inverted){attr.translateX=translatedThreshold-yAxis.len;}else{attr.translateY=translatedThreshold;}series.group.attr(attr);}else{// run the animation\nattr[inverted?'translateX':'translateY']=yAxis.pos;series.group.animate(attr,extend(animObject(series.options.animation),{// Do the scale synchronously to ensure smooth updating (#5030)\nstep:function(val,fx){series.group.attr({scaleY:mathMax(0.001,fx.pos)// #5250\n});}}));// delete this function to allow it only once\nseries.animate=null;}}},/**\n         * Remove this series from the chart\n         */remove:function(){var series=this,chart=series.chart;// column and bar series affects other series of the same type\n// as they are either stacked or grouped\nif(chart.hasRendered){each(chart.series,function(otherSeries){if(otherSeries.type===series.type){otherSeries.isDirty=true;}});}Series.prototype.remove.apply(series,arguments);}});seriesTypes.column=ColumnSeries;/**\n     * Set the default options for bar\n     */defaultPlotOptions.bar=merge(defaultPlotOptions.column);/**\n     * The Bar series class\n     */var BarSeries=extendClass(ColumnSeries,{type:'bar',inverted:true});seriesTypes.bar=BarSeries;/**\n     * Set the default options for scatter\n     */defaultPlotOptions.scatter=merge(defaultSeriesOptions,{lineWidth:0,marker:{enabled:true// Overrides auto-enabling in line series (#3647)\n},tooltip:{headerFormat:'<span style=\"color:{point.color}\">\\u25CF</span> <span style=\"font-size: 10px;\"> {series.name}</span><br/>',pointFormat:'x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>'}});/**\n     * The scatter series class\n     */var ScatterSeries=extendClass(Series,{type:'scatter',sorted:false,requireSorting:false,noSharedTooltip:true,trackerGroups:['group','markerGroup','dataLabelsGroup'],takeOrdinalPosition:false,// #2342\nkdDimensions:2,drawGraph:function(){if(this.options.lineWidth){Series.prototype.drawGraph.call(this);}}});seriesTypes.scatter=ScatterSeries;/**\n     * Set the default options for pie\n     */defaultPlotOptions.pie=merge(defaultSeriesOptions,{borderColor:'#FFFFFF',borderWidth:1,center:[null,null],clip:false,colorByPoint:true,// always true for pies\ndataLabels:{// align: null,\n// connectorWidth: 1,\n// connectorColor: point.color,\n// connectorPadding: 5,\ndistance:30,enabled:true,formatter:function(){// #2945\nreturn this.y===null?undefined:this.point.name;},// softConnector: true,\nx:0// y: 0\n},ignoreHiddenPoint:true,//innerSize: 0,\nlegendType:'point',marker:null,// point options are specified in the base options\nsize:null,showInLegend:false,slicedOffset:10,states:{hover:{brightness:0.1,shadow:false}},stickyTracking:false,tooltip:{followPointer:true}});/**\n     * Extended point object for pies\n     */var PiePoint=extendClass(Point,{/**\n         * Initiate the pie slice\n         */init:function(){Point.prototype.init.apply(this,arguments);var point=this,toggleSlice;point.name=pick(point.name,'Slice');// add event listener for select\ntoggleSlice=function(e){point.slice(e.type==='select');};addEvent(point,'select',toggleSlice);addEvent(point,'unselect',toggleSlice);return point;},/**\n         * Toggle the visibility of the pie slice\n         * @param {Boolean} vis Whether to show the slice or not. If undefined, the\n         *    visibility is toggled\n         */setVisible:function(vis,redraw){var point=this,series=point.series,chart=series.chart,ignoreHiddenPoint=series.options.ignoreHiddenPoint;redraw=pick(redraw,ignoreHiddenPoint);if(vis!==point.visible){// If called without an argument, toggle visibility\npoint.visible=point.options.visible=vis=vis===UNDEFINED?!point.visible:vis;series.options.data[inArray(point,series.data)]=point.options;// update userOptions.data\n// Show and hide associated elements. This is performed regardless of redraw or not,\n// because chart.redraw only handles full series.\neach(['graphic','dataLabel','connector','shadowGroup'],function(key){if(point[key]){point[key][vis?'show':'hide'](true);}});if(point.legendItem){chart.legend.colorizeItem(point,vis);}// #4170, hide halo after hiding point\nif(!vis&&point.state==='hover'){point.setState('');}// Handle ignore hidden slices\nif(ignoreHiddenPoint){series.isDirty=true;}if(redraw){chart.redraw();}}},/**\n         * Set or toggle whether the slice is cut out from the pie\n         * @param {Boolean} sliced When undefined, the slice state is toggled\n         * @param {Boolean} redraw Whether to redraw the chart. True by default.\n         */slice:function(sliced,redraw,animation){var point=this,series=point.series,chart=series.chart,translation;setAnimation(animation,chart);// redraw is true by default\nredraw=pick(redraw,true);// if called without an argument, toggle\npoint.sliced=point.options.sliced=sliced=defined(sliced)?sliced:!point.sliced;series.options.data[inArray(point,series.data)]=point.options;// update userOptions.data\ntranslation=sliced?point.slicedTranslation:{translateX:0,translateY:0};point.graphic.animate(translation);if(point.shadowGroup){point.shadowGroup.animate(translation);}},haloPath:function(size){var shapeArgs=this.shapeArgs,chart=this.series.chart;return this.sliced||!this.visible?[]:this.series.chart.renderer.symbols.arc(chart.plotLeft+shapeArgs.x,chart.plotTop+shapeArgs.y,shapeArgs.r+size,shapeArgs.r+size,{innerR:this.shapeArgs.r,start:shapeArgs.start,end:shapeArgs.end});}});/**\n     * The Pie series class\n     */var PieSeries={type:'pie',isCartesian:false,pointClass:PiePoint,requireSorting:false,directTouch:true,noSharedTooltip:true,trackerGroups:['group','dataLabelsGroup'],axisTypes:[],pointAttrToOptions:{// mapping between SVG attributes and the corresponding options\nstroke:'borderColor','stroke-width':'borderWidth',fill:'color'},/**\n         * Animate the pies in\n         */animate:function(init){var series=this,points=series.points,startAngleRad=series.startAngleRad;if(!init){each(points,function(point){var graphic=point.graphic,args=point.shapeArgs;if(graphic){// start values\ngraphic.attr({r:point.startR||series.center[3]/2,// animate from inner radius (#779)\nstart:startAngleRad,end:startAngleRad});// animate\ngraphic.animate({r:args.r,start:args.start,end:args.end},series.options.animation);}});// delete this function to allow it only once\nseries.animate=null;}},/**\n         * Recompute total chart sum and update percentages of points.\n         */updateTotals:function(){var i,total=0,points=this.points,len=points.length,point,ignoreHiddenPoint=this.options.ignoreHiddenPoint;// Get the total sum\nfor(i=0;i<len;i++){point=points[i];total+=ignoreHiddenPoint&&!point.visible?0:point.y;}this.total=total;// Set each point's properties\nfor(i=0;i<len;i++){point=points[i];point.percentage=total>0&&(point.visible||!ignoreHiddenPoint)?point.y/total*100:0;point.total=total;}},/**\n         * Extend the generatePoints method by adding total and percentage properties to each point\n         */generatePoints:function(){Series.prototype.generatePoints.call(this);this.updateTotals();},/**\n         * Do translation for pie slices\n         */translate:function(positions){this.generatePoints();var series=this,cumulative=0,precision=1000,// issue #172\noptions=series.options,slicedOffset=options.slicedOffset,connectorOffset=slicedOffset+options.borderWidth,start,end,angle,startAngle=options.startAngle||0,startAngleRad=series.startAngleRad=mathPI/180*(startAngle-90),endAngleRad=series.endAngleRad=mathPI/180*(pick(options.endAngle,startAngle+360)-90),circ=endAngleRad-startAngleRad,//2 * mathPI,\npoints=series.points,radiusX,// the x component of the radius vector for a given point\nradiusY,labelDistance=options.dataLabels.distance,ignoreHiddenPoint=options.ignoreHiddenPoint,i,len=points.length,point;// Get positions - either an integer or a percentage string must be given.\n// If positions are passed as a parameter, we're in a recursive loop for adjusting\n// space for data labels.\nif(!positions){series.center=positions=series.getCenter();}// utility for getting the x value from a given y, used for anticollision logic in data labels\nseries.getX=function(y,left){angle=math.asin(mathMin((y-positions[1])/(positions[2]/2+labelDistance),1));return positions[0]+(left?-1:1)*(mathCos(angle)*(positions[2]/2+labelDistance));};// Calculate the geometry for each point\nfor(i=0;i<len;i++){point=points[i];// set start and end angle\nstart=startAngleRad+cumulative*circ;if(!ignoreHiddenPoint||point.visible){cumulative+=point.percentage/100;}end=startAngleRad+cumulative*circ;// set the shape\npoint.shapeType='arc';point.shapeArgs={x:positions[0],y:positions[1],r:positions[2]/2,innerR:positions[3]/2,start:mathRound(start*precision)/precision,end:mathRound(end*precision)/precision};// The angle must stay within -90 and 270 (#2645)\nangle=(end+start)/2;if(angle>1.5*mathPI){angle-=2*mathPI;}else if(angle<-mathPI/2){angle+=2*mathPI;}// Center for the sliced out slice\npoint.slicedTranslation={translateX:mathRound(mathCos(angle)*slicedOffset),translateY:mathRound(mathSin(angle)*slicedOffset)};// set the anchor point for tooltips\nradiusX=mathCos(angle)*positions[2]/2;radiusY=mathSin(angle)*positions[2]/2;point.tooltipPos=[positions[0]+radiusX*0.7,positions[1]+radiusY*0.7];point.half=angle<-mathPI/2||angle>mathPI/2?1:0;point.angle=angle;// set the anchor point for data labels\nconnectorOffset=mathMin(connectorOffset,labelDistance/2);// #1678\npoint.labelPos=[positions[0]+radiusX+mathCos(angle)*labelDistance,// first break of connector\npositions[1]+radiusY+mathSin(angle)*labelDistance,// a/a\npositions[0]+radiusX+mathCos(angle)*connectorOffset,// second break, right outside pie\npositions[1]+radiusY+mathSin(angle)*connectorOffset,// a/a\npositions[0]+radiusX,// landing point for connector\npositions[1]+radiusY,// a/a\nlabelDistance<0?// alignment\n'center':point.half?'right':'left',// alignment\nangle// center angle\n];}},drawGraph:null,/**\n         * Draw the data points\n         */drawPoints:function(){var series=this,chart=series.chart,renderer=chart.renderer,groupTranslation,//center,\ngraphic,//group,\nshadow=series.options.shadow,shadowGroup,pointAttr,shapeArgs,attr;if(shadow&&!series.shadowGroup){series.shadowGroup=renderer.g('shadow').add(series.group);}// draw the slices\neach(series.points,function(point){if(point.y!==null){graphic=point.graphic;shapeArgs=point.shapeArgs;shadowGroup=point.shadowGroup;pointAttr=point.pointAttr[point.selected?SELECT_STATE:NORMAL_STATE];if(!pointAttr.stroke){pointAttr.stroke=pointAttr.fill;}// put the shadow behind all points\nif(shadow&&!shadowGroup){shadowGroup=point.shadowGroup=renderer.g('shadow').add(series.shadowGroup);}// if the point is sliced, use special translation, else use plot area traslation\ngroupTranslation=point.sliced?point.slicedTranslation:{translateX:0,translateY:0};//group.translate(groupTranslation[0], groupTranslation[1]);\nif(shadowGroup){shadowGroup.attr(groupTranslation);}// draw the slice\nif(graphic){graphic.setRadialReference(series.center).attr(pointAttr).animate(extend(shapeArgs,groupTranslation));}else{attr={'stroke-linejoin':'round'};if(!point.visible){attr.visibility='hidden';}point.graphic=graphic=renderer[point.shapeType](shapeArgs).setRadialReference(series.center).attr(pointAttr).attr(attr).attr(groupTranslation).add(series.group).shadow(shadow,shadowGroup);}}});},searchPoint:noop,/**\n         * Utility for sorting data labels\n         */sortByAngle:function(points,sign){points.sort(function(a,b){return a.angle!==undefined&&(b.angle-a.angle)*sign;});},/**\n         * Use a simple symbol from LegendSymbolMixin\n         */drawLegendSymbol:LegendSymbolMixin.drawRectangle,/**\n         * Use the getCenter method from drawLegendSymbol\n         */getCenter:CenteredSeriesMixin.getCenter,/**\n         * Pies don't have point marker symbols\n         */getSymbol:noop};PieSeries=extendClass(Series,PieSeries);seriesTypes.pie=PieSeries;/**\n     * Draw the data labels\n     */Series.prototype.drawDataLabels=function(){var series=this,seriesOptions=series.options,cursor=seriesOptions.cursor,options=seriesOptions.dataLabels,points=series.points,pointOptions,generalOptions,hasRendered=series.hasRendered||0,str,dataLabelsGroup,defer=pick(options.defer,true),renderer=series.chart.renderer;if(options.enabled||series._hasPointLabels){// Process default alignment of data labels for columns\nif(series.dlProcessOptions){series.dlProcessOptions(options);}// Create a separate group for the data labels to avoid rotation\ndataLabelsGroup=series.plotGroup('dataLabelsGroup','data-labels',defer&&!hasRendered?'hidden':'visible',// #5133\noptions.zIndex||6);if(defer){dataLabelsGroup.attr({opacity:+hasRendered});// #3300\nif(!hasRendered){addEvent(series,'afterAnimate',function(){if(series.visible){// #3023, #3024\ndataLabelsGroup.show();}dataLabelsGroup[seriesOptions.animation?'animate':'attr']({opacity:1},{duration:200});});}}// Make the labels for each point\ngeneralOptions=options;each(points,function(point){var enabled,dataLabel=point.dataLabel,labelConfig,attr,name,rotation,connector=point.connector,isNew=true,style,moreStyle={};// Determine if each data label is enabled\npointOptions=point.dlOptions||point.options&&point.options.dataLabels;// dlOptions is used in treemaps\nenabled=pick(pointOptions&&pointOptions.enabled,generalOptions.enabled)&&point.y!==null;// #2282, #4641\n// If the point is outside the plot area, destroy it. #678, #820\nif(dataLabel&&!enabled){point.dataLabel=dataLabel.destroy();// Individual labels are disabled if the are explicitly disabled\n// in the point options, or if they fall outside the plot area.\n}else if(enabled){// Create individual options structure that can be extended without\n// affecting others\noptions=merge(generalOptions,pointOptions);style=options.style;rotation=options.rotation;// Get the string\nlabelConfig=point.getLabelConfig();str=options.format?format(options.format,labelConfig):options.formatter.call(labelConfig,options);// Determine the color\nstyle.color=pick(options.color,style.color,series.color,'black');// update existing label\nif(dataLabel){if(defined(str)){dataLabel.attr({text:str});isNew=false;}else{// #1437 - the label is shown conditionally\npoint.dataLabel=dataLabel=dataLabel.destroy();if(connector){point.connector=connector.destroy();}}// create new label\n}else if(defined(str)){attr={//align: align,\nfill:options.backgroundColor,stroke:options.borderColor,'stroke-width':options.borderWidth,r:options.borderRadius||0,rotation:rotation,padding:options.padding,zIndex:1};// Get automated contrast color\nif(style.color==='contrast'){moreStyle.color=options.inside||options.distance<0||!!seriesOptions.stacking?renderer.getContrast(point.color||series.color):'#000000';}if(cursor){moreStyle.cursor=cursor;}// Remove unused attributes (#947)\nfor(name in attr){if(attr[name]===UNDEFINED){delete attr[name];}}dataLabel=point.dataLabel=renderer[rotation?'text':'label'](// labels don't support rotation\nstr,0,-9999,options.shape,null,null,options.useHTML).attr(attr).css(extend(style,moreStyle)).add(dataLabelsGroup).shadow(options.shadow);}if(dataLabel){// Now the data label is created and placed at 0,0, so we need to align it\nseries.alignDataLabel(point,dataLabel,options,null,isNew);}}});}};/**\n     * Align each individual data label\n     */Series.prototype.alignDataLabel=function(point,dataLabel,options,alignTo,isNew){var chart=this.chart,inverted=chart.inverted,plotX=pick(point.plotX,-9999),plotY=pick(point.plotY,-9999),bBox=dataLabel.getBBox(),baseline=chart.renderer.fontMetrics(options.style.fontSize).b,rotation=options.rotation,normRotation,negRotation,align=options.align,rotCorr,// rotation correction\n// Math.round for rounding errors (#2683), alignTo to allow column labels (#2700)\nvisible=this.visible&&(point.series.forceDL||chart.isInsidePlot(plotX,mathRound(plotY),inverted)||alignTo&&chart.isInsidePlot(plotX,inverted?alignTo.x+1:alignTo.y+alignTo.height-1,inverted)),alignAttr,// the final position;\njustify=pick(options.overflow,'justify')==='justify';if(visible){// The alignment box is a singular point\nalignTo=extend({x:inverted?chart.plotWidth-plotY:plotX,y:mathRound(inverted?chart.plotHeight-plotX:plotY),width:0,height:0},alignTo);// Add the text size for alignment calculation\nextend(options,{width:bBox.width,height:bBox.height});// Allow a hook for changing alignment in the last moment, then do the alignment\nif(rotation){justify=false;// Not supported for rotated text\nrotCorr=chart.renderer.rotCorr(baseline,rotation);// #3723\nalignAttr={x:alignTo.x+options.x+alignTo.width/2+rotCorr.x,y:alignTo.y+options.y+{top:0,middle:0.5,bottom:1}[options.verticalAlign]*alignTo.height};dataLabel[isNew?'attr':'animate'](alignAttr).attr({// #3003\nalign:align});// Compensate for the rotated label sticking out on the sides\nnormRotation=(rotation+720)%360;negRotation=normRotation>180&&normRotation<360;if(align==='left'){alignAttr.y-=negRotation?bBox.height:0;}else if(align==='center'){alignAttr.x-=bBox.width/2;alignAttr.y-=bBox.height/2;}else if(align==='right'){alignAttr.x-=bBox.width;alignAttr.y-=negRotation?0:bBox.height;}}else{dataLabel.align(options,null,alignTo);alignAttr=dataLabel.alignAttr;}// Handle justify or crop\nif(justify){this.justifyDataLabel(dataLabel,options,alignAttr,bBox,alignTo,isNew);// Now check that the data label is within the plot area\n}else if(pick(options.crop,true)){visible=chart.isInsidePlot(alignAttr.x,alignAttr.y)&&chart.isInsidePlot(alignAttr.x+bBox.width,alignAttr.y+bBox.height);}// When we're using a shape, make it possible with a connector or an arrow pointing to thie point\nif(options.shape&&!rotation){dataLabel.attr({anchorX:point.plotX,anchorY:point.plotY});}}// Show or hide based on the final aligned position\nif(!visible){stop(dataLabel);dataLabel.attr({y:-9999});dataLabel.placed=false;// don't animate back in\n}};/**\n     * If data labels fall partly outside the plot area, align them back in, in a way that\n     * doesn't hide the point.\n     */Series.prototype.justifyDataLabel=function(dataLabel,options,alignAttr,bBox,alignTo,isNew){var chart=this.chart,align=options.align,verticalAlign=options.verticalAlign,off,justified,padding=dataLabel.box?0:dataLabel.padding||0;// Off left\noff=alignAttr.x+padding;if(off<0){if(align==='right'){options.align='left';}else{options.x=-off;}justified=true;}// Off right\noff=alignAttr.x+bBox.width-padding;if(off>chart.plotWidth){if(align==='left'){options.align='right';}else{options.x=chart.plotWidth-off;}justified=true;}// Off top\noff=alignAttr.y+padding;if(off<0){if(verticalAlign==='bottom'){options.verticalAlign='top';}else{options.y=-off;}justified=true;}// Off bottom\noff=alignAttr.y+bBox.height-padding;if(off>chart.plotHeight){if(verticalAlign==='top'){options.verticalAlign='bottom';}else{options.y=chart.plotHeight-off;}justified=true;}if(justified){dataLabel.placed=!isNew;dataLabel.align(options,null,alignTo);}};/**\n     * Override the base drawDataLabels method by pie specific functionality\n     */if(seriesTypes.pie){seriesTypes.pie.prototype.drawDataLabels=function(){var series=this,data=series.data,point,chart=series.chart,options=series.options.dataLabels,connectorPadding=pick(options.connectorPadding,10),connectorWidth=pick(options.connectorWidth,1),plotWidth=chart.plotWidth,plotHeight=chart.plotHeight,connector,connectorPath,softConnector=pick(options.softConnector,true),distanceOption=options.distance,seriesCenter=series.center,radius=seriesCenter[2]/2,centerY=seriesCenter[1],outside=distanceOption>0,dataLabel,dataLabelWidth,labelPos,labelHeight,halves=[// divide the points into right and left halves for anti collision\n[],// right\n[]// left\n],x,y,visibility,rankArr,i,j,overflow=[0,0,0,0],// top, right, bottom, left\nsort=function(a,b){return b.y-a.y;};// get out if not enabled\nif(!series.visible||!options.enabled&&!series._hasPointLabels){return;}// run parent method\nSeries.prototype.drawDataLabels.apply(series);each(data,function(point){if(point.dataLabel&&point.visible){// #407, #2510\n// Arrange points for detection collision\nhalves[point.half].push(point);// Reset positions (#4905)\npoint.dataLabel._pos=null;}});/* Loop over the points in each half, starting from the top and bottom\n             * of the pie to detect overlapping labels.\n             */i=2;while(i--){var slots=[],slotsLength,usedSlots=[],points=halves[i],pos,bottom,length=points.length,slotIndex;if(!length){continue;}// Sort by angle\nseries.sortByAngle(points,i-0.5);// Assume equal label heights on either hemisphere (#2630)\nj=labelHeight=0;while(!labelHeight&&points[j]){// #1569\nlabelHeight=points[j]&&points[j].dataLabel&&(points[j].dataLabel.getBBox().height||21);// 21 is for #968\nj++;}// Only do anti-collision when we are outside the pie and have connectors (#856)\nif(distanceOption>0){// Build the slots\nbottom=mathMin(centerY+radius+distanceOption,chart.plotHeight);for(pos=mathMax(0,centerY-radius-distanceOption);pos<=bottom;pos+=labelHeight){slots.push(pos);}slotsLength=slots.length;/* Visualize the slots\n                    if (!series.slotElements) {\n                        series.slotElements = [];\n                    }\n                    if (i === 1) {\n                        series.slotElements.forEach(function (elem) {\n                            elem.destroy();\n                        });\n                        series.slotElements.length = 0;\n                    }\n\n                    slots.forEach(function (pos, no) {\n                        var slotX = series.getX(pos, i) + chart.plotLeft - (i ? 100 : 0),\n                            slotY = pos + chart.plotTop;\n\n                        if (isNumber(slotX)) {\n                            series.slotElements.push(chart.renderer.rect(slotX, slotY - 7, 100, labelHeight, 1)\n                                .attr({\n                                    'stroke-width': 1,\n                                    stroke: 'silver',\n                                    fill: 'rgba(0,0,255,0.1)'\n                                })\n                                .add());\n                            series.slotElements.push(chart.renderer.text('Slot '+ no, slotX, slotY + 4)\n                                .attr({\n                                    fill: 'silver'\n                                }).add());\n                        }\n                    });\n                    // */ // if there are more values than available slots, remove lowest values\nif(length>slotsLength){// create an array for sorting and ranking the points within each quarter\nrankArr=[].concat(points);rankArr.sort(sort);j=length;while(j--){rankArr[j].rank=j;}j=length;while(j--){if(points[j].rank>=slotsLength){points.splice(j,1);}}length=points.length;}// The label goes to the nearest open slot, but not closer to the edge than\n// the label's index.\nfor(j=0;j<length;j++){point=points[j];labelPos=point.labelPos;var closest=9999,distance,slotI;// find the closest slot index\nfor(slotI=0;slotI<slotsLength;slotI++){distance=mathAbs(slots[slotI]-labelPos[1]);if(distance<closest){closest=distance;slotIndex=slotI;}}// if that slot index is closer to the edges of the slots, move it\n// to the closest appropriate slot\nif(slotIndex<j&&slots[j]!==null){// cluster at the top\nslotIndex=j;}else if(slotsLength<length-j+slotIndex&&slots[j]!==null){// cluster at the bottom\nslotIndex=slotsLength-length+j;while(slots[slotIndex]===null){// make sure it is not taken\nslotIndex++;}}else{// Slot is taken, find next free slot below. In the next run, the next slice will find the\n// slot above these, because it is the closest one\nwhile(slots[slotIndex]===null){// make sure it is not taken\nslotIndex++;}}usedSlots.push({i:slotIndex,y:slots[slotIndex]});slots[slotIndex]=null;// mark as taken\n}// sort them in order to fill in from the top\nusedSlots.sort(sort);}// now the used slots are sorted, fill them up sequentially\nfor(j=0;j<length;j++){var slot,naturalY;point=points[j];labelPos=point.labelPos;dataLabel=point.dataLabel;visibility=point.visible===false?HIDDEN:'inherit';naturalY=labelPos[1];if(distanceOption>0){slot=usedSlots.pop();slotIndex=slot.i;// if the slot next to currrent slot is free, the y value is allowed\n// to fall back to the natural position\ny=slot.y;if(naturalY>y&&slots[slotIndex+1]!==null||naturalY<y&&slots[slotIndex-1]!==null){y=mathMin(mathMax(0,naturalY),chart.plotHeight);}}else{y=naturalY;}// get the x - use the natural x position for first and last slot, to prevent the top\n// and botton slice connectors from touching each other on either side\nx=options.justify?seriesCenter[0]+(i?-1:1)*(radius+distanceOption):series.getX(y===centerY-radius-distanceOption||y===centerY+radius+distanceOption?naturalY:y,i);// Record the placement and visibility\ndataLabel._attr={visibility:visibility,align:labelPos[6]};dataLabel._pos={x:x+options.x+({left:connectorPadding,right:-connectorPadding}[labelPos[6]]||0),y:y+options.y-10// 10 is for the baseline (label vs text)\n};dataLabel.connX=x;dataLabel.connY=y;// Detect overflowing data labels\nif(this.options.size===null){dataLabelWidth=dataLabel.width;// Overflow left\nif(x-dataLabelWidth<connectorPadding){overflow[3]=mathMax(mathRound(dataLabelWidth-x+connectorPadding),overflow[3]);// Overflow right\n}else if(x+dataLabelWidth>plotWidth-connectorPadding){overflow[1]=mathMax(mathRound(x+dataLabelWidth-plotWidth+connectorPadding),overflow[1]);}// Overflow top\nif(y-labelHeight/2<0){overflow[0]=mathMax(mathRound(-y+labelHeight/2),overflow[0]);// Overflow left\n}else if(y+labelHeight/2>plotHeight){overflow[2]=mathMax(mathRound(y+labelHeight/2-plotHeight),overflow[2]);}}}// for each point\n}// for each half\n// Do not apply the final placement and draw the connectors until we have verified\n// that labels are not spilling over.\nif(arrayMax(overflow)===0||this.verifyDataLabelOverflow(overflow)){// Place the labels in the final position\nthis.placeDataLabels();// Draw the connectors\nif(outside&&connectorWidth){each(this.points,function(point){connector=point.connector;labelPos=point.labelPos;dataLabel=point.dataLabel;if(dataLabel&&dataLabel._pos&&point.visible){visibility=dataLabel._attr.visibility;x=dataLabel.connX;y=dataLabel.connY;connectorPath=softConnector?[M,x+(labelPos[6]==='left'?5:-5),y,// end of the string at the label\n'C',x,y,// first break, next to the label\n2*labelPos[2]-labelPos[4],2*labelPos[3]-labelPos[5],labelPos[2],labelPos[3],// second break\nL,labelPos[4],labelPos[5]// base\n]:[M,x+(labelPos[6]==='left'?5:-5),y,// end of the string at the label\nL,labelPos[2],labelPos[3],// second break\nL,labelPos[4],labelPos[5]// base\n];if(connector){connector.animate({d:connectorPath});connector.attr('visibility',visibility);}else{point.connector=connector=series.chart.renderer.path(connectorPath).attr({'stroke-width':connectorWidth,stroke:options.connectorColor||point.color||'#606060',visibility:visibility//zIndex: 0 // #2722 (reversed)\n}).add(series.dataLabelsGroup);}}else if(connector){point.connector=connector.destroy();}});}}};/**\n         * Perform the final placement of the data labels after we have verified that they\n         * fall within the plot area.\n         */seriesTypes.pie.prototype.placeDataLabels=function(){each(this.points,function(point){var dataLabel=point.dataLabel,_pos;if(dataLabel&&point.visible){_pos=dataLabel._pos;if(_pos){dataLabel.attr(dataLabel._attr);dataLabel[dataLabel.moved?'animate':'attr'](_pos);dataLabel.moved=true;}else if(dataLabel){dataLabel.attr({y:-9999});}}});};seriesTypes.pie.prototype.alignDataLabel=noop;/**\n         * Verify whether the data labels are allowed to draw, or we should run more translation and data\n         * label positioning to keep them inside the plot area. Returns true when data labels are ready\n         * to draw.\n         */seriesTypes.pie.prototype.verifyDataLabelOverflow=function(overflow){var center=this.center,options=this.options,centerOption=options.center,minSize=options.minSize||80,newSize=minSize,ret;// Handle horizontal size and center\nif(centerOption[0]!==null){// Fixed center\nnewSize=mathMax(center[2]-mathMax(overflow[1],overflow[3]),minSize);}else{// Auto center\nnewSize=mathMax(center[2]-overflow[1]-overflow[3],// horizontal overflow\nminSize);center[0]+=(overflow[3]-overflow[1])/2;// horizontal center\n}// Handle vertical size and center\nif(centerOption[1]!==null){// Fixed center\nnewSize=mathMax(mathMin(newSize,center[2]-mathMax(overflow[0],overflow[2])),minSize);}else{// Auto center\nnewSize=mathMax(mathMin(newSize,center[2]-overflow[0]-overflow[2]// vertical overflow\n),minSize);center[1]+=(overflow[0]-overflow[2])/2;// vertical center\n}// If the size must be decreased, we need to run translate and drawDataLabels again\nif(newSize<center[2]){center[2]=newSize;center[3]=Math.min(relativeLength(options.innerSize||0,newSize),newSize);// #3632\nthis.translate(center);if(this.drawDataLabels){this.drawDataLabels();}// Else, return true to indicate that the pie and its labels is within the plot area\n}else{ret=true;}return ret;};}if(seriesTypes.column){/**\n         * Override the basic data label alignment by adjusting for the position of the column\n         */seriesTypes.column.prototype.alignDataLabel=function(point,dataLabel,options,alignTo,isNew){var inverted=this.chart.inverted,series=point.series,dlBox=point.dlBox||point.shapeArgs,// data label box for alignment\nbelow=pick(point.below,point.plotY>pick(this.translatedThreshold,series.yAxis.len)),// point.below is used in range series\ninside=pick(options.inside,!!this.options.stacking),// draw it inside the box?\novershoot;// Align to the column itself, or the top of it\nif(dlBox){// Area range uses this method but not alignTo\nalignTo=merge(dlBox);if(alignTo.y<0){alignTo.height+=alignTo.y;alignTo.y=0;}overshoot=alignTo.y+alignTo.height-series.yAxis.len;if(overshoot>0){alignTo.height-=overshoot;}if(inverted){alignTo={x:series.yAxis.len-alignTo.y-alignTo.height,y:series.xAxis.len-alignTo.x-alignTo.width,width:alignTo.height,height:alignTo.width};}// Compute the alignment box\nif(!inside){if(inverted){alignTo.x+=below?0:alignTo.width;alignTo.width=0;}else{alignTo.y+=below?alignTo.height:0;alignTo.height=0;}}}// When alignment is undefined (typically columns and bars), display the individual\n// point below or above the point depending on the threshold\noptions.align=pick(options.align,!inverted||inside?'center':below?'right':'left');options.verticalAlign=pick(options.verticalAlign,inverted||inside?'middle':below?'top':'bottom');// Call the parent method\nSeries.prototype.alignDataLabel.call(this,point,dataLabel,options,alignTo,isNew);};}/**\n     * Highcharts module to hide overlapping data labels. This module is included in Highcharts.\n     */(function(H){var Chart=H.Chart,each=H.each,pick=H.pick,addEvent=H.addEvent;// Collect potensial overlapping data labels. Stack labels probably don't need to be \n// considered because they are usually accompanied by data labels that lie inside the columns.\nChart.prototype.callbacks.push(function(chart){function collectAndHide(){var labels=[];each(chart.series,function(series){var dlOptions=series.options.dataLabels,collections=series.dataLabelCollections||['dataLabel'];// Range series have two collections\nif((dlOptions.enabled||series._hasPointLabels)&&!dlOptions.allowOverlap&&series.visible){// #3866\neach(collections,function(coll){each(series.points,function(point){if(point[coll]){point[coll].labelrank=pick(point.labelrank,point.shapeArgs&&point.shapeArgs.height);// #4118\nlabels.push(point[coll]);}});});}});chart.hideOverlappingLabels(labels);}// Do it now ...\ncollectAndHide();// ... and after each chart redraw\naddEvent(chart,'redraw',collectAndHide);});/**\n         * Hide overlapping labels. Labels are moved and faded in and out on zoom to provide a smooth \n         * visual imression.\n         */Chart.prototype.hideOverlappingLabels=function(labels){var len=labels.length,label,i,j,label1,label2,isIntersecting,pos1,pos2,parent1,parent2,padding,intersectRect=function(x1,y1,w1,h1,x2,y2,w2,h2){return!(x2>x1+w1||x2+w2<x1||y2>y1+h1||y2+h2<y1);};// Mark with initial opacity\nfor(i=0;i<len;i++){label=labels[i];if(label){label.oldOpacity=label.opacity;label.newOpacity=1;}}// Prevent a situation in a gradually rising slope, that each label\n// will hide the previous one because the previous one always has\n// lower rank.\nlabels.sort(function(a,b){return(b.labelrank||0)-(a.labelrank||0);});// Detect overlapping labels\nfor(i=0;i<len;i++){label1=labels[i];for(j=i+1;j<len;++j){label2=labels[j];if(label1&&label2&&label1.placed&&label2.placed&&label1.newOpacity!==0&&label2.newOpacity!==0){pos1=label1.alignAttr;pos2=label2.alignAttr;parent1=label1.parentGroup;// Different panes have different positions\nparent2=label2.parentGroup;padding=2*(label1.box?0:label1.padding);// Substract the padding if no background or border (#4333)\nisIntersecting=intersectRect(pos1.x+parent1.translateX,pos1.y+parent1.translateY,label1.width-padding,label1.height-padding,pos2.x+parent2.translateX,pos2.y+parent2.translateY,label2.width-padding,label2.height-padding);if(isIntersecting){(label1.labelrank<label2.labelrank?label1:label2).newOpacity=0;}}}}// Hide or show\neach(labels,function(label){var complete,newOpacity;if(label){newOpacity=label.newOpacity;if(label.oldOpacity!==newOpacity&&label.placed){// Make sure the label is completely hidden to avoid catching clicks (#4362)\nif(newOpacity){label.show(true);}else{complete=function(){label.hide();};}// Animate or set the opacity                \nlabel.alignAttr.opacity=newOpacity;label[label.isOld?'animate':'attr'](label.alignAttr,null,complete);}label.isOld=true;}});};})(Highcharts);/**\n     * TrackerMixin for points and graphs\n     */var TrackerMixin=Highcharts.TrackerMixin={drawTrackerPoint:function(){var series=this,chart=series.chart,pointer=chart.pointer,cursor=series.options.cursor,css=cursor&&{cursor:cursor},onMouseOver=function(e){var target=e.target,point;while(target&&!point){point=target.point;target=target.parentNode;}if(point!==UNDEFINED&&point!==chart.hoverPoint){// undefined on graph in scatterchart\npoint.onMouseOver(e);}};// Add reference to the point\neach(series.points,function(point){if(point.graphic){point.graphic.element.point=point;}if(point.dataLabel){point.dataLabel.element.point=point;}});// Add the event listeners, we need to do this only once\nif(!series._hasTracking){each(series.trackerGroups,function(key){if(series[key]){// we don't always have dataLabelsGroup\nseries[key].addClass(PREFIX+'tracker').on('mouseover',onMouseOver).on('mouseout',function(e){pointer.onTrackerMouseOut(e);}).css(css);if(hasTouch){series[key].on('touchstart',onMouseOver);}}});series._hasTracking=true;}},/**\n         * Draw the tracker object that sits above all data labels and markers to\n         * track mouse events on the graph or points. For the line type charts\n         * the tracker uses the same graphPath, but with a greater stroke width\n         * for better control.\n         */drawTrackerGraph:function(){var series=this,options=series.options,trackByArea=options.trackByArea,trackerPath=[].concat(trackByArea?series.areaPath:series.graphPath),trackerPathLength=trackerPath.length,chart=series.chart,pointer=chart.pointer,renderer=chart.renderer,snap=chart.options.tooltip.snap,tracker=series.tracker,cursor=options.cursor,css=cursor&&{cursor:cursor},i,onMouseOver=function(){if(chart.hoverSeries!==series){series.onMouseOver();}},/*\n                 * Empirical lowest possible opacities for TRACKER_FILL for an element to stay invisible but clickable\n                 * IE6: 0.002\n                 * IE7: 0.002\n                 * IE8: 0.002\n                 * IE9: 0.00000000001 (unlimited)\n                 * IE10: 0.0001 (exporting only)\n                 * FF: 0.00000000001 (unlimited)\n                 * Chrome: 0.000001\n                 * Safari: 0.000001\n                 * Opera: 0.00000000001 (unlimited)\n                 */TRACKER_FILL='rgba(192,192,192,'+(hasSVG?0.0001:0.002)+')';// Extend end points. A better way would be to use round linecaps,\n// but those are not clickable in VML.\nif(trackerPathLength&&!trackByArea){i=trackerPathLength+1;while(i--){if(trackerPath[i]===M){// extend left side\ntrackerPath.splice(i+1,0,trackerPath[i+1]-snap,trackerPath[i+2],L);}if(i&&trackerPath[i]===M||i===trackerPathLength){// extend right side\ntrackerPath.splice(i,0,L,trackerPath[i-2]+snap,trackerPath[i-1]);}}}// handle single points\n/*for (i = 0; i < singlePoints.length; i++) {\n                singlePoint = singlePoints[i];\n                trackerPath.push(M, singlePoint.plotX - snap, singlePoint.plotY,\n                L, singlePoint.plotX + snap, singlePoint.plotY);\n            }*/ // draw the tracker\nif(tracker){tracker.attr({d:trackerPath});}else{// create\nseries.tracker=renderer.path(trackerPath).attr({'stroke-linejoin':'round',// #1225\nvisibility:series.visible?VISIBLE:HIDDEN,stroke:TRACKER_FILL,fill:trackByArea?TRACKER_FILL:NONE,'stroke-width':options.lineWidth+(trackByArea?0:2*snap),zIndex:2}).add(series.group);// The tracker is added to the series group, which is clipped, but is covered\n// by the marker group. So the marker group also needs to capture events.\neach([series.tracker,series.markerGroup],function(tracker){tracker.addClass(PREFIX+'tracker').on('mouseover',onMouseOver).on('mouseout',function(e){pointer.onTrackerMouseOut(e);}).css(css);if(hasTouch){tracker.on('touchstart',onMouseOver);}});}}};/* End TrackerMixin */ /**\n     * Add tracking event listener to the series group, so the point graphics\n     * themselves act as trackers\n     */if(seriesTypes.column){ColumnSeries.prototype.drawTracker=TrackerMixin.drawTrackerPoint;}if(seriesTypes.pie){seriesTypes.pie.prototype.drawTracker=TrackerMixin.drawTrackerPoint;}if(seriesTypes.scatter){ScatterSeries.prototype.drawTracker=TrackerMixin.drawTrackerPoint;}/*\n     * Extend Legend for item events\n     */extend(Legend.prototype,{setItemEvents:function(item,legendItem,useHTML,itemStyle,itemHiddenStyle){var legend=this;// Set the events on the item group, or in case of useHTML, the item itself (#1249)\n(useHTML?legendItem:item.legendGroup).on('mouseover',function(){item.setState(HOVER_STATE);legendItem.css(legend.options.itemHoverStyle);}).on('mouseout',function(){legendItem.css(item.visible?itemStyle:itemHiddenStyle);item.setState();}).on('click',function(event){var strLegendItemClick='legendItemClick',fnLegendItemClick=function(){if(item.setVisible){item.setVisible();}};// Pass over the click/touch event. #4.\nevent={browserEvent:event};// click the name or symbol\nif(item.firePointEvent){// point\nitem.firePointEvent(strLegendItemClick,event,fnLegendItemClick);}else{fireEvent(item,strLegendItemClick,event,fnLegendItemClick);}});},createCheckboxForItem:function(item){var legend=this;item.checkbox=createElement('input',{type:'checkbox',checked:item.selected,defaultChecked:item.selected// required by IE7\n},legend.options.itemCheckboxStyle,legend.chart.container);addEvent(item.checkbox,'click',function(event){var target=event.target;fireEvent(item.series||item,'checkboxClick',{// #3712\nchecked:target.checked,item:item},function(){item.select();});});}});/*\n     * Add pointer cursor to legend itemstyle in defaultOptions\n     */defaultOptions.legend.itemStyle.cursor='pointer';/*\n     * Extend the Chart object with interaction\n     */extend(Chart.prototype,{/**\n         * Display the zoom button\n         */showResetZoom:function(){var chart=this,lang=defaultOptions.lang,btnOptions=chart.options.chart.resetZoomButton,theme=btnOptions.theme,states=theme.states,alignTo=btnOptions.relativeTo==='chart'?null:'plotBox';function zoomOut(){chart.zoomOut();}this.resetZoomButton=chart.renderer.button(lang.resetZoom,null,null,zoomOut,theme,states&&states.hover).attr({align:btnOptions.position.align,title:lang.resetZoomTitle}).add().align(btnOptions.position,false,alignTo);},/**\n         * Zoom out to 1:1\n         */zoomOut:function(){var chart=this;fireEvent(chart,'selection',{resetSelection:true},function(){chart.zoom();});},/**\n         * Zoom into a given portion of the chart given by axis coordinates\n         * @param {Object} event\n         */zoom:function(event){var chart=this,hasZoomed,pointer=chart.pointer,displayButton=false,resetZoomButton;// If zoom is called with no arguments, reset the axes\nif(!event||event.resetSelection){each(chart.axes,function(axis){hasZoomed=axis.zoom();});}else{// else, zoom in on all axes\neach(event.xAxis.concat(event.yAxis),function(axisData){var axis=axisData.axis,isXAxis=axis.isXAxis;// don't zoom more than minRange\nif(pointer[isXAxis?'zoomX':'zoomY']||pointer[isXAxis?'pinchX':'pinchY']){hasZoomed=axis.zoom(axisData.min,axisData.max);if(axis.displayBtn){displayButton=true;}}});}// Show or hide the Reset zoom button\nresetZoomButton=chart.resetZoomButton;if(displayButton&&!resetZoomButton){chart.showResetZoom();}else if(!displayButton&&isObject(resetZoomButton)){chart.resetZoomButton=resetZoomButton.destroy();}// Redraw\nif(hasZoomed){chart.redraw(pick(chart.options.chart.animation,event&&event.animation,chart.pointCount<100)// animation\n);}},/**\n         * Pan the chart by dragging the mouse across the pane. This function is called\n         * on mouse move, and the distance to pan is computed from chartX compared to\n         * the first chartX position in the dragging operation.\n         */pan:function(e,panning){var chart=this,hoverPoints=chart.hoverPoints,doRedraw;// remove active points for shared tooltip\nif(hoverPoints){each(hoverPoints,function(point){point.setState();});}each(panning==='xy'?[1,0]:[1],function(isX){// xy is used in maps\nvar axis=chart[isX?'xAxis':'yAxis'][0],horiz=axis.horiz,mousePos=e[horiz?'chartX':'chartY'],mouseDown=horiz?'mouseDownX':'mouseDownY',startPos=chart[mouseDown],halfPointRange=(axis.pointRange||0)/2,extremes=axis.getExtremes(),newMin=axis.toValue(startPos-mousePos,true)+halfPointRange,newMax=axis.toValue(startPos+axis.len-mousePos,true)-halfPointRange,goingLeft=startPos>mousePos;// #3613\nif(axis.series.length&&(goingLeft||newMin>mathMin(extremes.dataMin,extremes.min))&&(!goingLeft||newMax<mathMax(extremes.dataMax,extremes.max))){axis.setExtremes(newMin,newMax,false,false,{trigger:'pan'});doRedraw=true;}chart[mouseDown]=mousePos;// set new reference for next run\n});if(doRedraw){chart.redraw(false);}css(chart.container,{cursor:'move'});}});/*\n     * Extend the Point object with interaction\n     */extend(Point.prototype,{/**\n         * Toggle the selection status of a point\n         * @param {Boolean} selected Whether to select or unselect the point.\n         * @param {Boolean} accumulate Whether to add to the previous selection. By default,\n         *         this happens if the control key (Cmd on Mac) was pressed during clicking.\n         */select:function(selected,accumulate){var point=this,series=point.series,chart=series.chart;selected=pick(selected,!point.selected);// fire the event with the default handler\npoint.firePointEvent(selected?'select':'unselect',{accumulate:accumulate},function(){point.selected=point.options.selected=selected;series.options.data[inArray(point,series.data)]=point.options;point.setState(selected&&SELECT_STATE);// unselect all other points unless Ctrl or Cmd + click\nif(!accumulate){each(chart.getSelectedPoints(),function(loopPoint){if(loopPoint.selected&&loopPoint!==point){loopPoint.selected=loopPoint.options.selected=false;series.options.data[inArray(loopPoint,series.data)]=loopPoint.options;loopPoint.setState(NORMAL_STATE);loopPoint.firePointEvent('unselect');}});}});},/**\n         * Runs on mouse over the point\n         *\n         * @param {Object} e The event arguments\n         * @param {Boolean} byProximity Falsy for kd points that are closest to the mouse, or to\n         *        actually hovered points. True for other points in shared tooltip.\n         */onMouseOver:function(e,byProximity){var point=this,series=point.series,chart=series.chart,tooltip=chart.tooltip,hoverPoint=chart.hoverPoint;if(chart.hoverSeries!==series){series.onMouseOver();}// set normal state to previous series\nif(hoverPoint&&hoverPoint!==point){hoverPoint.onMouseOut();}if(point.series){// It may have been destroyed, #4130\n// trigger the event\npoint.firePointEvent('mouseOver');// update the tooltip\nif(tooltip&&(!tooltip.shared||series.noSharedTooltip)){tooltip.refresh(point,e);}// hover this\npoint.setState(HOVER_STATE);if(!byProximity){chart.hoverPoint=point;}}},/**\n         * Runs on mouse out from the point\n         */onMouseOut:function(){var chart=this.series.chart,hoverPoints=chart.hoverPoints;this.firePointEvent('mouseOut');if(!hoverPoints||inArray(this,hoverPoints)===-1){// #887, #2240\nthis.setState();chart.hoverPoint=null;}},/**\n         * Import events from the series' and point's options. Only do it on\n         * demand, to save processing time on hovering.\n         */importEvents:function(){if(!this.hasImportedEvents){var point=this,options=merge(point.series.options.point,point.options),events=options.events,eventType;point.events=events;for(eventType in events){addEvent(point,eventType,events[eventType]);}this.hasImportedEvents=true;}},/**\n         * Set the point's state\n         * @param {String} state\n         */setState:function(state,move){var point=this,plotX=mathFloor(point.plotX),// #4586\nplotY=point.plotY,series=point.series,stateOptions=series.options.states,markerOptions=defaultPlotOptions[series.type].marker&&series.options.marker,normalDisabled=markerOptions&&!markerOptions.enabled,markerStateOptions=markerOptions&&markerOptions.states[state],stateDisabled=markerStateOptions&&markerStateOptions.enabled===false,stateMarkerGraphic=series.stateMarkerGraphic,pointMarker=point.marker||{},chart=series.chart,radius,halo=series.halo,haloOptions,newSymbol,pointAttr;state=state||NORMAL_STATE;// empty string\npointAttr=point.pointAttr[state]||series.pointAttr[state];if(// already has this state\nstate===point.state&&!move||// selected points don't respond to hover\npoint.selected&&state!==SELECT_STATE||// series' state options is disabled\nstateOptions[state]&&stateOptions[state].enabled===false||// general point marker's state options is disabled\nstate&&(stateDisabled||normalDisabled&&markerStateOptions.enabled===false)||// individual point marker's state options is disabled\nstate&&pointMarker.states&&pointMarker.states[state]&&pointMarker.states[state].enabled===false// #1610\n){return;}// apply hover styles to the existing point\nif(point.graphic){radius=markerOptions&&point.graphic.symbolName&&pointAttr.r;point.graphic.attr(merge(pointAttr,radius?{// new symbol attributes (#507, #612)\nx:plotX-radius,y:plotY-radius,width:2*radius,height:2*radius}:{}));// Zooming in from a range with no markers to a range with markers\nif(stateMarkerGraphic){stateMarkerGraphic.hide();}}else{// if a graphic is not applied to each point in the normal state, create a shared\n// graphic for the hover state\nif(state&&markerStateOptions){radius=markerStateOptions.radius;newSymbol=pointMarker.symbol||series.symbol;// If the point has another symbol than the previous one, throw away the\n// state marker graphic and force a new one (#1459)\nif(stateMarkerGraphic&&stateMarkerGraphic.currentSymbol!==newSymbol){stateMarkerGraphic=stateMarkerGraphic.destroy();}// Add a new state marker graphic\nif(!stateMarkerGraphic){if(newSymbol){series.stateMarkerGraphic=stateMarkerGraphic=chart.renderer.symbol(newSymbol,plotX-radius,plotY-radius,2*radius,2*radius).attr(pointAttr).add(series.markerGroup);stateMarkerGraphic.currentSymbol=newSymbol;}// Move the existing graphic\n}else{stateMarkerGraphic[move?'animate':'attr']({// #1054\nx:plotX-radius,y:plotY-radius});}}if(stateMarkerGraphic){stateMarkerGraphic[state&&chart.isInsidePlot(plotX,plotY,chart.inverted)?'show':'hide']();// #2450\nstateMarkerGraphic.element.point=point;// #4310\n}}// Show me your halo\nhaloOptions=stateOptions[state]&&stateOptions[state].halo;if(haloOptions&&haloOptions.size){if(!halo){series.halo=halo=chart.renderer.path().add(chart.seriesGroup);}halo.attr(extend({'fill':point.color||series.color,'fill-opacity':haloOptions.opacity,'zIndex':-1// #4929, IE8 added halo above everything\n},haloOptions.attributes))[move?'animate':'attr']({d:point.haloPath(haloOptions.size)});}else if(halo){halo.attr({d:[]});}point.state=state;},/**\n         * Get the circular path definition for the halo\n         * @param  {Number} size The radius of the circular halo\n         * @returns {Array} The path definition\n         */haloPath:function(size){var series=this.series,chart=series.chart,plotBox=series.getPlotBox(),inverted=chart.inverted,plotX=Math.floor(this.plotX);return chart.renderer.symbols.circle(plotBox.translateX+(inverted?series.yAxis.len-this.plotY:plotX)-size,plotBox.translateY+(inverted?series.xAxis.len-plotX:this.plotY)-size,size*2,size*2);}});/*\n     * Extend the Series object with interaction\n     */extend(Series.prototype,{/**\n         * Series mouse over handler\n         */onMouseOver:function(){var series=this,chart=series.chart,hoverSeries=chart.hoverSeries;// set normal state to previous series\nif(hoverSeries&&hoverSeries!==series){hoverSeries.onMouseOut();}// trigger the event, but to save processing time,\n// only if defined\nif(series.options.events.mouseOver){fireEvent(series,'mouseOver');}// hover this\nseries.setState(HOVER_STATE);chart.hoverSeries=series;},/**\n         * Series mouse out handler\n         */onMouseOut:function(){// trigger the event only if listeners exist\nvar series=this,options=series.options,chart=series.chart,tooltip=chart.tooltip,hoverPoint=chart.hoverPoint;chart.hoverSeries=null;// #182, set to null before the mouseOut event fires\n// trigger mouse out on the point, which must be in this series\nif(hoverPoint){hoverPoint.onMouseOut();}// fire the mouse out event\nif(series&&options.events.mouseOut){fireEvent(series,'mouseOut');}// hide the tooltip\nif(tooltip&&!options.stickyTracking&&(!tooltip.shared||series.noSharedTooltip)){tooltip.hide();}// set normal state\nseries.setState();},/**\n         * Set the state of the graph\n         */setState:function(state){var series=this,options=series.options,graph=series.graph,stateOptions=options.states,lineWidth=options.lineWidth,attribs,i=0;state=state||NORMAL_STATE;if(series.state!==state){series.state=state;if(stateOptions[state]&&stateOptions[state].enabled===false){return;}if(state){lineWidth=stateOptions[state].lineWidth||lineWidth+(stateOptions[state].lineWidthPlus||0);// #4035\n}if(graph&&!graph.dashstyle){// hover is turned off for dashed lines in VML\nattribs={'stroke-width':lineWidth};// use attr because animate will cause any other animation on the graph to stop\ngraph.attr(attribs);while(series['zoneGraph'+i]){series['zoneGraph'+i].attr(attribs);i=i+1;}}}},/**\n         * Set the visibility of the graph\n         *\n         * @param vis {Boolean} True to show the series, false to hide. If UNDEFINED,\n         *                the visibility is toggled.\n         */setVisible:function(vis,redraw){var series=this,chart=series.chart,legendItem=series.legendItem,showOrHide,ignoreHiddenSeries=chart.options.chart.ignoreHiddenSeries,oldVisibility=series.visible;// if called without an argument, toggle visibility\nseries.visible=vis=series.userOptions.visible=vis===UNDEFINED?!oldVisibility:vis;showOrHide=vis?'show':'hide';// show or hide elements\neach(['group','dataLabelsGroup','markerGroup','tracker'],function(key){if(series[key]){series[key][showOrHide]();}});// hide tooltip (#1361)\nif(chart.hoverSeries===series||(chart.hoverPoint&&chart.hoverPoint.series)===series){series.onMouseOut();}if(legendItem){chart.legend.colorizeItem(series,vis);}// rescale or adapt to resized chart\nseries.isDirty=true;// in a stack, all other series are affected\nif(series.options.stacking){each(chart.series,function(otherSeries){if(otherSeries.options.stacking&&otherSeries.visible){otherSeries.isDirty=true;}});}// show or hide linked series\neach(series.linkedSeries,function(otherSeries){otherSeries.setVisible(vis,false);});if(ignoreHiddenSeries){chart.isDirtyBox=true;}if(redraw!==false){chart.redraw();}fireEvent(series,showOrHide);},/**\n         * Show the graph\n         */show:function(){this.setVisible(true);},/**\n         * Hide the graph\n         */hide:function(){this.setVisible(false);},/**\n         * Set the selected state of the graph\n         *\n         * @param selected {Boolean} True to select the series, false to unselect. If\n         *                UNDEFINED, the selection state is toggled.\n         */select:function(selected){var series=this;// if called without an argument, toggle\nseries.selected=selected=selected===UNDEFINED?!series.selected:selected;if(series.checkbox){series.checkbox.checked=selected;}fireEvent(series,selected?'select':'unselect');},drawTracker:TrackerMixin.drawTrackerGraph});/* ****************************************************************************\n     * Start ordinal axis logic                                                   *\n     *****************************************************************************/wrap(Series.prototype,'init',function(proceed){var series=this,xAxis;// call the original function\nproceed.apply(this,Array.prototype.slice.call(arguments,1));xAxis=series.xAxis;// Destroy the extended ordinal index on updated data\nif(xAxis&&xAxis.options.ordinal){addEvent(series,'updatedData',function(){delete xAxis.ordinalIndex;});}});/**\n     * In an ordinal axis, there might be areas with dense consentrations of points, then large\n     * gaps between some. Creating equally distributed ticks over this entire range\n     * may lead to a huge number of ticks that will later be removed. So instead, break the\n     * positions up in segments, find the tick positions for each segment then concatenize them.\n     * This method is used from both data grouping logic and X axis tick position logic.\n     */wrap(Axis.prototype,'getTimeTicks',function(proceed,normalizedInterval,min,max,startOfWeek,positions,closestDistance,findHigherRanks){var start=0,end,segmentPositions,higherRanks={},hasCrossedHigherRank,info,posLength,outsideMax,groupPositions=[],lastGroupPosition=-Number.MAX_VALUE,tickPixelIntervalOption=this.options.tickPixelInterval;// The positions are not always defined, for example for ordinal positions when data\n// has regular interval (#1557, #2090)\nif(!this.options.ordinal&&!this.options.breaks||!positions||positions.length<3||min===UNDEFINED){return proceed.call(this,normalizedInterval,min,max,startOfWeek);}// Analyze the positions array to split it into segments on gaps larger than 5 times\n// the closest distance. The closest distance is already found at this point, so\n// we reuse that instead of computing it again.\nposLength=positions.length;for(end=0;end<posLength;end++){outsideMax=end&&positions[end-1]>max;if(positions[end]<min){// Set the last position before min\nstart=end;}if(end===posLength-1||positions[end+1]-positions[end]>closestDistance*5||outsideMax){// For each segment, calculate the tick positions from the getTimeTicks utility\n// function. The interval will be the same regardless of how long the segment is.\nif(positions[end]>lastGroupPosition){// #1475\nsegmentPositions=proceed.call(this,normalizedInterval,positions[start],positions[end],startOfWeek);// Prevent duplicate groups, for example for multiple segments within one larger time frame (#1475)\nwhile(segmentPositions.length&&segmentPositions[0]<=lastGroupPosition){segmentPositions.shift();}if(segmentPositions.length){lastGroupPosition=segmentPositions[segmentPositions.length-1];}groupPositions=groupPositions.concat(segmentPositions);}// Set start of next segment\nstart=end+1;}if(outsideMax){break;}}// Get the grouping info from the last of the segments. The info is the same for\n// all segments.\ninfo=segmentPositions.info;// Optionally identify ticks with higher rank, for example when the ticks\n// have crossed midnight.\nif(findHigherRanks&&info.unitRange<=timeUnits.hour){end=groupPositions.length-1;// Compare points two by two\nfor(start=1;start<end;start++){if(dateFormat('%d',groupPositions[start])!==dateFormat('%d',groupPositions[start-1])){higherRanks[groupPositions[start]]='day';hasCrossedHigherRank=true;}}// If the complete array has crossed midnight, we want to mark the first\n// positions also as higher rank\nif(hasCrossedHigherRank){higherRanks[groupPositions[0]]='day';}info.higherRanks=higherRanks;}// Save the info\ngroupPositions.info=info;// Don't show ticks within a gap in the ordinal axis, where the space between\n// two points is greater than a portion of the tick pixel interval\nif(findHigherRanks&&defined(tickPixelIntervalOption)){// check for squashed ticks\nvar length=groupPositions.length,i=length,itemToRemove,translated,translatedArr=[],lastTranslated,medianDistance,distance,distances=[];// Find median pixel distance in order to keep a reasonably even distance between\n// ticks (#748)\nwhile(i--){translated=this.translate(groupPositions[i]);if(lastTranslated){distances[i]=lastTranslated-translated;}translatedArr[i]=lastTranslated=translated;}distances.sort();medianDistance=distances[mathFloor(distances.length/2)];if(medianDistance<tickPixelIntervalOption*0.6){medianDistance=null;}// Now loop over again and remove ticks where needed\ni=groupPositions[length-1]>max?length-1:length;// #817\nlastTranslated=undefined;while(i--){translated=translatedArr[i];distance=lastTranslated-translated;// Remove ticks that are closer than 0.6 times the pixel interval from the one to the right,\n// but not if it is close to the median distance (#748).\nif(lastTranslated&&distance<tickPixelIntervalOption*0.8&&(medianDistance===null||distance<medianDistance*0.8)){// Is this a higher ranked position with a normal position to the right?\nif(higherRanks[groupPositions[i]]&&!higherRanks[groupPositions[i+1]]){// Yes: remove the lower ranked neighbour to the right\nitemToRemove=i+1;lastTranslated=translated;// #709\n}else{// No: remove this one\nitemToRemove=i;}groupPositions.splice(itemToRemove,1);}else{lastTranslated=translated;}}}return groupPositions;});// Extend the Axis prototype\nextend(Axis.prototype,{/**\n         * Calculate the ordinal positions before tick positions are calculated.\n         */beforeSetTickPositions:function(){var axis=this,len,ordinalPositions=[],useOrdinal=false,dist,extremes=axis.getExtremes(),min=extremes.min,max=extremes.max,minIndex,maxIndex,slope,hasBreaks=axis.isXAxis&&!!axis.options.breaks,isOrdinal=axis.options.ordinal,i;// apply the ordinal logic\nif(isOrdinal||hasBreaks){// #4167 YAxis is never ordinal ?\neach(axis.series,function(series,i){if(series.visible!==false&&(series.takeOrdinalPosition!==false||hasBreaks)){// concatenate the processed X data into the existing positions, or the empty array\nordinalPositions=ordinalPositions.concat(series.processedXData);len=ordinalPositions.length;// remove duplicates (#1588)\nordinalPositions.sort(function(a,b){return a-b;// without a custom function it is sorted as strings\n});if(len){i=len-1;while(i--){if(ordinalPositions[i]===ordinalPositions[i+1]){ordinalPositions.splice(i,1);}}}}});// cache the length\nlen=ordinalPositions.length;// Check if we really need the overhead of mapping axis data against the ordinal positions.\n// If the series consist of evenly spaced data any way, we don't need any ordinal logic.\nif(len>2){// two points have equal distance by default\ndist=ordinalPositions[1]-ordinalPositions[0];i=len-1;while(i--&&!useOrdinal){if(ordinalPositions[i+1]-ordinalPositions[i]!==dist){useOrdinal=true;}}// When zooming in on a week, prevent axis padding for weekends even though the data within\n// the week is evenly spaced.\nif(!axis.options.keepOrdinalPadding&&(ordinalPositions[0]-min>dist||max-ordinalPositions[ordinalPositions.length-1]>dist)){useOrdinal=true;}}// Record the slope and offset to compute the linear values from the array index.\n// Since the ordinal positions may exceed the current range, get the start and\n// end positions within it (#719, #665b)\nif(useOrdinal){// Register\naxis.ordinalPositions=ordinalPositions;// This relies on the ordinalPositions being set. Use mathMax and mathMin to prevent\n// padding on either sides of the data.\nminIndex=axis.val2lin(mathMax(min,ordinalPositions[0]),true);maxIndex=mathMax(axis.val2lin(mathMin(max,ordinalPositions[ordinalPositions.length-1]),true),1);// #3339\n// Set the slope and offset of the values compared to the indices in the ordinal positions\naxis.ordinalSlope=slope=(max-min)/(maxIndex-minIndex);axis.ordinalOffset=min-minIndex*slope;}else{axis.ordinalPositions=axis.ordinalSlope=axis.ordinalOffset=UNDEFINED;}}axis.isOrdinal=isOrdinal&&useOrdinal;// #3818, #4196, #4926\naxis.groupIntervalFactor=null;// reset for next run\n},/**\n         * Translate from a linear axis value to the corresponding ordinal axis position. If there\n         * are no gaps in the ordinal axis this will be the same. The translated value is the value\n         * that the point would have if the axis were linear, using the same min and max.\n         *\n         * @param Number val The axis value\n         * @param Boolean toIndex Whether to return the index in the ordinalPositions or the new value\n         */val2lin:function(val,toIndex){var axis=this,ordinalPositions=axis.ordinalPositions,ret;if(!ordinalPositions){ret=val;}else{var ordinalLength=ordinalPositions.length,i,distance,ordinalIndex;// first look for an exact match in the ordinalpositions array\ni=ordinalLength;while(i--){if(ordinalPositions[i]===val){ordinalIndex=i;break;}}// if that failed, find the intermediate position between the two nearest values\ni=ordinalLength-1;while(i--){if(val>ordinalPositions[i]||i===0){// interpolate\ndistance=(val-ordinalPositions[i])/(ordinalPositions[i+1]-ordinalPositions[i]);// something between 0 and 1\nordinalIndex=i+distance;break;}}ret=toIndex?ordinalIndex:axis.ordinalSlope*(ordinalIndex||0)+axis.ordinalOffset;}return ret;},/**\n         * Translate from linear (internal) to axis value\n         *\n         * @param Number val The linear abstracted value\n         * @param Boolean fromIndex Translate from an index in the ordinal positions rather than a value\n         */lin2val:function(val,fromIndex){var axis=this,ordinalPositions=axis.ordinalPositions,ret;if(!ordinalPositions){// the visible range contains only equally spaced values\nret=val;}else{var ordinalSlope=axis.ordinalSlope,ordinalOffset=axis.ordinalOffset,i=ordinalPositions.length-1,linearEquivalentLeft,linearEquivalentRight,distance;// Handle the case where we translate from the index directly, used only\n// when panning an ordinal axis\nif(fromIndex){if(val<0){// out of range, in effect panning to the left\nval=ordinalPositions[0];}else if(val>i){// out of range, panning to the right\nval=ordinalPositions[i];}else{// split it up\ni=mathFloor(val);distance=val-i;// the decimal\n}// Loop down along the ordinal positions. When the linear equivalent of i matches\n// an ordinal position, interpolate between the left and right values.\n}else{while(i--){linearEquivalentLeft=ordinalSlope*i+ordinalOffset;if(val>=linearEquivalentLeft){linearEquivalentRight=ordinalSlope*(i+1)+ordinalOffset;distance=(val-linearEquivalentLeft)/(linearEquivalentRight-linearEquivalentLeft);// something between 0 and 1\nbreak;}}}// If the index is within the range of the ordinal positions, return the associated\n// or interpolated value. If not, just return the value\nret=distance!==UNDEFINED&&ordinalPositions[i]!==UNDEFINED?ordinalPositions[i]+(distance?distance*(ordinalPositions[i+1]-ordinalPositions[i]):0):val;}return ret;},/**\n         * Get the ordinal positions for the entire data set. This is necessary in chart panning\n         * because we need to find out what points or data groups are available outside the\n         * visible range. When a panning operation starts, if an index for the given grouping\n         * does not exists, it is created and cached. This index is deleted on updated data, so\n         * it will be regenerated the next time a panning operation starts.\n         */getExtendedPositions:function(){var axis=this,chart=axis.chart,grouping=axis.series[0].currentDataGrouping,ordinalIndex=axis.ordinalIndex,key=grouping?grouping.count+grouping.unitName:'raw',extremes=axis.getExtremes(),fakeAxis,fakeSeries;// If this is the first time, or the ordinal index is deleted by updatedData,\n// create it.\nif(!ordinalIndex){ordinalIndex=axis.ordinalIndex={};}if(!ordinalIndex[key]){// Create a fake axis object where the extended ordinal positions are emulated\nfakeAxis={series:[],getExtremes:function(){return{min:extremes.dataMin,max:extremes.dataMax};},options:{ordinal:true},val2lin:Axis.prototype.val2lin// #2590\n};// Add the fake series to hold the full data, then apply processData to it\neach(axis.series,function(series){fakeSeries={xAxis:fakeAxis,xData:series.xData,chart:chart,destroyGroupedData:noop};fakeSeries.options={dataGrouping:grouping?{enabled:true,forced:true,approximation:'open',// doesn't matter which, use the fastest\nunits:[[grouping.unitName,[grouping.count]]]}:{enabled:false}};series.processData.apply(fakeSeries);fakeAxis.series.push(fakeSeries);});// Run beforeSetTickPositions to compute the ordinalPositions\naxis.beforeSetTickPositions.apply(fakeAxis);// Cache it\nordinalIndex[key]=fakeAxis.ordinalPositions;}return ordinalIndex[key];},/**\n         * Find the factor to estimate how wide the plot area would have been if ordinal\n         * gaps were included. This value is used to compute an imagined plot width in order\n         * to establish the data grouping interval.\n         *\n         * A real world case is the intraday-candlestick\n         * example. Without this logic, it would show the correct data grouping when viewing\n         * a range within each day, but once moving the range to include the gap between two\n         * days, the interval would include the cut-away night hours and the data grouping\n         * would be wrong. So the below method tries to compensate by identifying the most\n         * common point interval, in this case days.\n         *\n         * An opposite case is presented in issue #718. We have a long array of daily data,\n         * then one point is appended one hour after the last point. We expect the data grouping\n         * not to change.\n         *\n         * In the future, if we find cases where this estimation doesn't work optimally, we\n         * might need to add a second pass to the data grouping logic, where we do another run\n         * with a greater interval if the number of data groups is more than a certain fraction\n         * of the desired group count.\n         */getGroupIntervalFactor:function(xMin,xMax,series){var i,processedXData=series.processedXData,len=processedXData.length,distances=[],median,groupIntervalFactor=this.groupIntervalFactor;// Only do this computation for the first series, let the other inherit it (#2416)\nif(!groupIntervalFactor){// Register all the distances in an array\nfor(i=0;i<len-1;i++){distances[i]=processedXData[i+1]-processedXData[i];}// Sort them and find the median\ndistances.sort(function(a,b){return a-b;});median=distances[mathFloor(len/2)];// Compensate for series that don't extend through the entire axis extent. #1675.\nxMin=mathMax(xMin,processedXData[0]);xMax=mathMin(xMax,processedXData[len-1]);this.groupIntervalFactor=groupIntervalFactor=len*median/(xMax-xMin);}// Return the factor needed for data grouping\nreturn groupIntervalFactor;},/**\n         * Make the tick intervals closer because the ordinal gaps make the ticks spread out or cluster\n         */postProcessTickInterval:function(tickInterval){// Problem: http://jsfiddle.net/highcharts/FQm4E/1/\n// This is a case where this algorithm doesn't work optimally. In this case, the\n// tick labels are spread out per week, but all the gaps reside within weeks. So\n// we have a situation where the labels are courser than the ordinal gaps, and\n// thus the tick interval should not be altered\nvar ordinalSlope=this.ordinalSlope,ret;if(ordinalSlope){if(!this.options.breaks){ret=tickInterval/(ordinalSlope/this.closestPointRange);}else{ret=this.closestPointRange;}}else{ret=tickInterval;}return ret;}});// Extending the Chart.pan method for ordinal axes\nwrap(Chart.prototype,'pan',function(proceed,e){var chart=this,xAxis=chart.xAxis[0],chartX=e.chartX,runBase=false;if(xAxis.options.ordinal&&xAxis.series.length){var mouseDownX=chart.mouseDownX,extremes=xAxis.getExtremes(),dataMax=extremes.dataMax,min=extremes.min,max=extremes.max,trimmedRange,hoverPoints=chart.hoverPoints,closestPointRange=xAxis.closestPointRange,pointPixelWidth=xAxis.translationSlope*(xAxis.ordinalSlope||closestPointRange),movedUnits=(mouseDownX-chartX)/pointPixelWidth,// how many ordinal units did we move?\nextendedAxis={ordinalPositions:xAxis.getExtendedPositions()},// get index of all the chart's points\nordinalPositions,searchAxisLeft,lin2val=xAxis.lin2val,val2lin=xAxis.val2lin,searchAxisRight;if(!extendedAxis.ordinalPositions){// we have an ordinal axis, but the data is equally spaced\nrunBase=true;}else if(mathAbs(movedUnits)>1){// Remove active points for shared tooltip\nif(hoverPoints){each(hoverPoints,function(point){point.setState();});}if(movedUnits<0){searchAxisLeft=extendedAxis;searchAxisRight=xAxis.ordinalPositions?xAxis:extendedAxis;}else{searchAxisLeft=xAxis.ordinalPositions?xAxis:extendedAxis;searchAxisRight=extendedAxis;}// In grouped data series, the last ordinal position represents the grouped data, which is\n// to the left of the real data max. If we don't compensate for this, we will be allowed\n// to pan grouped data series passed the right of the plot area.\nordinalPositions=searchAxisRight.ordinalPositions;if(dataMax>ordinalPositions[ordinalPositions.length-1]){ordinalPositions.push(dataMax);}// Get the new min and max values by getting the ordinal index for the current extreme,\n// then add the moved units and translate back to values. This happens on the\n// extended ordinal positions if the new position is out of range, else it happens\n// on the current x axis which is smaller and faster.\nchart.fixedRange=max-min;trimmedRange=xAxis.toFixedRange(null,null,lin2val.apply(searchAxisLeft,[val2lin.apply(searchAxisLeft,[min,true])+movedUnits,// the new index\ntrue// translate from index\n]),lin2val.apply(searchAxisRight,[val2lin.apply(searchAxisRight,[max,true])+movedUnits,// the new index\ntrue// translate from index\n]));// Apply it if it is within the available data range\nif(trimmedRange.min>=mathMin(extremes.dataMin,min)&&trimmedRange.max<=mathMax(dataMax,max)){xAxis.setExtremes(trimmedRange.min,trimmedRange.max,true,false,{trigger:'pan'});}chart.mouseDownX=chartX;// set new reference for next run\ncss(chart.container,{cursor:'move'});}}else{runBase=true;}// revert to the linear chart.pan version\nif(runBase){// call the original function\nproceed.apply(this,Array.prototype.slice.call(arguments,1));}});/**\n     * Extend getGraphPath by identifying gaps in the ordinal data so that we can draw a gap in the\n     * line or area\n     */Series.prototype.gappedPath=function(){var gapSize=this.options.gapSize,points=this.points.slice(),i=points.length-1;if(gapSize&&i>0){// #5008\n// extension for ordinal breaks\nwhile(i--){if(points[i+1].x-points[i].x>this.closestPointRange*gapSize){points.splice(// insert after this one\ni+1,0,{isNull:true});}}}// Call base method\n//return proceed.call(this, points, a, b);\nreturn this.getGraphPath(points);};/* ****************************************************************************\n     * End ordinal axis logic                                                   *\n     *****************************************************************************/ /**\n     * Highstock JS v4.2.5 (2016-05-06)\n     * Highcharts Broken Axis module\n     * \n     * License: www.highcharts.com/license\n     */(function(factory){factory(Highcharts);})(function(H){'use strict';var pick=H.pick,wrap=H.wrap,each=H.each,extend=H.extend,fireEvent=H.fireEvent,Axis=H.Axis,Series=H.Series;function stripArguments(){return Array.prototype.slice.call(arguments,1);}extend(Axis.prototype,{isInBreak:function(brk,val){var ret,repeat=brk.repeat||Infinity,from=brk.from,length=brk.to-brk.from,test=val>=from?(val-from)%repeat:repeat-(from-val)%repeat;if(!brk.inclusive){ret=test<length&&test!==0;}else{ret=test<=length;}return ret;},isInAnyBreak:function(val,testKeep){var breaks=this.options.breaks,i=breaks&&breaks.length,inbrk,keep,ret;if(i){while(i--){if(this.isInBreak(breaks[i],val)){inbrk=true;if(!keep){keep=pick(breaks[i].showPoints,this.isXAxis?false:true);}}}if(inbrk&&testKeep){ret=inbrk&&!keep;}else{ret=inbrk;}}return ret;}});wrap(Axis.prototype,'setTickPositions',function(proceed){proceed.apply(this,Array.prototype.slice.call(arguments,1));if(this.options.breaks){var axis=this,tickPositions=this.tickPositions,info=this.tickPositions.info,newPositions=[],i;for(i=0;i<tickPositions.length;i++){if(!axis.isInAnyBreak(tickPositions[i])){newPositions.push(tickPositions[i]);}}this.tickPositions=newPositions;this.tickPositions.info=info;}});wrap(Axis.prototype,'init',function(proceed,chart,userOptions){// Force Axis to be not-ordinal when breaks are defined\nif(userOptions.breaks&&userOptions.breaks.length){userOptions.ordinal=false;}proceed.call(this,chart,userOptions);if(this.options.breaks){var axis=this;axis.isBroken=true;this.val2lin=function(val){var nval=val,brk,i;for(i=0;i<axis.breakArray.length;i++){brk=axis.breakArray[i];if(brk.to<=val){nval-=brk.len;}else if(brk.from>=val){break;}else if(axis.isInBreak(brk,val)){nval-=val-brk.from;break;}}return nval;};this.lin2val=function(val){var nval=val,brk,i;for(i=0;i<axis.breakArray.length;i++){brk=axis.breakArray[i];if(brk.from>=nval){break;}else if(brk.to<nval){nval+=brk.len;}else if(axis.isInBreak(brk,nval)){nval+=brk.len;}}return nval;};this.setExtremes=function(newMin,newMax,redraw,animation,eventArguments){// If trying to set extremes inside a break, extend it to before and after the break ( #3857 )\nwhile(this.isInAnyBreak(newMin)){newMin-=this.closestPointRange;}while(this.isInAnyBreak(newMax)){newMax-=this.closestPointRange;}Axis.prototype.setExtremes.call(this,newMin,newMax,redraw,animation,eventArguments);};this.setAxisTranslation=function(saveOld){Axis.prototype.setAxisTranslation.call(this,saveOld);var breaks=axis.options.breaks,breakArrayT=[],// Temporary one\nbreakArray=[],length=0,inBrk,repeat,brk,min=axis.userMin||axis.min,max=axis.userMax||axis.max,start,i,j;// Min & max check (#4247)\nfor(i in breaks){brk=breaks[i];repeat=brk.repeat||Infinity;if(axis.isInBreak(brk,min)){min+=brk.to%repeat-min%repeat;}if(axis.isInBreak(brk,max)){max-=max%repeat-brk.from%repeat;}}// Construct an array holding all breaks in the axis\nfor(i in breaks){brk=breaks[i];start=brk.from;repeat=brk.repeat||Infinity;while(start-repeat>min){start-=repeat;}while(start<min){start+=repeat;}for(j=start;j<max;j+=repeat){breakArrayT.push({value:j,move:'in'});breakArrayT.push({value:j+(brk.to-brk.from),move:'out',size:brk.breakSize});}}breakArrayT.sort(function(a,b){var ret;if(a.value===b.value){ret=(a.move==='in'?0:1)-(b.move==='in'?0:1);}else{ret=a.value-b.value;}return ret;});// Simplify the breaks\ninBrk=0;start=min;for(i in breakArrayT){brk=breakArrayT[i];inBrk+=brk.move==='in'?1:-1;if(inBrk===1&&brk.move==='in'){start=brk.value;}if(inBrk===0){breakArray.push({from:start,to:brk.value,len:brk.value-start-(brk.size||0)});length+=brk.value-start-(brk.size||0);}}axis.breakArray=breakArray;fireEvent(axis,'afterBreaks');axis.transA*=(max-axis.min)/(max-min-length);axis.min=min;axis.max=max;};}});wrap(Series.prototype,'generatePoints',function(proceed){proceed.apply(this,stripArguments(arguments));var series=this,xAxis=series.xAxis,yAxis=series.yAxis,points=series.points,point,i=points.length,connectNulls=series.options.connectNulls,nullGap;if(xAxis&&yAxis&&(xAxis.options.breaks||yAxis.options.breaks)){while(i--){point=points[i];nullGap=point.y===null&&connectNulls===false;// respect nulls inside the break (#4275)\nif(!nullGap&&(xAxis.isInAnyBreak(point.x,true)||yAxis.isInAnyBreak(point.y,true))){points.splice(i,1);if(this.data[i]){this.data[i].destroyElements();// removes the graphics for this point if they exist\n}}}}});function drawPointsWrapped(proceed){proceed.apply(this);this.drawBreaks(this.xAxis,['x']);this.drawBreaks(this.yAxis,pick(this.pointArrayMap,['y']));}H.Series.prototype.drawBreaks=function(axis,keys){var series=this,points=series.points,breaks,threshold,eventName,y;each(keys,function(key){breaks=axis.breakArray||[];threshold=axis.isXAxis?axis.min:pick(series.options.threshold,axis.min);each(points,function(point){y=pick(point['stack'+key.toUpperCase()],point[key]);each(breaks,function(brk){eventName=false;if(threshold<brk.from&&y>brk.to||threshold>brk.from&&y<brk.from){eventName='pointBreak';}else if(threshold<brk.from&&y>brk.from&&y<brk.to||threshold>brk.from&&y>brk.to&&y<brk.from){// point falls inside the break\neventName='pointInBreak';}if(eventName){fireEvent(axis,eventName,{point:point,brk:brk});}});});});};wrap(H.seriesTypes.column.prototype,'drawPoints',drawPointsWrapped);wrap(H.Series.prototype,'drawPoints',drawPointsWrapped);});/* ****************************************************************************\n     * Start data grouping module                                                 *\n     ******************************************************************************/var DATA_GROUPING='dataGrouping',seriesProto=Series.prototype,baseProcessData=seriesProto.processData,baseGeneratePoints=seriesProto.generatePoints,baseDestroy=seriesProto.destroy,commonOptions={approximation:'average',// average, open, high, low, close, sum\n//enabled: null, // (true for stock charts, false for basic),\n//forced: undefined,\ngroupPixelWidth:2,// the first one is the point or start value, the second is the start value if we're dealing with range,\n// the third one is the end value if dealing with a range\ndateTimeLabelFormats:{millisecond:['%A, %b %e, %H:%M:%S.%L','%A, %b %e, %H:%M:%S.%L','-%H:%M:%S.%L'],second:['%A, %b %e, %H:%M:%S','%A, %b %e, %H:%M:%S','-%H:%M:%S'],minute:['%A, %b %e, %H:%M','%A, %b %e, %H:%M','-%H:%M'],hour:['%A, %b %e, %H:%M','%A, %b %e, %H:%M','-%H:%M'],day:['%A, %b %e, %Y','%A, %b %e','-%A, %b %e, %Y'],week:['Week from %A, %b %e, %Y','%A, %b %e','-%A, %b %e, %Y'],month:['%B %Y','%B','-%B %Y'],year:['%Y','%Y','-%Y']// smoothed = false, // enable this for navigator series only\n}},specificOptions={// extends common options\nline:{},spline:{},area:{},areaspline:{},column:{approximation:'sum',groupPixelWidth:10},arearange:{approximation:'range'},areasplinerange:{approximation:'range'},columnrange:{approximation:'range',groupPixelWidth:10},candlestick:{approximation:'ohlc',groupPixelWidth:10},ohlc:{approximation:'ohlc',groupPixelWidth:5}},// units are defined in a separate array to allow complete overriding in case of a user option\ndefaultDataGroupingUnits=[['millisecond',// unit name\n[1,2,5,10,20,25,50,100,200,500]// allowed multiples\n],['second',[1,2,5,10,15,30]],['minute',[1,2,5,10,15,30]],['hour',[1,2,3,4,6,8,12]],['day',[1]],['week',[1]],['month',[1,3,6]],['year',null]],/**\n         * Define the available approximation types. The data grouping approximations takes an array\n         * or numbers as the first parameter. In case of ohlc, four arrays are sent in as four parameters.\n         * Each array consists only of numbers. In case null values belong to the group, the property\n         * .hasNulls will be set to true on the array.\n         */approximations={sum:function(arr){var len=arr.length,ret;// 1. it consists of nulls exclusively\nif(!len&&arr.hasNulls){ret=null;// 2. it has a length and real values\n}else if(len){ret=0;while(len--){ret+=arr[len];}}// 3. it has zero length, so just return undefined\n// => doNothing()\nreturn ret;},average:function(arr){var len=arr.length,ret=approximations.sum(arr);// If we have a number, return it divided by the length. If not, return\n// null or undefined based on what the sum method finds.\nif(isNumber(ret)&&len){ret=ret/len;}return ret;},open:function(arr){return arr.length?arr[0]:arr.hasNulls?null:UNDEFINED;},high:function(arr){return arr.length?arrayMax(arr):arr.hasNulls?null:UNDEFINED;},low:function(arr){return arr.length?arrayMin(arr):arr.hasNulls?null:UNDEFINED;},close:function(arr){return arr.length?arr[arr.length-1]:arr.hasNulls?null:UNDEFINED;},// ohlc and range are special cases where a multidimensional array is input and an array is output\nohlc:function(open,high,low,close){open=approximations.open(open);high=approximations.high(high);low=approximations.low(low);close=approximations.close(close);if(isNumber(open)||isNumber(high)||isNumber(low)||isNumber(close)){return[open,high,low,close];}// else, return is undefined\n},range:function(low,high){low=approximations.low(low);high=approximations.high(high);if(isNumber(low)||isNumber(high)){return[low,high];}// else, return is undefined\n}};/**\n     * Takes parallel arrays of x and y data and groups the data into intervals defined by groupPositions, a collection\n     * of starting x values for each group.\n     */seriesProto.groupData=function(xData,yData,groupPositions,approximation){var series=this,data=series.data,dataOptions=series.options.data,groupedXData=[],groupedYData=[],groupMap=[],dataLength=xData.length,pointX,pointY,groupedY,handleYData=!!yData,// when grouping the fake extended axis for panning, we don't need to consider y\nvalues=[[],[],[],[]],approximationFn=typeof approximation==='function'?approximation:approximations[approximation],pointArrayMap=series.pointArrayMap,pointArrayMapLength=pointArrayMap&&pointArrayMap.length,i,start=0;// Start with the first point within the X axis range (#2696)\nfor(i=0;i<=dataLength;i++){if(xData[i]>=groupPositions[0]){break;}}for(i;i<=dataLength;i++){// when a new group is entered, summarize and initiate the previous group\nwhile(groupPositions[1]!==UNDEFINED&&xData[i]>=groupPositions[1]||i===dataLength){// get the last group\n// get group x and y\npointX=groupPositions.shift();groupedY=approximationFn.apply(0,values);// push the grouped data\nif(groupedY!==UNDEFINED){groupedXData.push(pointX);groupedYData.push(groupedY);groupMap.push({start:start,length:values[0].length});}// reset the aggregate arrays\nstart=i;values[0]=[];values[1]=[];values[2]=[];values[3]=[];// don't loop beyond the last group\nif(i===dataLength){break;}}// break out\nif(i===dataLength){break;}// for each raw data point, push it to an array that contains all values for this specific group\nif(pointArrayMap){var index=series.cropStart+i,point=data&&data[index]||series.pointClass.prototype.applyOptions.apply({series:series},[dataOptions[index]]),j,val;for(j=0;j<pointArrayMapLength;j++){val=point[pointArrayMap[j]];if(isNumber(val)){values[j].push(val);}else if(val===null){values[j].hasNulls=true;}}}else{pointY=handleYData?yData[i]:null;if(isNumber(pointY)){values[0].push(pointY);}else if(pointY===null){values[0].hasNulls=true;}}}return[groupedXData,groupedYData,groupMap];};/**\n     * Extend the basic processData method, that crops the data to the current zoom\n     * range, with data grouping logic.\n     */seriesProto.processData=function(){var series=this,chart=series.chart,options=series.options,dataGroupingOptions=options[DATA_GROUPING],groupingEnabled=series.allowDG!==false&&dataGroupingOptions&&pick(dataGroupingOptions.enabled,chart.options._stock),hasGroupedData,skip;// run base method\nseries.forceCrop=groupingEnabled;// #334\nseries.groupPixelWidth=null;// #2110\nseries.hasProcessed=true;// #2692\n// skip if processData returns false or if grouping is disabled (in that order)\nskip=baseProcessData.apply(series,arguments)===false||!groupingEnabled;if(!skip){series.destroyGroupedData();var i,processedXData=series.processedXData,processedYData=series.processedYData,plotSizeX=chart.plotSizeX,xAxis=series.xAxis,ordinal=xAxis.options.ordinal,groupPixelWidth=series.groupPixelWidth=xAxis.getGroupPixelWidth&&xAxis.getGroupPixelWidth();// Execute grouping if the amount of points is greater than the limit defined in groupPixelWidth\nif(groupPixelWidth){hasGroupedData=true;series.points=null;// force recreation of point instances in series.translate\nvar extremes=xAxis.getExtremes(),xMin=extremes.min,xMax=extremes.max,groupIntervalFactor=ordinal&&xAxis.getGroupIntervalFactor(xMin,xMax,series)||1,interval=groupPixelWidth*(xMax-xMin)/plotSizeX*groupIntervalFactor,groupPositions=xAxis.getTimeTicks(xAxis.normalizeTimeTickInterval(interval,dataGroupingOptions.units||defaultDataGroupingUnits),Math.min(xMin,processedXData[0]),// Processed data may extend beyond axis (#4907)\nMath.max(xMax,processedXData[processedXData.length-1]),xAxis.options.startOfWeek,processedXData,series.closestPointRange),groupedData=seriesProto.groupData.apply(series,[processedXData,processedYData,groupPositions,dataGroupingOptions.approximation]),groupedXData=groupedData[0],groupedYData=groupedData[1];// prevent the smoothed data to spill out left and right, and make\n// sure data is not shifted to the left\nif(dataGroupingOptions.smoothed){i=groupedXData.length-1;groupedXData[i]=Math.min(groupedXData[i],xMax);while(i--&&i>0){groupedXData[i]+=interval/2;}groupedXData[0]=Math.max(groupedXData[0],xMin);}// record what data grouping values were used\nseries.currentDataGrouping=groupPositions.info;series.closestPointRange=groupPositions.info.totalRange;series.groupMap=groupedData[2];// Make sure the X axis extends to show the first group (#2533)\nif(defined(groupedXData[0])&&groupedXData[0]<xAxis.dataMin){if(xAxis.min===xAxis.dataMin){xAxis.min=groupedXData[0];}xAxis.dataMin=groupedXData[0];}// set series props\nseries.processedXData=groupedXData;series.processedYData=groupedYData;}else{series.currentDataGrouping=series.groupMap=null;}series.hasGroupedData=hasGroupedData;}};/**\n     * Destroy the grouped data points. #622, #740\n     */seriesProto.destroyGroupedData=function(){var groupedData=this.groupedData;// clear previous groups\neach(groupedData||[],function(point,i){if(point){groupedData[i]=point.destroy?point.destroy():null;}});this.groupedData=null;};/**\n     * Override the generatePoints method by adding a reference to grouped data\n     */seriesProto.generatePoints=function(){baseGeneratePoints.apply(this);// record grouped data in order to let it be destroyed the next time processData runs\nthis.destroyGroupedData();// #622\nthis.groupedData=this.hasGroupedData?this.points:null;};/**\n     * Extend the original method, make the tooltip's header reflect the grouped range\n     */wrap(Tooltip.prototype,'tooltipFooterHeaderFormatter',function(proceed,point,isFooter){var tooltip=this,series=point.series,options=series.options,tooltipOptions=series.tooltipOptions,dataGroupingOptions=options.dataGrouping,xDateFormat=tooltipOptions.xDateFormat,xDateFormatEnd,xAxis=series.xAxis,currentDataGrouping,dateTimeLabelFormats,labelFormats,formattedKey;// apply only to grouped series\nif(xAxis&&xAxis.options.type==='datetime'&&dataGroupingOptions&&isNumber(point.key)){// set variables\ncurrentDataGrouping=series.currentDataGrouping;dateTimeLabelFormats=dataGroupingOptions.dateTimeLabelFormats;// if we have grouped data, use the grouping information to get the right format\nif(currentDataGrouping){labelFormats=dateTimeLabelFormats[currentDataGrouping.unitName];if(currentDataGrouping.count===1){xDateFormat=labelFormats[0];}else{xDateFormat=labelFormats[1];xDateFormatEnd=labelFormats[2];}// if not grouped, and we don't have set the xDateFormat option, get the best fit,\n// so if the least distance between points is one minute, show it, but if the\n// least distance is one day, skip hours and minutes etc.\n}else if(!xDateFormat&&dateTimeLabelFormats){xDateFormat=tooltip.getXDateFormat(point,tooltipOptions,xAxis);}// now format the key\nformattedKey=dateFormat(xDateFormat,point.key);if(xDateFormatEnd){formattedKey+=dateFormat(xDateFormatEnd,point.key+currentDataGrouping.totalRange-1);}// return the replaced format\nreturn format(tooltipOptions[(isFooter?'footer':'header')+'Format'],{point:extend(point,{key:formattedKey}),series:series});}// else, fall back to the regular formatter\nreturn proceed.call(tooltip,point,isFooter);});/**\n     * Extend the series destroyer\n     */seriesProto.destroy=function(){var series=this,groupedData=series.groupedData||[],i=groupedData.length;while(i--){if(groupedData[i]){groupedData[i].destroy();}}baseDestroy.apply(series);};// Handle default options for data grouping. This must be set at runtime because some series types are\n// defined after this.\nwrap(seriesProto,'setOptions',function(proceed,itemOptions){var options=proceed.call(this,itemOptions),type=this.type,plotOptions=this.chart.options.plotOptions,defaultOptions=defaultPlotOptions[type].dataGrouping;if(specificOptions[type]){// #1284\nif(!defaultOptions){defaultOptions=merge(commonOptions,specificOptions[type]);}options.dataGrouping=merge(defaultOptions,plotOptions.series&&plotOptions.series.dataGrouping,// #1228\nplotOptions[type].dataGrouping,// Set by the StockChart constructor\nitemOptions.dataGrouping);}if(this.chart.options._stock){this.requireSorting=true;}return options;});/**\n     * When resetting the scale reset the hasProccessed flag to avoid taking previous data grouping\n     * of neighbour series into accound when determining group pixel width (#2692).\n     */wrap(Axis.prototype,'setScale',function(proceed){proceed.call(this);each(this.series,function(series){series.hasProcessed=false;});});/**\n     * Get the data grouping pixel width based on the greatest defined individual width\n     * of the axis' series, and if whether one of the axes need grouping.\n     */Axis.prototype.getGroupPixelWidth=function(){var series=this.series,len=series.length,i,groupPixelWidth=0,doGrouping=false,dataLength,dgOptions;// If multiple series are compared on the same x axis, give them the same\n// group pixel width (#334)\ni=len;while(i--){dgOptions=series[i].options.dataGrouping;if(dgOptions){groupPixelWidth=mathMax(groupPixelWidth,dgOptions.groupPixelWidth);}}// If one of the series needs grouping, apply it to all (#1634)\ni=len;while(i--){dgOptions=series[i].options.dataGrouping;if(dgOptions&&series[i].hasProcessed){// #2692\ndataLength=(series[i].processedXData||series[i].data).length;// Execute grouping if the amount of points is greater than the limit defined in groupPixelWidth\nif(series[i].groupPixelWidth||dataLength>this.chart.plotSizeX/groupPixelWidth||dataLength&&dgOptions.forced){doGrouping=true;}}}return doGrouping?groupPixelWidth:0;};/**\n     * Force data grouping on all the axis' series.\n     */Axis.prototype.setDataGrouping=function(dataGrouping,redraw){var i;redraw=pick(redraw,true);if(!dataGrouping){dataGrouping={forced:false,units:null};}// Axis is instantiated, update all series\nif(this instanceof Axis){i=this.series.length;while(i--){this.series[i].update({dataGrouping:dataGrouping},false);}// Axis not yet instanciated, alter series options\n}else{each(this.chart.options.series,function(seriesOptions){seriesOptions.dataGrouping=dataGrouping;},false);}if(redraw){this.chart.redraw();}};/* ****************************************************************************\n     * End data grouping module                                                   *\n     ******************************************************************************/ /* ****************************************************************************\n     * Start OHLC series code                                                     *\n     *****************************************************************************/ // 1 - Set default options\ndefaultPlotOptions.ohlc=merge(defaultPlotOptions.column,{lineWidth:1,tooltip:{pointFormat:'<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>'+'Open: {point.open}<br/>'+'High: {point.high}<br/>'+'Low: {point.low}<br/>'+'Close: {point.close}<br/>'},states:{hover:{lineWidth:3}},threshold:null//upColor: undefined\n});// 2 - Create the OHLCSeries object\nvar OHLCSeries=extendClass(seriesTypes.column,{type:'ohlc',pointArrayMap:['open','high','low','close'],// array point configs are mapped to this\ntoYData:function(point){// return a plain array for speedy calculation\nreturn[point.open,point.high,point.low,point.close];},pointValKey:'high',pointAttrToOptions:{// mapping between SVG attributes and the corresponding options\nstroke:'color','stroke-width':'lineWidth'},upColorProp:'stroke',/**\n         * Postprocess mapping between options and SVG attributes\n         */getAttribs:function(){seriesTypes.column.prototype.getAttribs.apply(this,arguments);var series=this,options=series.options,stateOptions=options.states,upColor=options.upColor||series.color,seriesDownPointAttr=merge(series.pointAttr),upColorProp=series.upColorProp;seriesDownPointAttr[''][upColorProp]=upColor;seriesDownPointAttr.hover[upColorProp]=stateOptions.hover.upColor||upColor;seriesDownPointAttr.select[upColorProp]=stateOptions.select.upColor||upColor;each(series.points,function(point){if(point.open<point.close&&!point.options.color){point.pointAttr=seriesDownPointAttr;}});},/**\n         * Translate data points from raw values x and y to plotX and plotY\n         */translate:function(){var series=this,yAxis=series.yAxis;seriesTypes.column.prototype.translate.apply(series);// do the translation\neach(series.points,function(point){// the graphics\nif(point.open!==null){point.plotOpen=yAxis.translate(point.open,0,1,0,1);}if(point.close!==null){point.plotClose=yAxis.translate(point.close,0,1,0,1);}});},/**\n         * Draw the data points\n         */drawPoints:function(){var series=this,points=series.points,chart=series.chart,pointAttr,plotOpen,plotClose,crispCorr,halfWidth,path,graphic,crispX;each(points,function(point){if(point.plotY!==UNDEFINED){graphic=point.graphic;pointAttr=point.pointAttr[point.selected?'selected':'']||series.pointAttr[NORMAL_STATE];// crisp vector coordinates\ncrispCorr=pointAttr['stroke-width']%2/2;crispX=mathRound(point.plotX)-crispCorr;// #2596\nhalfWidth=mathRound(point.shapeArgs.width/2);// the vertical stem\npath=['M',crispX,mathRound(point.yBottom),'L',crispX,mathRound(point.plotY)];// open\nif(point.open!==null){plotOpen=mathRound(point.plotOpen)+crispCorr;path.push('M',crispX,plotOpen,'L',crispX-halfWidth,plotOpen);}// close\nif(point.close!==null){plotClose=mathRound(point.plotClose)+crispCorr;path.push('M',crispX,plotClose,'L',crispX+halfWidth,plotClose);}// create and/or update the graphic\nif(graphic){graphic.attr(pointAttr)// #3897\n.animate({d:path});}else{point.graphic=chart.renderer.path(path).attr(pointAttr).add(series.group);}}});},/**\n         * Disable animation\n         */animate:null});seriesTypes.ohlc=OHLCSeries;/* ****************************************************************************\n     * End OHLC series code                                                       *\n     *****************************************************************************/ /* ****************************************************************************\n     * Start Candlestick series code                                              *\n     *****************************************************************************/ // 1 - set default options\ndefaultPlotOptions.candlestick=merge(defaultPlotOptions.column,{lineColor:'black',lineWidth:1,states:{hover:{lineWidth:2}},tooltip:defaultPlotOptions.ohlc.tooltip,threshold:null,upColor:'white'// upLineColor: null\n});// 2 - Create the CandlestickSeries object\nvar CandlestickSeries=extendClass(OHLCSeries,{type:'candlestick',/**\n         * One-to-one mapping from options to SVG attributes\n         */pointAttrToOptions:{// mapping between SVG attributes and the corresponding options\nfill:'color',stroke:'lineColor','stroke-width':'lineWidth'},upColorProp:'fill',/**\n         * Postprocess mapping between options and SVG attributes\n         */getAttribs:function(){seriesTypes.ohlc.prototype.getAttribs.apply(this,arguments);var series=this,options=series.options,stateOptions=options.states,upLineColor=options.upLineColor||options.lineColor,hoverStroke=stateOptions.hover.upLineColor||upLineColor,selectStroke=stateOptions.select.upLineColor||upLineColor;// Add custom line color for points going up (close > open).\n// Fill is handled by OHLCSeries' getAttribs.\neach(series.points,function(point){if(point.open<point.close){// If an individual line color is set, we need to merge the\n// point attributes, because they are shared between all up\n// points by inheritance from OHCLSeries.\nif(point.lineColor){point.pointAttr=merge(point.pointAttr);upLineColor=point.lineColor;}point.pointAttr[''].stroke=upLineColor;point.pointAttr.hover.stroke=hoverStroke;point.pointAttr.select.stroke=selectStroke;}});},/**\n         * Draw the data points\n         */drawPoints:function(){var series=this,//state = series.state,\npoints=series.points,chart=series.chart,pointAttr,seriesPointAttr=series.pointAttr[''],plotOpen,plotClose,topBox,bottomBox,hasTopWhisker,hasBottomWhisker,crispCorr,crispX,graphic,path,halfWidth;each(points,function(point){graphic=point.graphic;if(point.plotY!==UNDEFINED){pointAttr=point.pointAttr[point.selected?'selected':'']||seriesPointAttr;// crisp vector coordinates\ncrispCorr=pointAttr['stroke-width']%2/2;crispX=mathRound(point.plotX)-crispCorr;// #2596\nplotOpen=point.plotOpen;plotClose=point.plotClose;topBox=math.min(plotOpen,plotClose);bottomBox=math.max(plotOpen,plotClose);halfWidth=mathRound(point.shapeArgs.width/2);hasTopWhisker=mathRound(topBox)!==mathRound(point.plotY);hasBottomWhisker=bottomBox!==point.yBottom;topBox=mathRound(topBox)+crispCorr;bottomBox=mathRound(bottomBox)+crispCorr;// Create the path. Due to a bug in Chrome 49, the path is first instanciated\n// with no values, then the values pushed. For unknown reasons, instanciated\n// the path array with all the values would lead to a crash when updating\n// frequently (#5193).\npath=[];path.push('M',crispX-halfWidth,bottomBox,'L',crispX-halfWidth,topBox,'L',crispX+halfWidth,topBox,'L',crispX+halfWidth,bottomBox,'Z',// Use a close statement to ensure a nice rectangle #2602\n'M',crispX,topBox,'L',crispX,hasTopWhisker?mathRound(point.plotY):topBox,// #460, #2094\n'M',crispX,bottomBox,'L',crispX,hasBottomWhisker?mathRound(point.yBottom):bottomBox// #460, #2094\n);if(graphic){graphic.attr(pointAttr)// #3897\n.animate({d:path});}else{point.graphic=chart.renderer.path(path).attr(pointAttr).add(series.group).shadow(series.options.shadow);}}});}});seriesTypes.candlestick=CandlestickSeries;/* ****************************************************************************\n     * End Candlestick series code                                                *\n     *****************************************************************************/ /* ****************************************************************************\n     * Start Flags series code                                                    *\n     *****************************************************************************/var symbols=SVGRenderer.prototype.symbols;// 1 - set default options\ndefaultPlotOptions.flags=merge(defaultPlotOptions.column,{fillColor:'white',lineWidth:1,pointRange:0,// #673\n//radius: 2,\nshape:'flag',stackDistance:12,states:{hover:{lineColor:'black',fillColor:'#FCFFC5'}},style:{fontSize:'11px',fontWeight:'bold',textAlign:'center'},tooltip:{pointFormat:'{point.text}<br/>'},threshold:null,y:-30});// 2 - Create the CandlestickSeries object\nseriesTypes.flags=extendClass(seriesTypes.column,{type:'flags',sorted:false,noSharedTooltip:true,allowDG:false,takeOrdinalPosition:false,// #1074\ntrackerGroups:['markerGroup'],forceCrop:true,/**\n         * Inherit the initialization from base Series\n         */init:Series.prototype.init,/**\n         * One-to-one mapping from options to SVG attributes\n         */pointAttrToOptions:{// mapping between SVG attributes and the corresponding options\nfill:'fillColor',stroke:'color','stroke-width':'lineWidth',r:'radius'},/**\n         * Extend the translate method by placing the point on the related series\n         */translate:function(){seriesTypes.column.prototype.translate.apply(this);var series=this,options=series.options,chart=series.chart,points=series.points,cursor=points.length-1,point,lastPoint,optionsOnSeries=options.onSeries,onSeries=optionsOnSeries&&chart.get(optionsOnSeries),onKey=options.onKey||'y',step=onSeries&&onSeries.options.step,onData=onSeries&&onSeries.points,i=onData&&onData.length,xAxis=series.xAxis,xAxisExt=xAxis.getExtremes(),leftPoint,lastX,rightPoint,currentDataGrouping;// relate to a master series\nif(onSeries&&onSeries.visible&&i){currentDataGrouping=onSeries.currentDataGrouping;lastX=onData[i-1].x+(currentDataGrouping?currentDataGrouping.totalRange:0);// #2374\n// sort the data points\npoints.sort(function(a,b){return a.x-b.x;});onKey='plot'+onKey[0].toUpperCase()+onKey.substr(1);while(i--&&points[cursor]){point=points[cursor];leftPoint=onData[i];if(leftPoint.x<=point.x&&leftPoint[onKey]!==undefined){if(point.x<=lastX){// #803\npoint.plotY=leftPoint[onKey];// interpolate between points, #666\nif(leftPoint.x<point.x&&!step){rightPoint=onData[i+1];if(rightPoint&&rightPoint[onKey]!==UNDEFINED){point.plotY+=(point.x-leftPoint.x)/(rightPoint.x-leftPoint.x)*(// the distance ratio, between 0 and 1\nrightPoint[onKey]-leftPoint[onKey]);// the y distance\n}}}cursor--;i++;// check again for points in the same x position\nif(cursor<0){break;}}}}// Add plotY position and handle stacking\neach(points,function(point,i){var stackIndex;// Undefined plotY means the point is either on axis, outside series range or hidden series.\n// If the series is outside the range of the x axis it should fall through with\n// an undefined plotY, but then we must remove the shapeArgs (#847).\nif(point.plotY===UNDEFINED){if(point.x>=xAxisExt.min&&point.x<=xAxisExt.max){// we're inside xAxis range\npoint.plotY=chart.chartHeight-xAxis.bottom-(xAxis.opposite?xAxis.height:0)+xAxis.offset-chart.plotTop;}else{point.shapeArgs={};// 847\n}}// if multiple flags appear at the same x, order them into a stack\nlastPoint=points[i-1];if(lastPoint&&lastPoint.plotX===point.plotX){if(lastPoint.stackIndex===UNDEFINED){lastPoint.stackIndex=0;}stackIndex=lastPoint.stackIndex+1;}point.stackIndex=stackIndex;// #3639\n});},/**\n         * Draw the markers\n         */drawPoints:function(){var series=this,pointAttr,seriesPointAttr=series.pointAttr[''],points=series.points,chart=series.chart,renderer=chart.renderer,plotX,plotY,options=series.options,optionsY=options.y,shape,i,point,graphic,stackIndex,anchorX,anchorY,outsideRight,yAxis=series.yAxis;i=points.length;while(i--){point=points[i];outsideRight=point.plotX>series.xAxis.len;plotX=point.plotX;if(plotX>0){// #3119\nplotX-=pick(point.lineWidth,options.lineWidth)%2;// #4285\n}stackIndex=point.stackIndex;shape=point.options.shape||options.shape;plotY=point.plotY;if(plotY!==UNDEFINED){plotY=point.plotY+optionsY-(stackIndex!==UNDEFINED&&stackIndex*options.stackDistance);}anchorX=stackIndex?UNDEFINED:point.plotX;// skip connectors for higher level stacked points\nanchorY=stackIndex?UNDEFINED:point.plotY;graphic=point.graphic;// only draw the point if y is defined and the flag is within the visible area\nif(plotY!==UNDEFINED&&plotX>=0&&!outsideRight){// shortcuts\npointAttr=point.pointAttr[point.selected?'select':'']||seriesPointAttr;if(graphic){// update\ngraphic.attr({x:plotX,y:plotY,r:pointAttr.r,anchorX:anchorX,anchorY:anchorY});}else{graphic=point.graphic=renderer.label(point.options.title||options.title||'A',plotX,plotY,shape,anchorX,anchorY,options.useHTML).css(merge(options.style,point.style)).attr(pointAttr).attr({align:shape==='flag'?'left':'center',width:options.width,height:options.height}).add(series.markerGroup).shadow(options.shadow);}// Set the tooltip anchor position\npoint.tooltipPos=chart.inverted?[yAxis.len+yAxis.pos-chart.plotLeft-plotY,series.xAxis.len-plotX]:[plotX,plotY];}else if(graphic){point.graphic=graphic.destroy();}}},/**\n         * Extend the column trackers with listeners to expand and contract stacks\n         */drawTracker:function(){var series=this,points=series.points;TrackerMixin.drawTrackerPoint.apply(this);// Bring each stacked flag up on mouse over, this allows readability of vertically\n// stacked elements as well as tight points on the x axis. #1924.\neach(points,function(point){var graphic=point.graphic;if(graphic){addEvent(graphic.element,'mouseover',function(){// Raise this point\nif(point.stackIndex>0&&!point.raised){point._y=graphic.y;graphic.attr({y:point._y-8});point.raised=true;}// Revert other raised points\neach(points,function(otherPoint){if(otherPoint!==point&&otherPoint.raised&&otherPoint.graphic){otherPoint.graphic.attr({y:otherPoint._y});otherPoint.raised=false;}});});}});},/**\n         * Disable animation\n         */animate:noop,buildKDTree:noop,setClip:noop});// create the flag icon with anchor\nsymbols.flag=function(x,y,w,h,options){var anchorX=options&&options.anchorX||x,anchorY=options&&options.anchorY||y;return['M',anchorX,anchorY,'L',x,y+h,x,y,x+w,y,x+w,y+h,x,y+h,'Z'];};// create the circlepin and squarepin icons with anchor\neach(['circle','square'],function(shape){symbols[shape+'pin']=function(x,y,w,h,options){var anchorX=options&&options.anchorX,anchorY=options&&options.anchorY,path,labelTopOrBottomY;// For single-letter flags, make sure circular flags are not taller than their width\nif(shape==='circle'&&h>w){x-=mathRound((h-w)/2);w=h;}path=symbols[shape](x,y,w,h);if(anchorX&&anchorY){// if the label is below the anchor, draw the connecting line from the top edge of the label\n// otherwise start drawing from the bottom edge\nlabelTopOrBottomY=y>anchorY?y:y+h;path.push('M',anchorX,labelTopOrBottomY,'L',anchorX,anchorY);}return path;};});// The symbol callbacks are generated on the SVGRenderer object in all browsers. Even\n// VML browsers need this in order to generate shapes in export. Now share\n// them with the VMLRenderer.\nif(Renderer===Highcharts.VMLRenderer){each(['flag','circlepin','squarepin'],function(shape){VMLRenderer.prototype.symbols[shape]=symbols[shape];});}/* ****************************************************************************\n     * End Flags series code                                                      *\n     *****************************************************************************/ /* ****************************************************************************\n     * Start Scroller code                                                        *\n     *****************************************************************************/var units=[].concat(defaultDataGroupingUnits),// copy\ndefaultSeriesType,// Finding the min or max of a set of variables where we don't know if they are defined,\n// is a pattern that is repeated several places in Highcharts. Consider making this\n// a global utility method.\nnumExt=function(extreme){var numbers=grep(arguments,function(n){return isNumber(n);});if(numbers.length){return Math[extreme].apply(0,numbers);}};// add more resolution to units\nunits[4]=['day',[1,2,3,4]];// allow more days\nunits[5]=['week',[1,2,3]];// allow more weeks\ndefaultSeriesType=seriesTypes.areaspline===UNDEFINED?'line':'areaspline';extend(defaultOptions,{navigator:{//enabled: true,\nhandles:{backgroundColor:'#ebe7e8',borderColor:'#b2b1b6'},height:40,margin:25,maskFill:'rgba(128,179,236,0.3)',maskInside:true,outlineColor:'#b2b1b6',outlineWidth:1,series:{type:defaultSeriesType,color:'#4572A7',compare:null,fillOpacity:0.05,dataGrouping:{approximation:'average',enabled:true,groupPixelWidth:2,smoothed:true,units:units},dataLabels:{enabled:false,zIndex:2// #1839\n},id:PREFIX+'navigator-series',lineColor:null,// Allow color setting while disallowing default candlestick setting (#4602)\nlineWidth:1,marker:{enabled:false},pointRange:0,shadow:false,threshold:null},//top: undefined,\nxAxis:{tickWidth:0,lineWidth:0,gridLineColor:'#EEE',gridLineWidth:1,tickPixelInterval:200,labels:{align:'left',style:{color:'#888'},x:3,y:-4},crosshair:false},yAxis:{gridLineWidth:0,startOnTick:false,endOnTick:false,minPadding:0.1,maxPadding:0.1,labels:{enabled:false},crosshair:false,title:{text:null},tickWidth:0}},scrollbar:{//enabled: true\nheight:isTouchDevice?20:14,barBackgroundColor:'#bfc8d1',barBorderRadius:0,barBorderWidth:1,barBorderColor:'#bfc8d1',buttonArrowColor:'#666',buttonBackgroundColor:'#ebe7e8',buttonBorderColor:'#bbb',buttonBorderRadius:0,buttonBorderWidth:1,minWidth:6,rifleColor:'#666',trackBackgroundColor:'#eeeeee',trackBorderColor:'#eeeeee',trackBorderWidth:1,// trackBorderRadius: 0\nliveRedraw:hasSVG&&!isTouchDevice}});/**\n     * The Scroller class\n     * @param {Object} chart\n     */function Scroller(chart){var chartOptions=chart.options,navigatorOptions=chartOptions.navigator,navigatorEnabled=navigatorOptions.enabled,scrollbarOptions=chartOptions.scrollbar,scrollbarEnabled=scrollbarOptions.enabled,height=navigatorEnabled?navigatorOptions.height:0,scrollbarHeight=scrollbarEnabled?scrollbarOptions.height:0;this.handles=[];this.scrollbarButtons=[];this.elementsToDestroy=[];// Array containing the elements to destroy when Scroller is destroyed\nthis.chart=chart;this.setBaseSeries();this.height=height;this.scrollbarHeight=scrollbarHeight;this.scrollbarEnabled=scrollbarEnabled;this.navigatorEnabled=navigatorEnabled;this.navigatorOptions=navigatorOptions;this.scrollbarOptions=scrollbarOptions;this.outlineHeight=height+scrollbarHeight;// Run scroller\nthis.init();}Scroller.prototype={/**\n         * Draw one of the handles on the side of the zoomed range in the navigator\n         * @param {Number} x The x center for the handle\n         * @param {Number} index 0 for left and 1 for right\n         */drawHandle:function(x,index){var scroller=this,chart=scroller.chart,renderer=chart.renderer,elementsToDestroy=scroller.elementsToDestroy,handles=scroller.handles,handlesOptions=scroller.navigatorOptions.handles,attr={fill:handlesOptions.backgroundColor,stroke:handlesOptions.borderColor,'stroke-width':1},tempElem;// create the elements\nif(!scroller.rendered){// the group\nhandles[index]=renderer.g('navigator-handle-'+['left','right'][index]).css({cursor:'ew-resize'}).attr({zIndex:10-index})// zIndex = 3 for right handle, 4 for left / 10 - #2908\n.add();// the rectangle\ntempElem=renderer.rect(-4.5,0,9,16,0,1).attr(attr).add(handles[index]);elementsToDestroy.push(tempElem);// the rifles\ntempElem=renderer.path(['M',-1.5,4,'L',-1.5,12,'M',0.5,4,'L',0.5,12]).attr(attr).add(handles[index]);elementsToDestroy.push(tempElem);}// Place it\nhandles[index][scroller.rendered?'animate':'attr']({translateX:scroller.scrollerLeft+scroller.scrollbarHeight+parseInt(x,10),translateY:scroller.top+scroller.height/2-8});},/**\n         * Draw the scrollbar buttons with arrows\n         * @param {Number} index 0 is left, 1 is right\n         */drawScrollbarButton:function(index){var scroller=this,chart=scroller.chart,renderer=chart.renderer,elementsToDestroy=scroller.elementsToDestroy,scrollbarButtons=scroller.scrollbarButtons,scrollbarHeight=scroller.scrollbarHeight,scrollbarOptions=scroller.scrollbarOptions,tempElem;if(!scroller.rendered){scrollbarButtons[index]=renderer.g().add(scroller.scrollbarGroup);tempElem=renderer.rect(-0.5,-0.5,scrollbarHeight+1,// +1 to compensate for crispifying in rect method\nscrollbarHeight+1,scrollbarOptions.buttonBorderRadius,scrollbarOptions.buttonBorderWidth).attr({stroke:scrollbarOptions.buttonBorderColor,'stroke-width':scrollbarOptions.buttonBorderWidth,fill:scrollbarOptions.buttonBackgroundColor}).add(scrollbarButtons[index]);elementsToDestroy.push(tempElem);tempElem=renderer.path(['M',scrollbarHeight/2+(index?-1:1),scrollbarHeight/2-3,'L',scrollbarHeight/2+(index?-1:1),scrollbarHeight/2+3,scrollbarHeight/2+(index?2:-2),scrollbarHeight/2]).attr({fill:scrollbarOptions.buttonArrowColor}).add(scrollbarButtons[index]);elementsToDestroy.push(tempElem);}// adjust the right side button to the varying length of the scroll track\nif(index){scrollbarButtons[index].attr({translateX:scroller.scrollerWidth-scrollbarHeight});}},/**\n         * Render the navigator and scroll bar\n         * @param {Number} min X axis value minimum\n         * @param {Number} max X axis value maximum\n         * @param {Number} pxMin Pixel value minimum\n         * @param {Number} pxMax Pixel value maximum\n         */render:function(min,max,pxMin,pxMax){var scroller=this,chart=scroller.chart,renderer=chart.renderer,navigatorLeft,navigatorWidth,scrollerLeft,scrollerWidth,scrollbarGroup=scroller.scrollbarGroup,navigatorGroup=scroller.navigatorGroup,scrollbar=scroller.scrollbar,xAxis=scroller.xAxis,scrollbarTrack=scroller.scrollbarTrack,scrollbarHeight=scroller.scrollbarHeight,scrollbarEnabled=scroller.scrollbarEnabled,navigatorOptions=scroller.navigatorOptions,scrollbarOptions=scroller.scrollbarOptions,scrollbarMinWidth=scrollbarOptions.minWidth,height=scroller.height,top=scroller.top,navigatorEnabled=scroller.navigatorEnabled,outlineWidth=navigatorOptions.outlineWidth,halfOutline=outlineWidth/2,zoomedMin,zoomedMax,range,scrX,scrWidth,scrollbarPad=0,outlineHeight=scroller.outlineHeight,barBorderRadius=scrollbarOptions.barBorderRadius,strokeWidth,scrollbarStrokeWidth=scrollbarOptions.barBorderWidth,centerBarX,outlineTop=top+halfOutline,rendered=scroller.rendered,verb;// Don't render the navigator until we have data (#486, #4202, #5172). Don't redraw while moving the handles (#4703).\nif(!isNumber(min)||!isNumber(max)||scroller.hasDragged&&!defined(pxMin)){return;}scroller.navigatorLeft=navigatorLeft=pick(xAxis.left,chart.plotLeft+scrollbarHeight// in case of scrollbar only, without navigator\n);scroller.navigatorWidth=navigatorWidth=pick(xAxis.len,chart.plotWidth-2*scrollbarHeight);scroller.scrollerLeft=scrollerLeft=navigatorLeft-scrollbarHeight;scroller.scrollerWidth=scrollerWidth=scrollerWidth=navigatorWidth+2*scrollbarHeight;// Get the pixel position of the handles\npxMin=pick(pxMin,xAxis.translate(min));pxMax=pick(pxMax,xAxis.translate(max));if(!isNumber(pxMin)||mathAbs(pxMin)===Infinity){// Verify (#1851, #2238)\npxMin=0;pxMax=scrollerWidth;}// Are we below the minRange? (#2618)\nif(xAxis.translate(pxMax,true)-xAxis.translate(pxMin,true)<chart.xAxis[0].minRange){return;}// handles are allowed to cross, but never exceed the plot area\nscroller.zoomedMax=mathMin(mathMax(pxMin,pxMax,0),navigatorWidth);scroller.zoomedMin=mathMin(mathMax(scroller.fixedWidth?scroller.zoomedMax-scroller.fixedWidth:mathMin(pxMin,pxMax),0),navigatorWidth);scroller.range=scroller.zoomedMax-scroller.zoomedMin;zoomedMax=mathRound(scroller.zoomedMax);zoomedMin=mathRound(scroller.zoomedMin);range=zoomedMax-zoomedMin;if(!rendered){if(navigatorEnabled){// draw the navigator group\nscroller.navigatorGroup=navigatorGroup=renderer.g('navigator').attr({zIndex:3}).add();scroller.leftShade=renderer.rect().attr({fill:navigatorOptions.maskFill}).add(navigatorGroup);if(navigatorOptions.maskInside){scroller.leftShade.css({cursor:'ew-resize'});}else{scroller.rightShade=renderer.rect().attr({fill:navigatorOptions.maskFill}).add(navigatorGroup);}scroller.outline=renderer.path().attr({'stroke-width':outlineWidth,stroke:navigatorOptions.outlineColor}).add(navigatorGroup);}if(scrollbarEnabled){// draw the scrollbar group\nscroller.scrollbarGroup=scrollbarGroup=renderer.g('scrollbar').add();// the scrollbar track\nstrokeWidth=scrollbarOptions.trackBorderWidth;scroller.scrollbarTrack=scrollbarTrack=renderer.rect().attr({x:0,y:-strokeWidth%2/2,fill:scrollbarOptions.trackBackgroundColor,stroke:scrollbarOptions.trackBorderColor,'stroke-width':strokeWidth,r:scrollbarOptions.trackBorderRadius||0,height:scrollbarHeight}).add(scrollbarGroup);// the scrollbar itself\nscroller.scrollbar=scrollbar=renderer.rect().attr({y:-scrollbarStrokeWidth%2/2,height:scrollbarHeight,fill:scrollbarOptions.barBackgroundColor,stroke:scrollbarOptions.barBorderColor,'stroke-width':scrollbarStrokeWidth,r:barBorderRadius}).add(scrollbarGroup);scroller.scrollbarRifles=renderer.path().attr({stroke:scrollbarOptions.rifleColor,'stroke-width':1}).add(scrollbarGroup);}}// place elements\nverb=rendered?'animate':'attr';if(navigatorEnabled){scroller.leftShade[verb](navigatorOptions.maskInside?{x:navigatorLeft+zoomedMin,y:top,width:zoomedMax-zoomedMin,height:height}:{x:navigatorLeft,y:top,width:zoomedMin,height:height});if(scroller.rightShade){scroller.rightShade[verb]({x:navigatorLeft+zoomedMax,y:top,width:navigatorWidth-zoomedMax,height:height});}scroller.outline[verb]({d:[M,scrollerLeft,outlineTop,// left\nL,navigatorLeft+zoomedMin-halfOutline,outlineTop,// upper left of zoomed range\nnavigatorLeft+zoomedMin-halfOutline,outlineTop+outlineHeight,// lower left of z.r.\nL,navigatorLeft+zoomedMax-halfOutline,outlineTop+outlineHeight,// lower right of z.r.\nL,navigatorLeft+zoomedMax-halfOutline,outlineTop,// upper right of z.r.\nscrollerLeft+scrollerWidth,outlineTop// right\n].concat(navigatorOptions.maskInside?[M,navigatorLeft+zoomedMin+halfOutline,outlineTop,// upper left of zoomed range\nL,navigatorLeft+zoomedMax-halfOutline,outlineTop// upper right of z.r.\n]:[])});// draw handles\nscroller.drawHandle(zoomedMin+halfOutline,0);scroller.drawHandle(zoomedMax+halfOutline,1);}// draw the scrollbar\nif(scrollbarEnabled&&scrollbarGroup){// draw the buttons\nscroller.drawScrollbarButton(0);scroller.drawScrollbarButton(1);scrollbarGroup[verb]({translateX:scrollerLeft,translateY:mathRound(outlineTop+height)});scrollbarTrack[verb]({width:scrollerWidth});// prevent the scrollbar from drawing to small (#1246)\nscrX=scrollbarHeight+zoomedMin;scrWidth=range-scrollbarStrokeWidth;if(scrWidth<scrollbarMinWidth){scrollbarPad=(scrollbarMinWidth-scrWidth)/2;scrWidth=scrollbarMinWidth;scrX-=scrollbarPad;}scroller.scrollbarPad=scrollbarPad;scrollbar[verb]({x:mathFloor(scrX)+scrollbarStrokeWidth%2/2,width:scrWidth});centerBarX=scrollbarHeight+zoomedMin+range/2-0.5;scroller.scrollbarRifles.attr({visibility:range>12?VISIBLE:HIDDEN})[verb]({d:[M,centerBarX-3,scrollbarHeight/4,L,centerBarX-3,2*scrollbarHeight/3,M,centerBarX,scrollbarHeight/4,L,centerBarX,2*scrollbarHeight/3,M,centerBarX+3,scrollbarHeight/4,L,centerBarX+3,2*scrollbarHeight/3]});}scroller.scrollbarPad=scrollbarPad;scroller.rendered=true;},/**\n         * Set up the mouse and touch events for the navigator and scrollbar\n         */addEvents:function(){var chart=this.chart,container=chart.container,mouseDownHandler=this.mouseDownHandler,mouseMoveHandler=this.mouseMoveHandler,mouseUpHandler=this.mouseUpHandler,_events;// Mouse events\n_events=[[container,'mousedown',mouseDownHandler],[container,'mousemove',mouseMoveHandler],[doc,'mouseup',mouseUpHandler]];// Touch events\nif(hasTouch){_events.push([container,'touchstart',mouseDownHandler],[container,'touchmove',mouseMoveHandler],[doc,'touchend',mouseUpHandler]);}// Add them all\neach(_events,function(args){addEvent.apply(null,args);});this._events=_events;// Data events\nif(this.series){addEvent(this.series.xAxis,'foundExtremes',function(){chart.scroller.modifyNavigatorAxisExtremes();});}addEvent(chart,'redraw',function(){// Move the scrollbar after redraw, like after data updata even if axes don't redraw\nvar scroller=this.scroller,xAxis;if(scroller){xAxis=scroller.baseSeries.xAxis;if(xAxis){scroller.render(xAxis.min,xAxis.max);}}});},/**\n         * Removes the event handlers attached previously with addEvents.\n         */removeEvents:function(){each(this._events,function(args){removeEvent.apply(null,args);});this._events=UNDEFINED;if(this.navigatorEnabled&&this.baseSeries){removeEvent(this.baseSeries,'updatedData',this.updatedDataHandler);}},/**\n         * Initiate the Scroller object\n         */init:function(){var scroller=this,chart=scroller.chart,xAxis,yAxis,scrollbarHeight=scroller.scrollbarHeight,navigatorOptions=scroller.navigatorOptions,height=scroller.height,top=scroller.top,dragOffset,baseSeries=scroller.baseSeries;/**\n             * Event handler for the mouse down event.\n             */scroller.mouseDownHandler=function(e){e=chart.pointer.normalize(e);var zoomedMin=scroller.zoomedMin,zoomedMax=scroller.zoomedMax,top=scroller.top,scrollbarHeight=scroller.scrollbarHeight,scrollerLeft=scroller.scrollerLeft,scrollerWidth=scroller.scrollerWidth,navigatorLeft=scroller.navigatorLeft,navigatorWidth=scroller.navigatorWidth,scrollbarPad=scroller.scrollbarPad,range=scroller.range,chartX=e.chartX,chartY=e.chartY,baseXAxis=chart.xAxis[0],fixedMax,ext,handleSensitivity=isTouchDevice?10:7,left,isOnNavigator;if(chartY>top&&chartY<top+height+scrollbarHeight){// we're vertically inside the navigator\nisOnNavigator=!scroller.scrollbarEnabled||chartY<top+height;// grab the left handle\nif(isOnNavigator&&math.abs(chartX-zoomedMin-navigatorLeft)<handleSensitivity){scroller.grabbedLeft=true;scroller.otherHandlePos=zoomedMax;scroller.fixedExtreme=baseXAxis.max;chart.fixedRange=null;// grab the right handle\n}else if(isOnNavigator&&math.abs(chartX-zoomedMax-navigatorLeft)<handleSensitivity){scroller.grabbedRight=true;scroller.otherHandlePos=zoomedMin;scroller.fixedExtreme=baseXAxis.min;chart.fixedRange=null;// grab the zoomed range\n}else if(chartX>navigatorLeft+zoomedMin-scrollbarPad&&chartX<navigatorLeft+zoomedMax+scrollbarPad){scroller.grabbedCenter=chartX;scroller.fixedWidth=range;dragOffset=chartX-zoomedMin;// shift the range by clicking on shaded areas, scrollbar track or scrollbar buttons\n}else if(chartX>scrollerLeft&&chartX<scrollerLeft+scrollerWidth){// Center around the clicked point\nif(isOnNavigator){left=chartX-navigatorLeft-range/2;// Click on scrollbar\n}else{// Click left scrollbar button\nif(chartX<navigatorLeft){left=zoomedMin-range*0.2;// Click right scrollbar button\n}else if(chartX>scrollerLeft+scrollerWidth-scrollbarHeight){left=zoomedMin+range*0.2;// Click on scrollbar track, shift the scrollbar by one range\n}else{left=chartX<navigatorLeft+zoomedMin?// on the left\nzoomedMin-range:zoomedMax;}}if(left<0){left=0;}else if(left+range>=navigatorWidth){left=navigatorWidth-range;fixedMax=scroller.getUnionExtremes().dataMax;// #2293, #3543\n}if(left!==zoomedMin){// it has actually moved\nscroller.fixedWidth=range;// #1370\next=xAxis.toFixedRange(left,left+range,null,fixedMax);baseXAxis.setExtremes(ext.min,ext.max,true,false,{trigger:'navigator'});}}}};/**\n             * Event handler for the mouse move event.\n             */scroller.mouseMoveHandler=function(e){var scrollbarHeight=scroller.scrollbarHeight,navigatorLeft=scroller.navigatorLeft,navigatorWidth=scroller.navigatorWidth,scrollerLeft=scroller.scrollerLeft,scrollerWidth=scroller.scrollerWidth,range=scroller.range,chartX,hasDragged;// In iOS, a mousemove event with e.pageX === 0 is fired when holding the finger\n// down in the center of the scrollbar. This should be ignored.\nif(!e.touches||e.touches[0].pageX!==0){// #4696, scrollbar failed on Android\ne=chart.pointer.normalize(e);chartX=e.chartX;// validation for handle dragging\nif(chartX<navigatorLeft){chartX=navigatorLeft;}else if(chartX>scrollerLeft+scrollerWidth-scrollbarHeight){chartX=scrollerLeft+scrollerWidth-scrollbarHeight;}// drag left handle\nif(scroller.grabbedLeft){hasDragged=true;scroller.render(0,0,chartX-navigatorLeft,scroller.otherHandlePos);// drag right handle\n}else if(scroller.grabbedRight){hasDragged=true;scroller.render(0,0,scroller.otherHandlePos,chartX-navigatorLeft);// drag scrollbar or open area in navigator\n}else if(scroller.grabbedCenter){hasDragged=true;if(chartX<dragOffset){// outside left\nchartX=dragOffset;}else if(chartX>navigatorWidth+dragOffset-range){// outside right\nchartX=navigatorWidth+dragOffset-range;}scroller.render(0,0,chartX-dragOffset,chartX-dragOffset+range);}if(hasDragged&&scroller.scrollbarOptions.liveRedraw){setTimeout(function(){scroller.mouseUpHandler(e);},0);}scroller.hasDragged=hasDragged;}};/**\n             * Event handler for the mouse up event.\n             */scroller.mouseUpHandler=function(e){var ext,fixedMin,fixedMax;if(scroller.hasDragged){// When dragging one handle, make sure the other one doesn't change\nif(scroller.zoomedMin===scroller.otherHandlePos){fixedMin=scroller.fixedExtreme;}else if(scroller.zoomedMax===scroller.otherHandlePos){fixedMax=scroller.fixedExtreme;}// Snap to right edge (#4076)\nif(scroller.zoomedMax===scroller.navigatorWidth){fixedMax=scroller.getUnionExtremes().dataMax;}ext=xAxis.toFixedRange(scroller.zoomedMin,scroller.zoomedMax,fixedMin,fixedMax);if(defined(ext.min)){chart.xAxis[0].setExtremes(ext.min,ext.max,true,false,{trigger:'navigator',triggerOp:'navigator-drag',DOMEvent:e// #1838\n});}}if(e.type!=='mousemove'){scroller.grabbedLeft=scroller.grabbedRight=scroller.grabbedCenter=scroller.fixedWidth=scroller.fixedExtreme=scroller.otherHandlePos=scroller.hasDragged=dragOffset=null;}};var xAxisIndex=chart.xAxis.length,yAxisIndex=chart.yAxis.length;// make room below the chart\nchart.extraBottomMargin=scroller.outlineHeight+navigatorOptions.margin;if(scroller.navigatorEnabled){// an x axis is required for scrollbar also\nscroller.xAxis=xAxis=new Axis(chart,merge({// inherit base xAxis' break and ordinal options\nbreaks:baseSeries&&baseSeries.xAxis.options.breaks,ordinal:baseSeries&&baseSeries.xAxis.options.ordinal},navigatorOptions.xAxis,{id:'navigator-x-axis',isX:true,type:'datetime',index:xAxisIndex,height:height,offset:0,offsetLeft:scrollbarHeight,offsetRight:-scrollbarHeight,keepOrdinalPadding:true,// #2436\nstartOnTick:false,endOnTick:false,minPadding:0,maxPadding:0,zoomEnabled:false}));scroller.yAxis=yAxis=new Axis(chart,merge(navigatorOptions.yAxis,{id:'navigator-y-axis',alignTicks:false,height:height,offset:0,index:yAxisIndex,zoomEnabled:false}));// If we have a base series, initialize the navigator series\nif(baseSeries||navigatorOptions.series.data){scroller.addBaseSeries();// If not, set up an event to listen for added series\n}else if(chart.series.length===0){wrap(chart,'redraw',function(proceed,animation){// We've got one, now add it as base and reset chart.redraw\nif(chart.series.length>0&&!scroller.series){scroller.setBaseSeries();chart.redraw=proceed;// reset\n}proceed.call(chart,animation);});}// in case of scrollbar only, fake an x axis to get translation\n}else{scroller.xAxis=xAxis={translate:function(value,reverse){var axis=chart.xAxis[0],ext=axis.getExtremes(),scrollTrackWidth=chart.plotWidth-2*scrollbarHeight,min=numExt('min',axis.options.min,ext.dataMin),valueRange=numExt('max',axis.options.max,ext.dataMax)-min;return reverse?// from pixel to value\nvalue*valueRange/scrollTrackWidth+min:// from value to pixel\nscrollTrackWidth*(value-min)/valueRange;},toFixedRange:Axis.prototype.toFixedRange};}// Respond to updated data in the base series.\n// Abort if lazy-loading data from the server.\nif(baseSeries&&baseSeries.xAxis&&this.navigatorOptions.adaptToUpdatedData!==false){addEvent(baseSeries,'updatedData',this.updatedDataHandler);addEvent(baseSeries.xAxis,'foundExtremes',function(){if(baseSeries.xAxis){this.chart.scroller.modifyBaseAxisExtremes();}});// Survive Series.update()\nbaseSeries.userOptions.events=extend(baseSeries.userOptions.event,{updatedData:this.updatedDataHandler});}/**\n             * For stock charts, extend the Chart.getMargins method so that we can set the final top position\n             * of the navigator once the height of the chart, including the legend, is determined. #367.\n             */wrap(chart,'getMargins',function(proceed){var legend=this.legend,legendOptions=legend.options;proceed.apply(this,[].slice.call(arguments,1));// Compute the top position\nscroller.top=top=scroller.navigatorOptions.top||this.chartHeight-scroller.height-scroller.scrollbarHeight-this.spacing[2]-(legendOptions.verticalAlign==='bottom'&&legendOptions.enabled&&!legendOptions.floating?legend.legendHeight+pick(legendOptions.margin,10):0);if(xAxis&&yAxis){// false if navigator is disabled (#904)\nxAxis.options.top=yAxis.options.top=top;xAxis.setAxisSize();yAxis.setAxisSize();}});scroller.addEvents();},/**\n         * Get the union data extremes of the chart - the outer data extremes of the base\n         * X axis and the navigator axis.\n         */getUnionExtremes:function(returnFalseOnNoBaseSeries){var baseAxis=this.chart.xAxis[0],navAxis=this.xAxis,navAxisOptions=navAxis.options,baseAxisOptions=baseAxis.options,ret;if(!returnFalseOnNoBaseSeries||baseAxis.dataMin!==null){ret={dataMin:pick(// #4053\nnavAxisOptions&&navAxisOptions.min,numExt('min',baseAxisOptions.min,baseAxis.dataMin,navAxis.dataMin,navAxis.min)),dataMax:pick(navAxisOptions&&navAxisOptions.max,numExt('max',baseAxisOptions.max,baseAxis.dataMax,navAxis.dataMax,navAxis.max))};}return ret;},/**\n         * Set the base series. With a bit of modification we should be able to make\n         * this an API method to be called from the outside\n         */setBaseSeries:function(baseSeriesOption){var chart=this.chart;baseSeriesOption=baseSeriesOption||chart.options.navigator.baseSeries;// If we're resetting, remove the existing series\nif(this.series){this.series.remove();}// Set the new base series\nthis.baseSeries=chart.series[baseSeriesOption]||typeof baseSeriesOption==='string'&&chart.get(baseSeriesOption)||chart.series[0];// When run after render, this.xAxis already exists\nif(this.xAxis){this.addBaseSeries();}},addBaseSeries:function(){var baseSeries=this.baseSeries,baseOptions=baseSeries?baseSeries.options:{},baseData=baseOptions.data,mergedNavSeriesOptions,navigatorSeriesOptions=this.navigatorOptions.series,navigatorData;// remove it to prevent merging one by one\nnavigatorData=navigatorSeriesOptions.data;this.hasNavigatorData=!!navigatorData;// Merge the series options\nmergedNavSeriesOptions=merge(baseOptions,navigatorSeriesOptions,{enableMouseTracking:false,group:'nav',// for columns\npadXAxis:false,xAxis:'navigator-x-axis',yAxis:'navigator-y-axis',name:'Navigator',showInLegend:false,stacking:false,// We only allow one series anyway (#4823)\nisInternal:true,visible:true});// Set the data. Do a slice to avoid mutating the navigator options from base series (#4923).\nmergedNavSeriesOptions.data=navigatorData||baseData.slice(0);// Add the series\nthis.series=this.chart.initSeries(mergedNavSeriesOptions);},/**\n         * Set the scroller x axis extremes to reflect the total. The navigator extremes\n         * should always be the extremes of the union of all series in the chart as\n         * well as the navigator series.\n         */modifyNavigatorAxisExtremes:function(){var xAxis=this.xAxis,unionExtremes;if(xAxis.getExtremes){unionExtremes=this.getUnionExtremes(true);if(unionExtremes&&(unionExtremes.dataMin!==xAxis.min||unionExtremes.dataMax!==xAxis.max)){xAxis.min=unionExtremes.dataMin;xAxis.max=unionExtremes.dataMax;}}},/**\n         * Hook to modify the base axis extremes with information from the Navigator\n         */modifyBaseAxisExtremes:function(){var baseSeries=this.baseSeries,baseXAxis=baseSeries.xAxis,baseExtremes=baseXAxis.getExtremes(),baseMin=baseExtremes.min,baseMax=baseExtremes.max,baseDataMin=baseExtremes.dataMin,baseDataMax=baseExtremes.dataMax,range=baseMax-baseMin,stickToMin=this.stickToMin,stickToMax=this.stickToMax,newMax,newMin,navigatorSeries=this.series,hasSetExtremes=!!baseXAxis.setExtremes;// If the zoomed range is already at the min, move it to the right as new data\n// comes in\nif(stickToMin){newMin=baseDataMin;newMax=newMin+range;}// If the zoomed range is already at the max, move it to the right as new data\n// comes in\nif(stickToMax){newMax=baseDataMax;if(!stickToMin){// if stickToMin is true, the new min value is set above\nnewMin=mathMax(newMax-range,navigatorSeries?navigatorSeries.xData[0]:-Number.MAX_VALUE);}}// Update the extremes\nif(hasSetExtremes&&(stickToMin||stickToMax)){if(isNumber(newMin)){baseXAxis.min=baseXAxis.userMin=newMin;baseXAxis.max=baseXAxis.userMax=newMax;}}// Reset\nthis.stickToMin=this.stickToMax=null;},/**\n         * Handler for updated data on the base series. When data is modified, the navigator series\n         * must reflect it. This is called from the Chart.redraw function before axis and series \n         * extremes are computed.\n         */updatedDataHandler:function(){var scroller=this.chart.scroller,baseSeries=scroller.baseSeries,navigatorSeries=scroller.series;// Detect whether the zoomed area should stick to the minimum or maximum. If the current\n// axis minimum falls outside the new updated dataset, we must adjust.\nscroller.stickToMin=baseSeries.xAxis.min<=baseSeries.xData[0];// If the scrollbar is scrolled all the way to the right, keep right as new data \n// comes in.\nscroller.stickToMax=scroller.zoomedMax>=scroller.navigatorWidth;// Set the navigator series data to the new data of the base series\nif(navigatorSeries&&!scroller.hasNavigatorData){navigatorSeries.options.pointStart=baseSeries.xData[0];navigatorSeries.setData(baseSeries.options.data,false);// When adding points, shift it. A more fail-safe and lean procedure may be to extend the three\n// cases of updating data (addPoint, update, removePoint) directly so that this operation \n// on the base series reflects directly on the navigator series.\nif(navigatorSeries.graph&&baseSeries.graph){navigatorSeries.graph.shift=baseSeries.graph.shift;}}},/**\n         * Destroys allocated elements.\n         */destroy:function(){var scroller=this;// Disconnect events added in addEvents\nscroller.removeEvents();// Destroy properties\neach([scroller.xAxis,scroller.yAxis,scroller.leftShade,scroller.rightShade,scroller.outline,scroller.scrollbarTrack,scroller.scrollbarRifles,scroller.scrollbarGroup,scroller.scrollbar],function(prop){if(prop&&prop.destroy){prop.destroy();}});scroller.xAxis=scroller.yAxis=scroller.leftShade=scroller.rightShade=scroller.outline=scroller.scrollbarTrack=scroller.scrollbarRifles=scroller.scrollbarGroup=scroller.scrollbar=null;// Destroy elements in collection\neach([scroller.scrollbarButtons,scroller.handles,scroller.elementsToDestroy],function(coll){destroyObjectProperties(coll);});}};Highcharts.Scroller=Scroller;/**\n     * For Stock charts, override selection zooming with some special features because\n     * X axis zooming is already allowed by the Navigator and Range selector.\n     */wrap(Axis.prototype,'zoom',function(proceed,newMin,newMax){var chart=this.chart,chartOptions=chart.options,zoomType=chartOptions.chart.zoomType,previousZoom,navigator=chartOptions.navigator,rangeSelector=chartOptions.rangeSelector,ret;if(this.isXAxis&&(navigator&&navigator.enabled||rangeSelector&&rangeSelector.enabled)){// For x only zooming, fool the chart.zoom method not to create the zoom button\n// because the property already exists\nif(zoomType==='x'){chart.resetZoomButton='blocked';// For y only zooming, ignore the X axis completely\n}else if(zoomType==='y'){ret=false;// For xy zooming, record the state of the zoom before zoom selection, then when\n// the reset button is pressed, revert to this state\n}else if(zoomType==='xy'){previousZoom=this.previousZoom;if(defined(newMin)){this.previousZoom=[this.min,this.max];}else if(previousZoom){newMin=previousZoom[0];newMax=previousZoom[1];delete this.previousZoom;}}}return ret!==UNDEFINED?ret:proceed.call(this,newMin,newMax);});// Initialize scroller for stock charts\nwrap(Chart.prototype,'init',function(proceed,options,callback){addEvent(this,'beforeRender',function(){var options=this.options;if(options.navigator.enabled||options.scrollbar.enabled){this.scroller=new Scroller(this);}});proceed.call(this,options,callback);});// Pick up badly formatted point options to addPoint\nwrap(Series.prototype,'addPoint',function(proceed,options,redraw,shift,animation){var turboThreshold=this.options.turboThreshold;if(turboThreshold&&this.xData.length>turboThreshold&&isObject(options)&&!isArray(options)&&this.chart.scroller){error(20,true);}proceed.call(this,options,redraw,shift,animation);});/* ****************************************************************************\n     * End Scroller code                                                          *\n     *****************************************************************************/ /* ****************************************************************************\n     * Start Range Selector code                                                  *\n     *****************************************************************************/extend(defaultOptions,{rangeSelector:{// allButtonsEnabled: false,\n// enabled: true,\n// buttons: {Object}\n// buttonSpacing: 0,\nbuttonTheme:{width:28,height:18,fill:'#f7f7f7',padding:2,r:0,'stroke-width':0,style:{color:'#444',cursor:'pointer',fontWeight:'normal'},zIndex:7,// #484, #852\nstates:{hover:{fill:'#e7e7e7'},select:{fill:'#e7f0f9',style:{color:'black',fontWeight:'bold'}}}},height:35,// reserved space for buttons and input\ninputPosition:{align:'right'},// inputDateFormat: '%b %e, %Y',\n// inputEditDateFormat: '%Y-%m-%d',\n// inputEnabled: true,\n// inputStyle: {},\nlabelStyle:{color:'#666'// selected: undefined\n}}});defaultOptions.lang=merge(defaultOptions.lang,{rangeSelectorZoom:'Zoom',rangeSelectorFrom:'From',rangeSelectorTo:'To'});/**\n     * The object constructor for the range selector\n     * @param {Object} chart\n     */function RangeSelector(chart){// Run RangeSelector\nthis.init(chart);}RangeSelector.prototype={/**\n         * The method to run when one of the buttons in the range selectors is clicked\n         * @param {Number} i The index of the button\n         * @param {Object} rangeOptions\n         * @param {Boolean} redraw\n         */clickButton:function(i,redraw){var rangeSelector=this,selected=rangeSelector.selected,chart=rangeSelector.chart,buttons=rangeSelector.buttons,rangeOptions=rangeSelector.buttonOptions[i],baseAxis=chart.xAxis[0],unionExtremes=chart.scroller&&chart.scroller.getUnionExtremes()||baseAxis||{},dataMin=unionExtremes.dataMin,dataMax=unionExtremes.dataMax,newMin,newMax=baseAxis&&mathRound(mathMin(baseAxis.max,pick(dataMax,baseAxis.max))),// #1568\nnow,type=rangeOptions.type,baseXAxisOptions,range=rangeOptions._range,rangeMin,year,minSetting,rangeSetting,ctx,dataGrouping=rangeOptions.dataGrouping;if(dataMin===null||dataMax===null||// chart has no data, base series is removed\ni===rangeSelector.selected){// same button is clicked twice\nreturn;}// Set the fixed range before range is altered\nchart.fixedRange=range;// Apply dataGrouping associated to button\nif(dataGrouping){this.forcedDataGrouping=true;Axis.prototype.setDataGrouping.call(baseAxis||{chart:this.chart},dataGrouping,false);}// Apply range\nif(type==='month'||type==='year'){if(!baseAxis){// This is set to the user options and picked up later when the axis is instantiated\n// so that we know the min and max.\nrange=rangeOptions;}else{ctx={range:rangeOptions,max:newMax,dataMin:dataMin,dataMax:dataMax};newMin=baseAxis.minFromRange.call(ctx);if(isNumber(ctx.newMax)){newMax=ctx.newMax;}}// Fixed times like minutes, hours, days\n}else if(range){newMin=mathMax(newMax-range,dataMin);newMax=mathMin(newMin+range,dataMax);}else if(type==='ytd'){// On user clicks on the buttons, or a delayed action running from the beforeRender\n// event (below), the baseAxis is defined.\nif(baseAxis){// When \"ytd\" is the pre-selected button for the initial view, its calculation\n// is delayed and rerun in the beforeRender event (below). When the series\n// are initialized, but before the chart is rendered, we have access to the xData\n// array (#942).\nif(dataMax===UNDEFINED){dataMin=Number.MAX_VALUE;dataMax=Number.MIN_VALUE;each(chart.series,function(series){var xData=series.xData;// reassign it to the last item\ndataMin=mathMin(xData[0],dataMin);dataMax=mathMax(xData[xData.length-1],dataMax);});redraw=false;}now=new Date(dataMax);year=now.getFullYear();newMin=rangeMin=mathMax(dataMin||0,Date.UTC(year,0,1));now=now.getTime();newMax=mathMin(dataMax||now,now);// \"ytd\" is pre-selected. We don't yet have access to processed point and extremes data\n// (things like pointStart and pointInterval are missing), so we delay the process (#942)\n}else{addEvent(chart,'beforeRender',function(){rangeSelector.clickButton(i);});return;}}else if(type==='all'&&baseAxis){newMin=dataMin;newMax=dataMax;}// Deselect previous button\nif(buttons[selected]){buttons[selected].setState(0);}// Select this button\nif(buttons[i]){buttons[i].setState(2);rangeSelector.lastSelected=i;}// Update the chart\nif(!baseAxis){// Axis not yet instanciated. Temporarily set min and range\n// options and remove them on chart load (#4317).\nbaseXAxisOptions=chart.options.xAxis[0];rangeSetting=baseXAxisOptions.range;baseXAxisOptions.range=range;minSetting=baseXAxisOptions.min;baseXAxisOptions.min=rangeMin;rangeSelector.setSelected(i);addEvent(chart,'load',function resetMinAndRange(){baseXAxisOptions.range=rangeSetting;baseXAxisOptions.min=minSetting;});}else{// Existing axis object. Set extremes after render time.\nbaseAxis.setExtremes(newMin,newMax,pick(redraw,1),0,{trigger:'rangeSelectorButton',rangeSelectorButton:rangeOptions});rangeSelector.setSelected(i);}},/**\n         * Set the selected option. This method only sets the internal flag, it doesn't\n         * update the buttons or the actual zoomed range.\n         */setSelected:function(selected){this.selected=this.options.selected=selected;},/**\n         * The default buttons for pre-selecting time frames\n         */defaultButtons:[{type:'month',count:1,text:'1m'},{type:'month',count:3,text:'3m'},{type:'month',count:6,text:'6m'},{type:'ytd',text:'YTD'},{type:'year',count:1,text:'1y'},{type:'all',text:'All'}],/**\n         * Initialize the range selector\n         */init:function(chart){var rangeSelector=this,options=chart.options.rangeSelector,buttonOptions=options.buttons||[].concat(rangeSelector.defaultButtons),selectedOption=options.selected,blurInputs=rangeSelector.blurInputs=function(){var minInput=rangeSelector.minInput,maxInput=rangeSelector.maxInput;if(minInput&&minInput.blur){//#3274 in some case blur is not defined\nfireEvent(minInput,'blur');//#3274\n}if(maxInput&&maxInput.blur){//#3274 in some case blur is not defined\nfireEvent(maxInput,'blur');//#3274\n}};rangeSelector.chart=chart;rangeSelector.options=options;rangeSelector.buttons=[];chart.extraTopMargin=options.height;rangeSelector.buttonOptions=buttonOptions;addEvent(chart.container,'mousedown',blurInputs);addEvent(chart,'resize',blurInputs);// Extend the buttonOptions with actual range\neach(buttonOptions,rangeSelector.computeButtonRange);// zoomed range based on a pre-selected button index\nif(selectedOption!==UNDEFINED&&buttonOptions[selectedOption]){this.clickButton(selectedOption,false);}addEvent(chart,'load',function(){// If a data grouping is applied to the current button, release it when extremes change\naddEvent(chart.xAxis[0],'setExtremes',function(e){if(this.max-this.min!==chart.fixedRange&&e.trigger!=='rangeSelectorButton'&&e.trigger!=='updatedData'&&rangeSelector.forcedDataGrouping){this.setDataGrouping(false,false);}});// Normalize the pressed button whenever a new range is selected\naddEvent(chart.xAxis[0],'afterSetExtremes',function(){rangeSelector.updateButtonStates(true);});});},/**\n         * Dynamically update the range selector buttons after a new range has been set\n         */updateButtonStates:function(updating){var rangeSelector=this,chart=this.chart,baseAxis=chart.xAxis[0],unionExtremes=chart.scroller&&chart.scroller.getUnionExtremes()||baseAxis,dataMin=unionExtremes.dataMin,dataMax=unionExtremes.dataMax,selected=rangeSelector.selected,allButtonsEnabled=rangeSelector.options.allButtonsEnabled,buttons=rangeSelector.buttons;if(updating&&chart.fixedRange!==mathRound(baseAxis.max-baseAxis.min)){if(buttons[selected]){buttons[selected].setState(0);}rangeSelector.setSelected(null);}each(rangeSelector.buttonOptions,function(rangeOptions,i){var actualRange=mathRound(baseAxis.max-baseAxis.min),range=rangeOptions._range,type=rangeOptions.type,count=rangeOptions.count||1,// Disable buttons where the range exceeds what is allowed in the current view\nisTooGreatRange=range>dataMax-dataMin,// Disable buttons where the range is smaller than the minimum range\nisTooSmallRange=range<baseAxis.minRange,// Disable the All button if we're already showing all\nisAllButAlreadyShowingAll=rangeOptions.type==='all'&&baseAxis.max-baseAxis.min>=dataMax-dataMin&&buttons[i].state!==2,// Disable the YTD button if the complete range is within the same year\nisYTDButNotAvailable=rangeOptions.type==='ytd'&&dateFormat('%Y',dataMin)===dateFormat('%Y',dataMax),// Set a button on export\nisSelectedForExport=chart.renderer.forExport&&i===selected,isSameRange=range===actualRange,hasNoData=!baseAxis.hasVisibleSeries;// Months and years have a variable range so we check the extremes\nif((type==='month'||type==='year')&&actualRange>={month:28,year:365}[type]*24*36e5*count&&actualRange<={month:31,year:366}[type]*24*36e5*count){isSameRange=true;}// The new zoom area happens to match the range for a button - mark it selected.\n// This happens when scrolling across an ordinal gap. It can be seen in the intraday\n// demos when selecting 1h and scroll across the night gap.\nif(isSelectedForExport||isSameRange&&i!==selected&&i===rangeSelector.lastSelected){rangeSelector.setSelected(i);buttons[i].setState(2);}else if(!allButtonsEnabled&&(isTooGreatRange||isTooSmallRange||isAllButAlreadyShowingAll||isYTDButNotAvailable||hasNoData)){buttons[i].setState(3);}else if(buttons[i].state===3){buttons[i].setState(0);}});},/**\n         * Compute and cache the range for an individual button\n         */computeButtonRange:function(rangeOptions){var type=rangeOptions.type,count=rangeOptions.count||1,// these time intervals have a fixed number of milliseconds, as opposed\n// to month, ytd and year\nfixedTimes={millisecond:1,second:1000,minute:60*1000,hour:3600*1000,day:24*3600*1000,week:7*24*3600*1000};// Store the range on the button object\nif(fixedTimes[type]){rangeOptions._range=fixedTimes[type]*count;}else if(type==='month'||type==='year'){rangeOptions._range={month:30,year:365}[type]*24*36e5*count;}},/**\n         * Set the internal and displayed value of a HTML input for the dates\n         * @param {String} name\n         * @param {Number} time\n         */setInputValue:function(name,time){var options=this.chart.options.rangeSelector;if(defined(time)){this[name+'Input'].HCTime=time;}this[name+'Input'].value=dateFormat(options.inputEditDateFormat||'%Y-%m-%d',this[name+'Input'].HCTime);this[name+'DateBox'].attr({text:dateFormat(options.inputDateFormat||'%b %e, %Y',this[name+'Input'].HCTime)});},showInput:function(name){var inputGroup=this.inputGroup,dateBox=this[name+'DateBox'];css(this[name+'Input'],{left:inputGroup.translateX+dateBox.x+PX,top:inputGroup.translateY+PX,width:dateBox.width-2+PX,height:dateBox.height-2+PX,border:'2px solid silver'});},hideInput:function(name){css(this[name+'Input'],{border:0,width:'1px',height:'1px'});this.setInputValue(name);},/**\n         * Draw either the 'from' or the 'to' HTML input box of the range selector\n         * @param {Object} name\n         */drawInput:function(name){var rangeSelector=this,chart=rangeSelector.chart,chartStyle=chart.renderer.style,renderer=chart.renderer,options=chart.options.rangeSelector,lang=defaultOptions.lang,div=rangeSelector.div,isMin=name==='min',input,label,dateBox,inputGroup=this.inputGroup;function updateExtremes(){var inputValue=input.value,value=(options.inputDateParser||Date.parse)(inputValue),xAxis=chart.xAxis[0],dataMin=xAxis.dataMin,dataMax=xAxis.dataMax;if(value!==input.previousValue){input.previousValue=value;// If the value isn't parsed directly to a value by the browser's Date.parse method,\n// like YYYY-MM-DD in IE, try parsing it a different way\nif(!isNumber(value)){value=inputValue.split('-');value=Date.UTC(pInt(value[0]),pInt(value[1])-1,pInt(value[2]));}if(isNumber(value)){// Correct for timezone offset (#433)\nif(!defaultOptions.global.useUTC){value=value+new Date().getTimezoneOffset()*60*1000;}// Validate the extremes. If it goes beyound the data min or max, use the\n// actual data extreme (#2438).\nif(isMin){if(value>rangeSelector.maxInput.HCTime){value=UNDEFINED;}else if(value<dataMin){value=dataMin;}}else{if(value<rangeSelector.minInput.HCTime){value=UNDEFINED;}else if(value>dataMax){value=dataMax;}}// Set the extremes\nif(value!==UNDEFINED){chart.xAxis[0].setExtremes(isMin?value:xAxis.min,isMin?xAxis.max:value,UNDEFINED,UNDEFINED,{trigger:'rangeSelectorInput'});}}}}// Create the text label\nthis[name+'Label']=label=renderer.label(lang[isMin?'rangeSelectorFrom':'rangeSelectorTo'],this.inputGroup.offset).attr({padding:2}).css(merge(chartStyle,options.labelStyle)).add(inputGroup);inputGroup.offset+=label.width+5;// Create an SVG label that shows updated date ranges and and records click events that\n// bring in the HTML input.\nthis[name+'DateBox']=dateBox=renderer.label('',inputGroup.offset).attr({padding:2,width:options.inputBoxWidth||90,height:options.inputBoxHeight||17,stroke:options.inputBoxBorderColor||'silver','stroke-width':1}).css(merge({textAlign:'center',color:'#444'},chartStyle,options.inputStyle)).on('click',function(){rangeSelector.showInput(name);// If it is already focused, the onfocus event doesn't fire (#3713)\nrangeSelector[name+'Input'].focus();}).add(inputGroup);inputGroup.offset+=dateBox.width+(isMin?10:0);// Create the HTML input element. This is rendered as 1x1 pixel then set to the right size\n// when focused.\nthis[name+'Input']=input=createElement('input',{name:name,className:PREFIX+'range-selector',type:'text'},extend({position:ABSOLUTE,border:0,width:'1px',// Chrome needs a pixel to see it\nheight:'1px',padding:0,textAlign:'center',fontSize:chartStyle.fontSize,fontFamily:chartStyle.fontFamily,left:'-9em',// #4798\ntop:chart.plotTop+PX// prevent jump on focus in Firefox\n},options.inputStyle),div);// Blow up the input box\ninput.onfocus=function(){rangeSelector.showInput(name);};// Hide away the input box\ninput.onblur=function(){rangeSelector.hideInput(name);};// handle changes in the input boxes\ninput.onchange=updateExtremes;input.onkeypress=function(event){// IE does not fire onchange on enter\nif(event.keyCode===13){updateExtremes();}};},/**\n         * Get the position of the range selector buttons and inputs. This can be overridden from outside for custom positioning.\n         */getPosition:function(){var chart=this.chart,options=chart.options.rangeSelector,buttonTop=pick((options.buttonPosition||{}).y,chart.plotTop-chart.axisOffset[0]-options.height);return{buttonTop:buttonTop,inputTop:buttonTop-10};},/**\n         * Render the range selector including the buttons and the inputs. The first time render\n         * is called, the elements are created and positioned. On subsequent calls, they are\n         * moved and updated.\n         * @param {Number} min X axis minimum\n         * @param {Number} max X axis maximum\n         */render:function(min,max){var rangeSelector=this,chart=rangeSelector.chart,renderer=chart.renderer,container=chart.container,chartOptions=chart.options,navButtonOptions=chartOptions.exporting&&chartOptions.exporting.enabled!==false&&chartOptions.navigation&&chartOptions.navigation.buttonOptions,options=chartOptions.rangeSelector,buttons=rangeSelector.buttons,lang=defaultOptions.lang,div=rangeSelector.div,inputGroup=rangeSelector.inputGroup,buttonTheme=options.buttonTheme,buttonPosition=options.buttonPosition||{},inputEnabled=options.inputEnabled,states=buttonTheme&&buttonTheme.states,plotLeft=chart.plotLeft,buttonLeft,pos=this.getPosition(),buttonGroup=rangeSelector.group,buttonBBox,rendered=rangeSelector.rendered;// create the elements\nif(!rendered){rangeSelector.group=buttonGroup=renderer.g('range-selector-buttons').add();rangeSelector.zoomText=renderer.text(lang.rangeSelectorZoom,pick(buttonPosition.x,plotLeft),15).css(options.labelStyle).add(buttonGroup);// button starting position\nbuttonLeft=pick(buttonPosition.x,plotLeft)+rangeSelector.zoomText.getBBox().width+5;each(rangeSelector.buttonOptions,function(rangeOptions,i){buttons[i]=renderer.button(rangeOptions.text,buttonLeft,0,function(){rangeSelector.clickButton(i);rangeSelector.isActive=true;},buttonTheme,states&&states.hover,states&&states.select,states&&states.disabled).css({textAlign:'center'}).add(buttonGroup);// increase button position for the next button\nbuttonLeft+=buttons[i].width+pick(options.buttonSpacing,5);if(rangeSelector.selected===i){buttons[i].setState(2);}});rangeSelector.updateButtonStates();// first create a wrapper outside the container in order to make\n// the inputs work and make export correct\nif(inputEnabled!==false){rangeSelector.div=div=createElement('div',null,{position:'relative',height:0,zIndex:1// above container\n});container.parentNode.insertBefore(div,container);// Create the group to keep the inputs\nrangeSelector.inputGroup=inputGroup=renderer.g('input-group').add();inputGroup.offset=0;rangeSelector.drawInput('min');rangeSelector.drawInput('max');}}// Set or update the group position\nbuttonGroup[rendered?'animate':'attr']({translateY:pos.buttonTop});if(inputEnabled!==false){// Update the alignment to the updated spacing box\ninputGroup.align(extend({y:pos.inputTop,width:inputGroup.offset,// Detect collision with the exporting buttons\nx:navButtonOptions&&pos.inputTop<(navButtonOptions.y||0)+navButtonOptions.height-chart.spacing[0]?-40:0},options.inputPosition),true,chart.spacingBox);// Hide if overlapping - inputEnabled is null or undefined\nif(!defined(inputEnabled)){buttonBBox=buttonGroup.getBBox();inputGroup[inputGroup.translateX<buttonBBox.x+buttonBBox.width+10?'hide':'show']();}// Set or reset the input values\nrangeSelector.setInputValue('min',min);rangeSelector.setInputValue('max',max);}rangeSelector.rendered=true;},/**\n         * Destroys allocated elements.\n         */destroy:function(){var minInput=this.minInput,maxInput=this.maxInput,chart=this.chart,blurInputs=this.blurInputs,key;removeEvent(chart.container,'mousedown',blurInputs);removeEvent(chart,'resize',blurInputs);// Destroy elements in collections\ndestroyObjectProperties(this.buttons);// Clear input element events\nif(minInput){minInput.onfocus=minInput.onblur=minInput.onchange=null;}if(maxInput){maxInput.onfocus=maxInput.onblur=maxInput.onchange=null;}// Destroy HTML and SVG elements\nfor(key in this){if(this[key]&&key!=='chart'){if(this[key].destroy){// SVGElement\nthis[key].destroy();}else if(this[key].nodeType){// HTML element\ndiscardElement(this[key]);}}this[key]=null;}}};/**\n     * Add logic to normalize the zoomed range in order to preserve the pressed state of range selector buttons\n     */Axis.prototype.toFixedRange=function(pxMin,pxMax,fixedMin,fixedMax){var fixedRange=this.chart&&this.chart.fixedRange,newMin=pick(fixedMin,this.translate(pxMin,true)),newMax=pick(fixedMax,this.translate(pxMax,true)),changeRatio=fixedRange&&(newMax-newMin)/fixedRange;// If the difference between the fixed range and the actual requested range is\n// too great, the user is dragging across an ordinal gap, and we need to release\n// the range selector button.\nif(changeRatio>0.7&&changeRatio<1.3){if(fixedMax){newMin=newMax-fixedRange;}else{newMax=newMin+fixedRange;}}if(!isNumber(newMin)){// #1195\nnewMin=newMax=undefined;}return{min:newMin,max:newMax};};Axis.prototype.minFromRange=function(){var rangeOptions=this.range,type=rangeOptions.type,timeName={month:'Month',year:'FullYear'}[type],min,max=this.max,dataMin,range,// Get the true range from a start date\ngetTrueRange=function(base,count){var date=new Date(base);date['set'+timeName](date['get'+timeName]()+count);return date.getTime()-base;};if(isNumber(rangeOptions)){min=this.max-rangeOptions;range=rangeOptions;}else{min=max+getTrueRange(max,-rangeOptions.count);}dataMin=pick(this.dataMin,Number.MIN_VALUE);if(!isNumber(min)){min=dataMin;}if(min<=dataMin){min=dataMin;if(range===undefined){// #4501\nrange=getTrueRange(min,rangeOptions.count);}this.newMax=mathMin(min+range,this.dataMax);}if(!isNumber(max)){min=undefined;}return min;};// Initialize scroller for stock charts\nwrap(Chart.prototype,'init',function(proceed,options,callback){addEvent(this,'init',function(){if(this.options.rangeSelector.enabled){this.rangeSelector=new RangeSelector(this);}});proceed.call(this,options,callback);});Highcharts.RangeSelector=RangeSelector;/* ****************************************************************************\n     * End Range Selector code                                                    *\n     *****************************************************************************/Chart.prototype.callbacks.push(function(chart){var extremes,scroller=chart.scroller,rangeSelector=chart.rangeSelector;function renderRangeSelector(){extremes=chart.xAxis[0].getExtremes();if(isNumber(extremes.min)){rangeSelector.render(extremes.min,extremes.max);}}function afterSetExtremesHandlerRangeSelector(e){rangeSelector.render(e.min,e.max);}function destroyEvents(){if(rangeSelector){removeEvent(chart,'resize',renderRangeSelector);removeEvent(chart.xAxis[0],'afterSetExtremes',afterSetExtremesHandlerRangeSelector);}}// initiate the scroller\nif(scroller){extremes=chart.xAxis[0].getExtremes();scroller.render(extremes.min,extremes.max);}if(rangeSelector){// redraw the scroller on setExtremes\naddEvent(chart.xAxis[0],'afterSetExtremes',afterSetExtremesHandlerRangeSelector);// redraw the scroller chart resize\naddEvent(chart,'resize',renderRangeSelector);// do it now\nrenderRangeSelector();}// Remove resize/afterSetExtremes at chart destroy\naddEvent(chart,'destroy',destroyEvents);});/**\n     * A wrapper for Chart with all the default values for a Stock chart\n     */Highcharts.StockChart=Highcharts.stockChart=function(a,b,c){var hasRenderToArg=isString(a)||a.nodeName,options=arguments[hasRenderToArg?1:0],seriesOptions=options.series,// to increase performance, don't merge the data\nopposite,// Always disable startOnTick:true on the main axis when the navigator is enabled (#1090)\nnavigatorEnabled=pick(options.navigator&&options.navigator.enabled,true),disableStartOnTick=navigatorEnabled?{startOnTick:false,endOnTick:false}:null,lineOptions={marker:{enabled:false,radius:2// gapSize: 0\n}},columnOptions={shadow:false,borderWidth:0};// apply X axis options to both single and multi y axes\noptions.xAxis=map(splat(options.xAxis||{}),function(xAxisOptions){return merge({// defaults\nminPadding:0,maxPadding:0,ordinal:true,title:{text:null},labels:{overflow:'justify'},showLastLabel:true},xAxisOptions,// user options\n{// forced options\ntype:'datetime',categories:null},disableStartOnTick);});// apply Y axis options to both single and multi y axes\noptions.yAxis=map(splat(options.yAxis||{}),function(yAxisOptions){opposite=pick(yAxisOptions.opposite,true);return merge({// defaults\nlabels:{y:-2},opposite:opposite,showLastLabel:false,title:{text:null}},yAxisOptions// user options\n);});options.series=null;options=merge({chart:{panning:true,pinchType:'x'},navigator:{enabled:true},scrollbar:{enabled:true},rangeSelector:{enabled:true},title:{text:null,style:{fontSize:'16px'}},tooltip:{shared:true,crosshairs:true},legend:{enabled:false},plotOptions:{line:lineOptions,spline:lineOptions,area:lineOptions,areaspline:lineOptions,arearange:lineOptions,areasplinerange:lineOptions,column:columnOptions,columnrange:columnOptions,candlestick:columnOptions,ohlc:columnOptions}},options,// user's options\n{// forced options\n_stock:true,// internal flag\nchart:{inverted:false}});options.series=seriesOptions;return hasRenderToArg?new Chart(a,options,c):new Chart(options,b);};// Implement the pinchType option\nwrap(Pointer.prototype,'init',function(proceed,chart,options){var pinchType=options.chart.pinchType||'';proceed.call(this,chart,options);// Pinch status\nthis.pinchX=this.pinchHor=pinchType.indexOf('x')!==-1;this.pinchY=this.pinchVert=pinchType.indexOf('y')!==-1;this.hasZoom=this.hasZoom||this.pinchHor||this.pinchVert;});// Override the automatic label alignment so that the first Y axis' labels\n// are drawn on top of the grid line, and subsequent axes are drawn outside\nwrap(Axis.prototype,'autoLabelAlign',function(proceed){var chart=this.chart,options=this.options,panes=chart._labelPanes=chart._labelPanes||{},key,labelOptions=this.options.labels;if(this.chart.options._stock&&this.coll==='yAxis'){key=options.top+','+options.height;if(!panes[key]&&labelOptions.enabled){// do it only for the first Y axis of each pane\nif(labelOptions.x===15){// default\nlabelOptions.x=0;}if(labelOptions.align===undefined){labelOptions.align='right';}panes[key]=1;return'right';}}return proceed.call(this,[].slice.call(arguments,1));});// Override getPlotLinePath to allow for multipane charts\nwrap(Axis.prototype,'getPlotLinePath',function(proceed,value,lineWidth,old,force,translatedValue){var axis=this,series=this.isLinked&&!this.series?this.linkedParent.series:this.series,chart=axis.chart,renderer=chart.renderer,axisLeft=axis.left,axisTop=axis.top,x1,y1,x2,y2,result=[],axes=[],//#3416 need a default array\naxes2,uniqueAxes,transVal;// Ignore in case of color Axis. #3360, #3524\nif(axis.coll==='colorAxis'){return proceed.apply(this,[].slice.call(arguments,1));}// Get the related axes based on series\naxes=axis.isXAxis?defined(axis.options.yAxis)?[chart.yAxis[axis.options.yAxis]]:map(series,function(s){return s.yAxis;}):defined(axis.options.xAxis)?[chart.xAxis[axis.options.xAxis]]:map(series,function(s){return s.xAxis;});// Get the related axes based options.*Axis setting #2810\naxes2=axis.isXAxis?chart.yAxis:chart.xAxis;each(axes2,function(A){if(defined(A.options.id)?A.options.id.indexOf('navigator')===-1:true){var a=A.isXAxis?'yAxis':'xAxis',rax=defined(A.options[a])?chart[a][A.options[a]]:chart[a][0];if(axis===rax){axes.push(A);}}});// Remove duplicates in the axes array. If there are no axes in the axes array,\n// we are adding an axis without data, so we need to populate this with grid\n// lines (#2796).\nuniqueAxes=axes.length?[]:[axis.isXAxis?chart.yAxis[0]:chart.xAxis[0]];//#3742\neach(axes,function(axis2){if(inArray(axis2,uniqueAxes)===-1){uniqueAxes.push(axis2);}});transVal=pick(translatedValue,axis.translate(value,null,null,old));if(isNumber(transVal)){if(axis.horiz){each(uniqueAxes,function(axis2){var skip;y1=axis2.pos;y2=y1+axis2.len;x1=x2=mathRound(transVal+axis.transB);if(x1<axisLeft||x1>axisLeft+axis.width){// outside plot area\nif(force){x1=x2=mathMin(mathMax(axisLeft,x1),axisLeft+axis.width);}else{skip=true;}}if(!skip){result.push('M',x1,y1,'L',x2,y2);}});}else{each(uniqueAxes,function(axis2){var skip;x1=axis2.pos;x2=x1+axis2.len;y1=y2=mathRound(axisTop+axis.height-transVal);if(y1<axisTop||y1>axisTop+axis.height){// outside plot area\nif(force){y1=y2=mathMin(mathMax(axisTop,y1),axis.top+axis.height);}else{skip=true;}}if(!skip){result.push('M',x1,y1,'L',x2,y2);}});}}return result.length>0?renderer.crispPolyLine(result,lineWidth||1):null;//#3557 getPlotLinePath in regular Highcharts also returns null\n});// Override getPlotBandPath to allow for multipane charts\nAxis.prototype.getPlotBandPath=function(from,to){var toPath=this.getPlotLinePath(to,null,null,true),path=this.getPlotLinePath(from,null,null,true),result=[],i;if(path&&toPath&&path.toString()!==toPath.toString()){// Go over each subpath\nfor(i=0;i<path.length;i+=6){result.push('M',path[i+1],path[i+2],'L',path[i+4],path[i+5],toPath[i+4],toPath[i+5],toPath[i+1],toPath[i+2]);}}else{// outside the axis area\nresult=null;}return result;};// Function to crisp a line with multiple segments\nSVGRenderer.prototype.crispPolyLine=function(points,width){// points format: [M, 0, 0, L, 100, 0]\n// normalize to a crisp line\nvar i;for(i=0;i<points.length;i=i+6){if(points[i+1]===points[i+4]){// Substract due to #1129. Now bottom and left axis gridlines behave the same.\npoints[i+1]=points[i+4]=mathRound(points[i+1])-width%2/2;}if(points[i+2]===points[i+5]){points[i+2]=points[i+5]=mathRound(points[i+2])+width%2/2;}}return points;};if(Renderer===Highcharts.VMLRenderer){VMLRenderer.prototype.crispPolyLine=SVGRenderer.prototype.crispPolyLine;}// Wrapper to hide the label\nwrap(Axis.prototype,'hideCrosshair',function(proceed,i){proceed.call(this,i);if(this.crossLabel){this.crossLabel=this.crossLabel.hide();}});// Wrapper to draw the label\nwrap(Axis.prototype,'drawCrosshair',function(proceed,e,point){// Draw the crosshair\nproceed.call(this,e,point);// Check if the label has to be drawn\nif(!defined(this.crosshair.label)||!this.crosshair.label.enabled){return;}var chart=this.chart,options=this.options.crosshair.label,// the label's options\nhoriz=this.horiz,// axis orientation\nopposite=this.opposite,// axis position\nleft=this.left,// left position\ntop=this.top,// top position\ncrossLabel=this.crossLabel,// reference to the svgElement\nposx,posy,crossBox,formatOption=options.format,formatFormat='',limit,align,tickInside=this.options.tickPosition==='inside',snap=this.crosshair.snap!==false,value;align=horiz?'center':opposite?this.labelAlign==='right'?'right':'left':this.labelAlign==='left'?'left':'center';// If the label does not exist yet, create it.\nif(!crossLabel){crossLabel=this.crossLabel=chart.renderer.label(null,null,null,options.shape||'callout').attr({align:options.align||align,zIndex:12,fill:options.backgroundColor||this.series[0]&&this.series[0].color||'gray',padding:pick(options.padding,8),stroke:options.borderColor||'','stroke-width':options.borderWidth||0,r:pick(options.borderRadius,3)}).css(extend({color:'white',fontWeight:'normal',fontSize:'11px',textAlign:'center'},options.style)).add();}if(horiz){posx=snap?point.plotX+left:e.chartX;posy=top+(opposite?0:this.height);}else{posx=opposite?this.width+left:0;posy=snap?point.plotY+top:e.chartY;}if(!formatOption&&!options.formatter){if(this.isDatetimeAxis){formatFormat='%b %d, %Y';}formatOption='{value'+(formatFormat?':'+formatFormat:'')+'}';}// Show the label\nvalue=snap?point[this.isXAxis?'x':'y']:this.toValue(horiz?e.chartX:e.chartY);crossLabel.attr({text:formatOption?format(formatOption,{value:value}):options.formatter.call(this,value),anchorX:horiz?posx:this.opposite?0:chart.chartWidth,anchorY:horiz?this.opposite?chart.chartHeight:0:posy,x:posx,y:posy,visibility:VISIBLE});crossBox=crossLabel.getBBox();// now it is placed we can correct its position\nif(horiz){if(tickInside&&!opposite||!tickInside&&opposite){posy=crossLabel.y-crossBox.height;}}else{posy=crossLabel.y-crossBox.height/2;}// check the edges\nif(horiz){limit={left:left-crossBox.x,right:left+this.width-crossBox.x};}else{limit={left:this.labelAlign==='left'?left:0,right:this.labelAlign==='right'?left+this.width:chart.chartWidth};}// left edge\nif(crossLabel.translateX<limit.left){posx+=limit.left-crossLabel.translateX;}// right edge\nif(crossLabel.translateX+crossBox.width>=limit.right){posx-=crossLabel.translateX+crossBox.width-limit.right;}// show the crosslabel\ncrossLabel.attr({x:posx,y:posy,visibility:'visible'});});/* ****************************************************************************\n     * Start value compare logic                                                  *\n     *****************************************************************************/var seriesInit=seriesProto.init,seriesProcessData=seriesProto.processData,pointTooltipFormatter=Point.prototype.tooltipFormatter;/**\n     * Extend series.init by adding a method to modify the y value used for plotting\n     * on the y axis. This method is called both from the axis when finding dataMin\n     * and dataMax, and from the series.translate method.\n     */seriesProto.init=function(){// Call base method\nseriesInit.apply(this,arguments);// Set comparison mode\nthis.setCompare(this.options.compare);};/**\n     * The setCompare method can be called also from the outside after render time\n     */seriesProto.setCompare=function(compare){// Set or unset the modifyValue method\nthis.modifyValue=compare==='value'||compare==='percent'?function(value,point){var compareValue=this.compareValue;if(value!==UNDEFINED){// #2601\n// get the modified value\nvalue=compare==='value'?value-compareValue:// compare value\nvalue=100*(value/compareValue)-100;// compare percent\n// record for tooltip etc.\nif(point){point.change=value;}}return value;}:null;// Mark dirty\nif(this.chart.hasRendered){this.isDirty=true;}};/**\n     * Extend series.processData by finding the first y value in the plot area,\n     * used for comparing the following values\n     */seriesProto.processData=function(){var series=this,i,keyIndex=-1,processedXData,processedYData,length,compareValue;// call base method\nseriesProcessData.apply(this,arguments);if(series.xAxis&&series.processedYData){// not pies\n// local variables\nprocessedXData=series.processedXData;processedYData=series.processedYData;length=processedYData.length;// For series with more than one value (range, OHLC etc), compare against\n// the pointValKey (#4922)\nif(series.pointArrayMap){keyIndex=inArray(series.pointValKey||'y',series.pointArrayMap);}// find the first value for comparison\nfor(i=0;i<length;i++){compareValue=keyIndex>-1?processedYData[i][keyIndex]:processedYData[i];if(isNumber(compareValue)&&processedXData[i]>=series.xAxis.min&&compareValue!==0){series.compareValue=compareValue;break;}}}};/**\n     * Modify series extremes\n     */wrap(seriesProto,'getExtremes',function(proceed){var extremes;proceed.apply(this,[].slice.call(arguments,1));if(this.modifyValue){extremes=[this.modifyValue(this.dataMin),this.modifyValue(this.dataMax)];this.dataMin=arrayMin(extremes);this.dataMax=arrayMax(extremes);}});/**\n     * Add a utility method, setCompare, to the Y axis\n     */Axis.prototype.setCompare=function(compare,redraw){if(!this.isXAxis){each(this.series,function(series){series.setCompare(compare);});if(pick(redraw,true)){this.chart.redraw();}}};/**\n     * Extend the tooltip formatter by adding support for the point.change variable\n     * as well as the changeDecimals option\n     */Point.prototype.tooltipFormatter=function(pointFormat){var point=this;pointFormat=pointFormat.replace('{point.change}',(point.change>0?'+':'')+Highcharts.numberFormat(point.change,pick(point.series.tooltipOptions.changeDecimals,2)));return pointTooltipFormatter.apply(this,[pointFormat]);};/* ****************************************************************************\n     * End value compare logic                                                    *\n     *****************************************************************************/ /**\n     * Extend the Series prototype to create a separate series clip box. This is related\n     * to using multiple panes, and a future pane logic should incorporate this feature (#2754).\n     */wrap(Series.prototype,'render',function(proceed){// Only do this on stock charts (#2939), and only if the series type handles clipping\n// in the animate method (#2975).\nif(this.chart.options._stock&&this.xAxis){// First render, initial clip box\nif(!this.clipBox&&this.animate){this.clipBox=merge(this.chart.clipBox);this.clipBox.width=this.xAxis.len;this.clipBox.height=this.yAxis.len;// On redrawing, resizing etc, update the clip rectangle\n}else if(this.chart[this.sharedClipKey]){stop(this.chart[this.sharedClipKey]);// #2998\nthis.chart[this.sharedClipKey].attr({width:this.xAxis.len,height:this.yAxis.len});}}proceed.call(this);});// global variables\nextend(Highcharts,{// Constructors\nColor:Color,Point:Point,Tick:Tick,Renderer:Renderer,SVGElement:SVGElement,SVGRenderer:SVGRenderer,// Various\narrayMin:arrayMin,arrayMax:arrayMax,charts:charts,correctFloat:correctFloat,dateFormat:dateFormat,error:error,format:format,pathAnim:pathAnim,getOptions:getOptions,hasBidiBug:hasBidiBug,isTouchDevice:isTouchDevice,setOptions:setOptions,addEvent:addEvent,removeEvent:removeEvent,createElement:createElement,discardElement:discardElement,css:css,each:each,map:map,merge:merge,splat:splat,stableSort:stableSort,extendClass:extendClass,pInt:pInt,svg:hasSVG,canvas:useCanVG,vml:!hasSVG&&!useCanVG,product:PRODUCT,version:VERSION});return Highcharts;});\n\n//# sourceURL=webpack:///./src/client/vendor/js/highstock.js?");

/***/ }),

/***/ "./src/client/vendor/js/toastr.js":
/*!****************************************!*\
  !*** ./src/client/vendor/js/toastr.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Toastr\n * Copyright 2012-2015\n * Authors: John Papa, Hans Fjällemark, and Tim Ferrell.\n * All Rights Reserved.\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\n *\n * ARIA Support: Greta Krafsig\n *\n * Project: https://github.com/CodeSeven/toastr\n */\n\n/* global define */\n(function (define) {\n  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"jquery\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($) {\n    return function () {\n      var $container;\n      var listener;\n      var toastId = 0;\n      var toastType = {\n        error: 'error',\n        info: 'info',\n        success: 'success',\n        warning: 'warning'\n      };\n      var toastr = {\n        clear: clear,\n        remove: remove,\n        error: error,\n        getContainer: getContainer,\n        info: info,\n        options: {},\n        subscribe: subscribe,\n        success: success,\n        version: '2.1.3',\n        warning: warning\n      };\n      var previousToast;\n      return toastr; ////////////////\n\n      function error(message, title, optionsOverride) {\n        return notify({\n          type: toastType.error,\n          iconClass: getOptions().iconClasses.error,\n          message: message,\n          optionsOverride: optionsOverride,\n          title: title\n        });\n      }\n\n      function getContainer(options, create) {\n        if (!options) {\n          options = getOptions();\n        }\n\n        $container = $('#' + options.containerId);\n\n        if ($container.length) {\n          return $container;\n        }\n\n        if (create) {\n          $container = createContainer(options);\n        }\n\n        return $container;\n      }\n\n      function info(message, title, optionsOverride) {\n        return notify({\n          type: toastType.info,\n          iconClass: getOptions().iconClasses.info,\n          message: message,\n          optionsOverride: optionsOverride,\n          title: title\n        });\n      }\n\n      function subscribe(callback) {\n        listener = callback;\n      }\n\n      function success(message, title, optionsOverride) {\n        return notify({\n          type: toastType.success,\n          iconClass: getOptions().iconClasses.success,\n          message: message,\n          optionsOverride: optionsOverride,\n          title: title\n        });\n      }\n\n      function warning(message, title, optionsOverride) {\n        return notify({\n          type: toastType.warning,\n          iconClass: getOptions().iconClasses.warning,\n          message: message,\n          optionsOverride: optionsOverride,\n          title: title\n        });\n      }\n\n      function clear($toastElement, clearOptions) {\n        var options = getOptions();\n\n        if (!$container) {\n          getContainer(options);\n        }\n\n        if (!clearToast($toastElement, options, clearOptions)) {\n          clearContainer(options);\n        }\n      }\n\n      function remove($toastElement) {\n        var options = getOptions();\n\n        if (!$container) {\n          getContainer(options);\n        }\n\n        if ($toastElement && $(':focus', $toastElement).length === 0) {\n          removeToast($toastElement);\n          return;\n        }\n\n        if ($container.children().length) {\n          $container.remove();\n        }\n      } // internal functions\n\n\n      function clearContainer(options) {\n        var toastsToClear = $container.children();\n\n        for (var i = toastsToClear.length - 1; i >= 0; i--) {\n          clearToast($(toastsToClear[i]), options);\n        }\n      }\n\n      function clearToast($toastElement, options, clearOptions) {\n        var force = clearOptions && clearOptions.force ? clearOptions.force : false;\n\n        if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {\n          $toastElement[options.hideMethod]({\n            duration: options.hideDuration,\n            easing: options.hideEasing,\n            complete: function () {\n              removeToast($toastElement);\n            }\n          });\n          return true;\n        }\n\n        return false;\n      }\n\n      function createContainer(options) {\n        $container = $('<div/>').attr('id', options.containerId).addClass(options.positionClass);\n        $container.appendTo($(options.target));\n        return $container;\n      }\n\n      function getDefaults() {\n        return {\n          tapToDismiss: true,\n          toastClass: 'toast',\n          containerId: 'toast-container',\n          debug: false,\n          showMethod: 'fadeIn',\n          //fadeIn, slideDown, and show are built into jQuery\n          showDuration: 300,\n          showEasing: 'swing',\n          //swing and linear are built into jQuery\n          onShown: undefined,\n          hideMethod: 'fadeOut',\n          hideDuration: 1000,\n          hideEasing: 'swing',\n          onHidden: undefined,\n          closeMethod: false,\n          closeDuration: false,\n          closeEasing: false,\n          closeOnHover: true,\n          extendedTimeOut: 1000,\n          iconClasses: {\n            error: 'toast-error',\n            info: 'toast-info',\n            success: 'toast-success',\n            warning: 'toast-warning'\n          },\n          iconClass: 'toast-info',\n          positionClass: 'toast-top-right',\n          timeOut: 5000,\n          // Set timeOut and extendedTimeOut to 0 to make it sticky\n          titleClass: 'toast-title',\n          messageClass: 'toast-message',\n          escapeHtml: false,\n          target: 'body',\n          closeHtml: '<button type=\"button\">&times;</button>',\n          closeClass: 'toast-close-button',\n          newestOnTop: true,\n          preventDuplicates: false,\n          progressBar: false,\n          progressClass: 'toast-progress',\n          rtl: false\n        };\n      }\n\n      function publish(args) {\n        if (!listener) {\n          return;\n        }\n\n        listener(args);\n      }\n\n      function notify(map) {\n        var options = getOptions();\n        var iconClass = map.iconClass || options.iconClass;\n\n        if (typeof map.optionsOverride !== 'undefined') {\n          options = $.extend(options, map.optionsOverride);\n          iconClass = map.optionsOverride.iconClass || iconClass;\n        }\n\n        if (shouldExit(options, map)) {\n          return;\n        }\n\n        toastId++;\n        $container = getContainer(options, true);\n        var intervalId = null;\n        var $toastElement = $('<div/>');\n        var $titleElement = $('<div/>');\n        var $messageElement = $('<div/>');\n        var $progressElement = $('<div/>');\n        var $closeElement = $(options.closeHtml);\n        var progressBar = {\n          intervalId: null,\n          hideEta: null,\n          maxHideTime: null\n        };\n        var response = {\n          toastId: toastId,\n          state: 'visible',\n          startTime: new Date(),\n          options: options,\n          map: map\n        };\n        personalizeToast();\n        displayToast();\n        handleEvents();\n        publish(response);\n\n        if (options.debug && console) {\n          console.log(response);\n        }\n\n        return $toastElement;\n\n        function escapeHtml(source) {\n          if (source == null) {\n            source = '';\n          }\n\n          return source.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n\n        function personalizeToast() {\n          setIcon();\n          setTitle();\n          setMessage();\n          setCloseButton();\n          setProgressBar();\n          setRTL();\n          setSequence();\n          setAria();\n        }\n\n        function setAria() {\n          var ariaValue = '';\n\n          switch (map.iconClass) {\n            case 'toast-success':\n            case 'toast-info':\n              ariaValue = 'polite';\n              break;\n\n            default:\n              ariaValue = 'assertive';\n          }\n\n          $toastElement.attr('aria-live', ariaValue);\n        }\n\n        function handleEvents() {\n          if (options.closeOnHover) {\n            $toastElement.hover(stickAround, delayedHideToast);\n          }\n\n          if (!options.onclick && options.tapToDismiss) {\n            $toastElement.click(hideToast);\n          }\n\n          if (options.closeButton && $closeElement) {\n            $closeElement.click(function (event) {\n              if (event.stopPropagation) {\n                event.stopPropagation();\n              } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\n                event.cancelBubble = true;\n              }\n\n              if (options.onCloseClick) {\n                options.onCloseClick(event);\n              }\n\n              hideToast(true);\n            });\n          }\n\n          if (options.onclick) {\n            $toastElement.click(function (event) {\n              options.onclick(event);\n              hideToast();\n            });\n          }\n        }\n\n        function displayToast() {\n          $toastElement.hide();\n          $toastElement[options.showMethod]({\n            duration: options.showDuration,\n            easing: options.showEasing,\n            complete: options.onShown\n          });\n\n          if (options.timeOut > 0) {\n            intervalId = setTimeout(hideToast, options.timeOut);\n            progressBar.maxHideTime = parseFloat(options.timeOut);\n            progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n\n            if (options.progressBar) {\n              progressBar.intervalId = setInterval(updateProgress, 10);\n            }\n          }\n        }\n\n        function setIcon() {\n          if (map.iconClass) {\n            $toastElement.addClass(options.toastClass).addClass(iconClass);\n          }\n        }\n\n        function setSequence() {\n          if (options.newestOnTop) {\n            $container.prepend($toastElement);\n          } else {\n            $container.append($toastElement);\n          }\n        }\n\n        function setTitle() {\n          if (map.title) {\n            var suffix = map.title;\n\n            if (options.escapeHtml) {\n              suffix = escapeHtml(map.title);\n            }\n\n            $titleElement.append(suffix).addClass(options.titleClass);\n            $toastElement.append($titleElement);\n          }\n        }\n\n        function setMessage() {\n          if (map.message) {\n            var suffix = map.message;\n\n            if (options.escapeHtml) {\n              suffix = escapeHtml(map.message);\n            }\n\n            $messageElement.append(suffix).addClass(options.messageClass);\n            $toastElement.append($messageElement);\n          }\n        }\n\n        function setCloseButton() {\n          if (options.closeButton) {\n            $closeElement.addClass(options.closeClass).attr('role', 'button');\n            $toastElement.prepend($closeElement);\n          }\n        }\n\n        function setProgressBar() {\n          if (options.progressBar) {\n            $progressElement.addClass(options.progressClass);\n            $toastElement.prepend($progressElement);\n          }\n        }\n\n        function setRTL() {\n          if (options.rtl) {\n            $toastElement.addClass('rtl');\n          }\n        }\n\n        function shouldExit(options, map) {\n          if (options.preventDuplicates) {\n            if (map.message === previousToast) {\n              return true;\n            } else {\n              previousToast = map.message;\n            }\n          }\n\n          return false;\n        }\n\n        function hideToast(override) {\n          var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\n          var duration = override && options.closeDuration !== false ? options.closeDuration : options.hideDuration;\n          var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;\n\n          if ($(':focus', $toastElement).length && !override) {\n            return;\n          }\n\n          clearTimeout(progressBar.intervalId);\n          return $toastElement[method]({\n            duration: duration,\n            easing: easing,\n            complete: function () {\n              removeToast($toastElement);\n              clearTimeout(intervalId);\n\n              if (options.onHidden && response.state !== 'hidden') {\n                options.onHidden();\n              }\n\n              response.state = 'hidden';\n              response.endTime = new Date();\n              publish(response);\n            }\n          });\n        }\n\n        function delayedHideToast() {\n          if (options.timeOut > 0 || options.extendedTimeOut > 0) {\n            intervalId = setTimeout(hideToast, options.extendedTimeOut);\n            progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\n            progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n          }\n        }\n\n        function stickAround() {\n          clearTimeout(intervalId);\n          progressBar.hideEta = 0;\n          $toastElement.stop(true, true)[options.showMethod]({\n            duration: options.showDuration,\n            easing: options.showEasing\n          });\n        }\n\n        function updateProgress() {\n          var percentage = (progressBar.hideEta - new Date().getTime()) / progressBar.maxHideTime * 100;\n          $progressElement.width(percentage + '%');\n        }\n      }\n\n      function getOptions() {\n        return $.extend({}, getDefaults(), toastr.options);\n      }\n\n      function removeToast($toastElement) {\n        if (!$container) {\n          $container = getContainer();\n        }\n\n        if ($toastElement.is(':visible')) {\n          return;\n        }\n\n        $toastElement.remove();\n        $toastElement = null;\n\n        if ($container.children().length === 0) {\n          $container.remove();\n          previousToast = undefined;\n        }\n      }\n    }();\n  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n})(__webpack_require__(/*! !webpack amd define */ \"./node_modules/webpack/buildin/amd-define.js\"));\n\n//# sourceURL=webpack:///./src/client/vendor/js/toastr.js?");

/***/ }),

/***/ "backbone":
/*!***************************!*\
  !*** external "backbone" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"backbone\");\n\n//# sourceURL=webpack:///external_%22backbone%22?");

/***/ }),

/***/ "backbone.marionette":
/*!**************************************!*\
  !*** external "backbone.marionette" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"backbone.marionette\");\n\n//# sourceURL=webpack:///external_%22backbone.marionette%22?");

/***/ }),

/***/ "backbone.radio":
/*!*********************************!*\
  !*** external "backbone.radio" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"backbone.radio\");\n\n//# sourceURL=webpack:///external_%22backbone.radio%22?");

/***/ }),

/***/ "bootstrap":
/*!****************************!*\
  !*** external "bootstrap" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"bootstrap\");\n\n//# sourceURL=webpack:///external_%22bootstrap%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jquery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"jquery\");\n\n//# sourceURL=webpack:///external_%22jquery%22?");

/***/ })

/******/ });